{"ast":null,"code":"import { defineStore } from \"pinia\";\nimport Request from \"@/api\";\nimport { useToast } from \"./toast.pinia\";\nexport const useDoctors = defineStore('doctors', {\n  state: () => ({\n    doctors: [],\n    doctor: {}\n  }),\n  actions: {\n    createDoctor(form) {\n      Request({\n        url: \"doctor\",\n        method: \"post\",\n        data: form\n      }).then(res => {\n        console.log(res);\n      }).catch(error => {\n        useToast().error(error);\n      });\n    },\n    getAllDoctors() {\n      Request({\n        url: \"doctor\",\n        method: \"get\"\n      }).then(res => {\n        this.doctors = res.data;\n        console.log(res);\n      }).catch(error => {\n        useToast().error(error);\n      });\n    },\n    getOneDoctor(id) {\n      Request({\n        url: `doctor/${id}`,\n        method: \"get\"\n      }).then(res => {\n        this.doctor = res.data;\n        console.log(res);\n      }).catch(error => {\n        useToast().error(error);\n      });\n    }\n  }\n});","map":{"version":3,"names":["defineStore","Request","useToast","useDoctors","state","doctors","doctor","actions","createDoctor","form","url","method","data","then","res","console","log","catch","error","getAllDoctors","getOneDoctor","id"],"sources":["/Users/air/Documents/crm-front/src/store/doctors.pinia.js"],"sourcesContent":["import {defineStore} from \"pinia\";\nimport Request from \"@/api\";\nimport { useToast } from \"./toast.pinia\";\n\nexport const useDoctors = defineStore('doctors', {\n    state: () => ({\n        doctors: [],\n        doctor:{}\n    }),\n    actions: {\n        createDoctor(form){\n            Request({\n                url:\"doctor\",\n                method:\"post\",\n                data:form\n            }).then((res) => {\n                console.log(res);\n            }).catch((error) => {\n                useToast().error(error)\n            })\n        },\n        getAllDoctors(){\n            Request({\n                url:\"doctor\",\n                method:\"get\"\n            }).then((res) => {\n                this.doctors = res.data\n                console.log(res);\n            }).catch((error) => {\n                useToast().error(error)\n            })\n        },\n        getOneDoctor(id){\n            Request({\n                url:`doctor/${id}`,\n                method:\"get\"\n            }).then((res) => {\n                this.doctor = res.data\n                console.log(res);\n            }).catch((error) => {\n                useToast().error(error)\n            })\n        }\n    }\n});\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AACjC,OAAOC,OAAO,MAAM,OAAO;AAC3B,SAASC,QAAQ,QAAQ,eAAe;AAExC,OAAO,MAAMC,UAAU,GAAGH,WAAW,CAAC,SAAS,EAAE;EAC7CI,KAAK,EAAEA,CAAA,MAAO;IACVC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAC,CAAC;EACZ,CAAC,CAAC;EACFC,OAAO,EAAE;IACLC,YAAYA,CAACC,IAAI,EAAC;MACdR,OAAO,CAAC;QACJS,GAAG,EAAC,QAAQ;QACZC,MAAM,EAAC,MAAM;QACbC,IAAI,EAACH;MACT,CAAC,CAAC,CAACI,IAAI,CAAEC,GAAG,IAAK;QACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB,CAAC,CAAC,CAACG,KAAK,CAAEC,KAAK,IAAK;QAChBhB,QAAQ,CAAC,CAAC,CAACgB,KAAK,CAACA,KAAK,CAAC;MAC3B,CAAC,CAAC;IACN,CAAC;IACDC,aAAaA,CAAA,EAAE;MACXlB,OAAO,CAAC;QACJS,GAAG,EAAC,QAAQ;QACZC,MAAM,EAAC;MACX,CAAC,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACT,OAAO,GAAGS,GAAG,CAACF,IAAI;QACvBG,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB,CAAC,CAAC,CAACG,KAAK,CAAEC,KAAK,IAAK;QAChBhB,QAAQ,CAAC,CAAC,CAACgB,KAAK,CAACA,KAAK,CAAC;MAC3B,CAAC,CAAC;IACN,CAAC;IACDE,YAAYA,CAACC,EAAE,EAAC;MACZpB,OAAO,CAAC;QACJS,GAAG,EAAE,UAASW,EAAG,EAAC;QAClBV,MAAM,EAAC;MACX,CAAC,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACR,MAAM,GAAGQ,GAAG,CAACF,IAAI;QACtBG,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB,CAAC,CAAC,CAACG,KAAK,CAAEC,KAAK,IAAK;QAChBhB,QAAQ,CAAC,CAAC,CAACgB,KAAK,CAACA,KAAK,CAAC;MAC3B,CAAC,CAAC;IACN;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}