{"ast":null,"code":"import { onMounted, reactive, ref } from 'vue';\nimport { useDoctors } from \"@/store/doctors.pinia\";\nimport router from '@/router';\nimport TheComponentHeader from '@/components/TheComponentHeader.vue';\nimport { storeToRefs } from 'pinia';\nexport default {\n  __name: 'DoctorForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const ruleFormRef = ref();\n    const doctorId = ref(null);\n    const storeDoctor = useDoctors();\n    const {\n      doctor\n    } = storeToRefs(storeDoctor);\n    const ruleForm = reactive({\n      doctorName: '',\n      workTime: null,\n      surname: '',\n      category: '',\n      serviceCost: '400000'\n    });\n    const rules = reactive({\n      doctorName: [{\n        required: true,\n        message: 'Iltimos ism kiriting',\n        trigger: 'blur'\n      }],\n      surname: [{\n        required: true,\n        message: 'Iltimos familiya kiriting',\n        trigger: 'blur'\n      }],\n      category: [{\n        required: true,\n        message: 'Iltimos kategoriya kiriting',\n        trigger: 'blur'\n      }],\n      serviceCost: [{\n        required: true,\n        message: 'Iltimos xizmat narxini kiriting',\n        trigger: 'blur'\n      }],\n      workTime: [{\n        type: 'date',\n        required: true,\n        message: 'Iltimos ishlash vaqtini kiriting',\n        trigger: 'change'\n      }]\n    });\n    const submitForm = async formEl => {\n      if (!formEl) return;\n      await formEl.validate((valid, fields) => {\n        if (valid) {\n          useDoctors().createDoctor(ruleForm);\n          router.go(-1);\n        } else {\n          console.log('error submit!', fields);\n        }\n      });\n    };\n    const resetForm = formEl => {\n      if (!formEl) return;\n      formEl.resetFields();\n    };\n    onMounted(async () => {\n      if (router.currentRoute.value.params.id) {\n        doctorId.value = router.currentRoute.value.params.id;\n        const result = await useDoctors().getOneDoctor(doctorId.value);\n        console.log(result);\n        ruleForm.doctorName = doctor.value.name;\n        ruleForm.category = doctor.value.category;\n        ruleForm.serviceCost = doctor.value.serviceCost;\n        ruleForm.surname = doctor.value.surname;\n        ruleForm.workTime = doctor.value.workTime;\n      }\n    });\n    const __returned__ = {\n      ruleFormRef,\n      doctorId,\n      storeDoctor,\n      doctor,\n      ruleForm,\n      rules,\n      submitForm,\n      resetForm,\n      onMounted,\n      reactive,\n      ref,\n      get useDoctors() {\n        return useDoctors;\n      },\n      get router() {\n        return router;\n      },\n      TheComponentHeader,\n      get storeToRefs() {\n        return storeToRefs;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","reactive","ref","useDoctors","router","TheComponentHeader","storeToRefs","ruleFormRef","doctorId","storeDoctor","doctor","ruleForm","doctorName","workTime","surname","category","serviceCost","rules","required","message","trigger","type","submitForm","formEl","validate","valid","fields","createDoctor","go","console","log","resetForm","resetFields","currentRoute","value","params","id","result","getOneDoctor","name"],"sources":["/Users/air/Documents/crm-front/src/views/doctors/DoctorForm.vue"],"sourcesContent":["<template>\n    <TheComponentHeader \n    header-title=\"Doktor qo'shish\"\n    route=\"DoctorList\"\n    btn-title=\"Orqaga\"\n    />\n{{ doctor }}\n    <el-form\n    ref=\"ruleFormRef\"\n    :model=\"ruleForm\"\n    :rules=\"rules\"\n    class=\"demo-ruleForm\"\n    >\n    <el-form-item label=\"Doktor ismi\" prop=\"doctorName\">\n        <el-input v-model=\"ruleForm.doctorName\"  autosize/>\n    </el-form-item>\n    <el-form-item label=\"Familiyasi\" prop=\"surname\">\n        <el-input v-model=\"ruleForm.surname\" type=\"input\" />\n    </el-form-item>\n    <el-form-item label=\"Kategoriyasi\" prop=\"category\">\n        <el-input v-model=\"ruleForm.category\" type=\"input\" />\n    </el-form-item>\n    <el-form-item label=\"Xizmat narxi\" prop=\"serviceCost\">\n        <el-input v-model=\"ruleForm.serviceCost\" type=\"input\" />\n    </el-form-item>\n    <el-form-item label=\"Ish vaqti\" required>\n        <el-time-picker\n        v-model=\"ruleForm.workTime\"\n        is-range\n        range-separator=\"To\"\n        start-placeholder=\"Start time\"\n        end-placeholder=\"End time\"\n        />\n    </el-form-item>\n</el-form>\n<div>\n    <el-button type=\"primary\" @click=\"submitForm(ruleFormRef)\">\n        Create\n    </el-button>\n    <el-button @click=\"resetForm(ruleFormRef)\">Reset</el-button>\n</div>\n</template>\n\n<script setup>\nimport { onMounted, reactive, ref } from 'vue'\nimport { useDoctors } from \"@/store/doctors.pinia\"\nimport router from '@/router';\nimport TheComponentHeader from '@/components/TheComponentHeader.vue';\nimport { storeToRefs } from 'pinia';\nconst ruleFormRef = ref();\nconst doctorId = ref(null)\nconst storeDoctor = useDoctors();\n\nconst { doctor } = storeToRefs(storeDoctor)\n\nconst ruleForm = reactive({\n    doctorName: '',\n    workTime: null,\n    surname: '',\n    category: '',\n    serviceCost:'400000'\n})\n\nconst rules = reactive({\n    doctorName: [\n    { required: true, message: 'Iltimos ism kiriting', trigger: 'blur' },\n    ],\n    surname: [\n    {\n        required: true,\n        message: 'Iltimos familiya kiriting',\n        trigger: 'blur',\n    },\n    ],\n    category: [\n    {\n        required: true,\n        message: 'Iltimos kategoriya kiriting',\n        trigger: 'blur',\n    },\n    ],\n    serviceCost: [\n    {\n        required: true,\n        message: 'Iltimos xizmat narxini kiriting',\n        trigger: 'blur',\n    },\n    ],\n    workTime: [\n    {\n        type: 'date',\n        required: true,\n        message: 'Iltimos ishlash vaqtini kiriting',\n        trigger: 'change',\n    },\n    ]\n})\n\nconst submitForm = async (formEl) => {\n    if (!formEl) return\n    await formEl.validate((valid, fields) => {\n        if (valid) {\n            useDoctors().createDoctor(ruleForm);\n            router.go(-1)\n        } else {\n            console.log('error submit!', fields)\n        }\n    })\n}\n\nconst resetForm = (formEl) => {\n    if (!formEl) return\n    formEl.resetFields()\n}\n\n\nonMounted(async () => {\n    if(router.currentRoute.value.params.id){\n        doctorId.value = router.currentRoute.value.params.id;\n        const result = await useDoctors().getOneDoctor(doctorId.value);\n        console.log(result);\n        ruleForm.doctorName = doctor.value.name\n        ruleForm.category = doctor.value.category\n        ruleForm.serviceCost = doctor.value.serviceCost\n        ruleForm.surname = doctor.value.surname\n        ruleForm.workTime = doctor.value.workTime\n    }\n})\n</script>\n\n<style scoped>\n.demo-ruleForm{\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n}\n\n.demo-ruleForm .el-form-item{\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}