{"ast":null,"code":"import { onMounted, reactive, ref } from 'vue';\n// import { useDoctors } from \"@/store/doctors.pinia\"\n// import { useToast } from \"@/store/toast.pinia\"\nimport router from '@/router';\nimport TheComponentHeader from '@/components/TheComponentHeader.vue';\n// import Request from '@/api';\nimport { useStore } from '@/store';\nimport { useToast } from \"@/store/toast.pinia\";\nexport default {\n  __name: 'PatientsForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const ruleFormRef = ref();\n    const doctorId = ref(null);\n    const ruleForm = reactive({\n      id: null,\n      doctorName: '',\n      workTime: null,\n      surname: '',\n      category: '',\n      serviceCost: '',\n      roomNumber: null\n    });\n    const rules = reactive({\n      doctorName: [{\n        required: true,\n        message: 'Iltimos ism kiriting',\n        trigger: 'blur'\n      }],\n      surname: [{\n        required: true,\n        message: 'Iltimos familiya kiriting',\n        trigger: 'blur'\n      }],\n      category: [{\n        required: true,\n        message: 'Iltimos kategoriya kiriting',\n        trigger: 'blur'\n      }],\n      serviceCost: [{\n        required: true,\n        message: 'Iltimos xizmat narxini kiriting',\n        trigger: 'blur'\n      }],\n      workTime: [{\n        type: 'date',\n        required: true,\n        message: 'Iltimos ishlash vaqtini kiriting',\n        trigger: 'change'\n      }]\n    });\n    const submitForm = async formEl => {\n      if (!formEl) return;\n      await formEl.validate((valid, fields) => {\n        if (valid) {\n          if (doctorId.value) {\n            useStore().updateDoctor(ruleForm);\n            useToast().success(\"Muvaffaqiyatli qo'shildi\");\n          } else {\n            useStore().createDoctor({\n              ...ruleForm,\n              id: useStore().doctors.length + 1\n            });\n          }\n          router.go(-1);\n        } else {\n          console.log('error submit!', fields);\n        }\n      });\n    };\n\n    // const getOneDoctor = (id) => {\n    //     Request({\n    //         url:`doctor/${id}`,\n    //         method:\"get\"\n    //     }).then((res) => {\n    //         ruleForm.doctorName =  res.data.name\n    //         ruleForm.category =  res.data.category\n    //         ruleForm.serviceCost =  res.data.serviceCost\n    //         ruleForm.surname =  res.data.surname\n    //         ruleForm.workTime =  res.data.workTime\n    //     }).catch((error) => {\n    //         useToast().error(error)\n    //     })\n    // }\n\n    const resetForm = formEl => {\n      if (!formEl) return;\n      formEl.resetFields();\n    };\n    onMounted(() => {\n      if (router.currentRoute.value.params.id) {\n        doctorId.value = router.currentRoute.value.params.id;\n        // getOneDoctor(doctorId.value);\n        useStore().doctors.forEach(item => {\n          console.log(typeof item.id);\n          if (item.id === Number(doctorId.value)) {\n            ruleForm.id = item.id;\n            ruleForm.doctorName = item.doctorName;\n            ruleForm.category = item.category;\n            ruleForm.serviceCost = item.serviceCost;\n            ruleForm.surname = item.surname;\n            ruleForm.workTime = item.workTime, ruleForm.roomNumber = item.roomNumber;\n          }\n        });\n      }\n    });\n    const __returned__ = {\n      ruleFormRef,\n      doctorId,\n      ruleForm,\n      rules,\n      submitForm,\n      resetForm,\n      onMounted,\n      reactive,\n      ref,\n      get router() {\n        return router;\n      },\n      TheComponentHeader,\n      get useStore() {\n        return useStore;\n      },\n      get useToast() {\n        return useToast;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","reactive","ref","router","TheComponentHeader","useStore","useToast","ruleFormRef","doctorId","ruleForm","id","doctorName","workTime","surname","category","serviceCost","roomNumber","rules","required","message","trigger","type","submitForm","formEl","validate","valid","fields","value","updateDoctor","success","createDoctor","doctors","length","go","console","log","resetForm","resetFields","currentRoute","params","forEach","item","Number"],"sources":["/Users/air/Documents/crm-front/src/views/patients/PatientsForm.vue"],"sourcesContent":["<template>\n    <TheComponentHeader \n    :header-title=\"doctorId ? 'Doktorni tahrirlash' : 'Doktor qo\\'shish'\"\n    route=\"DoctorList\"\n    btn-title=\"Orqaga\"\n    :is-button=\"true\"\n    />\n    <el-form\n    ref=\"ruleFormRef\"\n    :model=\"ruleForm\"\n    :rules=\"rules\"\n    class=\"demo-ruleForm\"\n    >\n    <el-form-item label=\"Doktor ismi\" prop=\"doctorName\">\n        <el-input v-model=\"ruleForm.doctorName\"  autosize/>\n    </el-form-item>\n    <el-form-item label=\"Familiyasi\" prop=\"surname\">\n        <el-input v-model=\"ruleForm.surname\" type=\"input\" />\n    </el-form-item>\n    <el-form-item label=\"Kategoriyasi\" prop=\"category\">\n        <el-input v-model=\"ruleForm.category\" type=\"input\" />\n    </el-form-item>\n    <el-form-item label=\"Xizmat narxi\" prop=\"serviceCost\">\n        <el-input v-model=\"ruleForm.serviceCost\" type=\"input\" />\n    </el-form-item>\n    <el-form-item label=\"Ish vaqti\" required>\n        <el-time-picker\n        v-model=\"ruleForm.workTime\"\n        is-range\n        range-separator=\"To\"\n        start-placeholder=\"Start time\"\n        end-placeholder=\"End time\"\n        />\n    </el-form-item>\n</el-form>\n<div>\n    <el-button type=\"primary\" @click=\"submitForm(ruleFormRef)\">\n        Create\n    </el-button>\n    <el-button @click=\"resetForm(ruleFormRef)\">Reset</el-button>\n</div>\n</template>\n\n<script setup>\nimport { onMounted, reactive, ref } from 'vue'\n// import { useDoctors } from \"@/store/doctors.pinia\"\n// import { useToast } from \"@/store/toast.pinia\"\nimport router from '@/router';\nimport TheComponentHeader from '@/components/TheComponentHeader.vue';\n// import Request from '@/api';\nimport { useStore } from '@/store';\nimport { useToast} from \"@/store/toast.pinia\"\nconst ruleFormRef = ref();\n\n\nconst doctorId = ref(null)\n\nconst ruleForm = reactive({\n    id:null,\n    doctorName: '',\n    workTime: null,\n    surname: '',\n    category: '',\n    serviceCost:'',\n    roomNumber:null\n})\n\nconst rules = reactive({\n    doctorName: [\n    { required: true, message: 'Iltimos ism kiriting', trigger: 'blur' },\n    ],\n    surname: [\n    {\n        required: true,\n        message: 'Iltimos familiya kiriting',\n        trigger: 'blur',\n    },\n    ],\n    category: [\n    {\n        required: true,\n        message: 'Iltimos kategoriya kiriting',\n        trigger: 'blur',\n    },\n    ],\n    serviceCost: [\n    {\n        required: true,\n        message: 'Iltimos xizmat narxini kiriting',\n        trigger: 'blur',\n    },\n    ],\n    workTime: [\n    {\n        type: 'date',\n        required: true,\n        message: 'Iltimos ishlash vaqtini kiriting',\n        trigger: 'change',\n    },\n    ]\n})\n\nconst submitForm = async (formEl) => {\n    if (!formEl) return\n    await formEl.validate((valid, fields) => {\n        if (valid) {\n            if(doctorId.value){\n                useStore().updateDoctor(ruleForm);\n                useToast().success(\"Muvaffaqiyatli qo'shildi\")\n            }else{\n                useStore().createDoctor({...ruleForm, id: useStore().doctors.length + 1});\n            }\n            router.go(-1)\n        } else {\n            console.log('error submit!', fields)\n        }\n    })\n}\n\n// const getOneDoctor = (id) => {\n    //     Request({\n        //         url:`doctor/${id}`,\n        //         method:\"get\"\n        //     }).then((res) => {\n            //         ruleForm.doctorName =  res.data.name\n            //         ruleForm.category =  res.data.category\n            //         ruleForm.serviceCost =  res.data.serviceCost\n            //         ruleForm.surname =  res.data.surname\n            //         ruleForm.workTime =  res.data.workTime\n            //     }).catch((error) => {\n                //         useToast().error(error)\n                //     })\n                // }\n                \n                const resetForm = (formEl) => {\n                    if (!formEl) return\n                    formEl.resetFields()\n                }\n                \n                onMounted(() => {\n                    if(router.currentRoute.value.params.id){\n                        doctorId.value = router.currentRoute.value.params.id;\n                        // getOneDoctor(doctorId.value);\n                        useStore().doctors.forEach(item => {\n                            console.log(typeof item.id);\n                            if(item.id === Number(doctorId.value)){\n                                ruleForm.id = item.id\n                                ruleForm.doctorName =  item.doctorName\n                                ruleForm.category =  item.category\n                                ruleForm.serviceCost =  item.serviceCost\n                                ruleForm.surname =  item.surname\n                                ruleForm.workTime =  item.workTime,\n                                ruleForm.roomNumber = item.roomNumber\n                            }\n                        })\n                    }\n                })\n            </script>\n            \n            \n            <style scoped>\n            .demo-ruleForm{\n                display: grid;\n                grid-template-columns: 1fr 1fr 1fr;\n            }\n            \n            .demo-ruleForm .el-form-item{\n                display: flex;\n                flex-direction: column;\n                align-items: flex-start;\n            }\n        </style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}