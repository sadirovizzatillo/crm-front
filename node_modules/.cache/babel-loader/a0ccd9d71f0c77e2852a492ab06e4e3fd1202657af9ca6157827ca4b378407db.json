{"ast":null,"code":"import { onMounted, reactive } from 'vue';\nimport { useDoctors } from \"@/store/doctors.pinia\";\nimport router from '@/router';\nimport TheComponentHeader from '@/components/TheComponentHeader.vue';\nimport Request from '@/api';\nexport default {\n  __name: 'DoctorForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const doctorId = ref(null);\n    const ruleForm = reactive({\n      doctorName: '',\n      workTime: null,\n      surname: '',\n      category: '',\n      serviceCost: '400000'\n    });\n    const rules = reactive({\n      doctorName: [{\n        required: true,\n        message: 'Iltimos ism kiriting',\n        trigger: 'blur'\n      }],\n      surname: [{\n        required: true,\n        message: 'Iltimos familiya kiriting',\n        trigger: 'blur'\n      }],\n      category: [{\n        required: true,\n        message: 'Iltimos kategoriya kiriting',\n        trigger: 'blur'\n      }],\n      serviceCost: [{\n        required: true,\n        message: 'Iltimos xizmat narxini kiriting',\n        trigger: 'blur'\n      }],\n      workTime: [{\n        type: 'date',\n        required: true,\n        message: 'Iltimos ishlash vaqtini kiriting',\n        trigger: 'change'\n      }]\n    });\n    const submitForm = async formEl => {\n      if (!formEl) return;\n      await formEl.validate((valid, fields) => {\n        if (valid) {\n          useDoctors().createDoctor(ruleForm);\n          router.go(-1);\n        } else {\n          console.log('error submit!', fields);\n        }\n      });\n    };\n    const getOneDoctor = id => {\n      Request({\n        url: `doctor/${id}`,\n        method: \"get\"\n      }).then(res => {\n        ruleForm.doctorName = doctor?.name;\n        ruleForm.category = doctor?.category;\n        ruleForm.serviceCost = doctor?.serviceCost;\n        ruleForm.surname = doctor?.surname;\n        ruleForm.workTime = doctor?.workTime;\n        return res.data;\n      }).catch(error => {\n        useToast().error(error);\n      });\n    };\n    const resetForm = formEl => {\n      if (!formEl) return;\n      formEl.resetFields();\n    };\n    onMounted(() => {\n      if (router.currentRoute.value.params.id) {\n        doctorId.value = router.currentRoute.value.params.id;\n        getOneDoctor(doctorId);\n      }\n    });\n    const __returned__ = {\n      doctorId,\n      ruleForm,\n      rules,\n      submitForm,\n      getOneDoctor,\n      resetForm,\n      onMounted,\n      reactive,\n      get useDoctors() {\n        return useDoctors;\n      },\n      get router() {\n        return router;\n      },\n      TheComponentHeader,\n      get Request() {\n        return Request;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","reactive","useDoctors","router","TheComponentHeader","Request","doctorId","ref","ruleForm","doctorName","workTime","surname","category","serviceCost","rules","required","message","trigger","type","submitForm","formEl","validate","valid","fields","createDoctor","go","console","log","getOneDoctor","id","url","method","then","res","doctor","name","data","catch","error","useToast","resetForm","resetFields","currentRoute","value","params"],"sources":["/Users/air/Documents/crm-front/src/views/doctors/DoctorForm.vue"],"sourcesContent":["<template>\n    <TheComponentHeader \n    header-title=\"Doktor qo'shish\"\n    route=\"DoctorList\"\n    btn-title=\"Orqaga\"\n    />\n    {{ doctor }}\n    <el-form\n    ref=\"ruleFormRef\"\n    :model=\"ruleForm\"\n    :rules=\"rules\"\n    class=\"demo-ruleForm\"\n    >\n    <el-form-item label=\"Doktor ismi\" prop=\"doctorName\">\n        <el-input v-model=\"ruleForm.doctorName\"  autosize/>\n    </el-form-item>\n    <el-form-item label=\"Familiyasi\" prop=\"surname\">\n        <el-input v-model=\"ruleForm.surname\" type=\"input\" />\n    </el-form-item>\n    <el-form-item label=\"Kategoriyasi\" prop=\"category\">\n        <el-input v-model=\"ruleForm.category\" type=\"input\" />\n    </el-form-item>\n    <el-form-item label=\"Xizmat narxi\" prop=\"serviceCost\">\n        <el-input v-model=\"ruleForm.serviceCost\" type=\"input\" />\n    </el-form-item>\n    <el-form-item label=\"Ish vaqti\" required>\n        <el-time-picker\n        v-model=\"ruleForm.workTime\"\n        is-range\n        range-separator=\"To\"\n        start-placeholder=\"Start time\"\n        end-placeholder=\"End time\"\n        />\n    </el-form-item>\n</el-form>\n<div>\n    <el-button type=\"primary\" @click=\"submitForm(ruleFormRef)\">\n        Create\n    </el-button>\n    <el-button @click=\"resetForm(ruleFormRef)\">Reset</el-button>\n</div>\n</template>\n\n<script setup>\nimport { onMounted, reactive } from 'vue'\nimport { useDoctors } from \"@/store/doctors.pinia\"\nimport router from '@/router';\nimport TheComponentHeader from '@/components/TheComponentHeader.vue';\nimport Request from '@/api';\n\nconst doctorId = ref(null)\n\nconst ruleForm = reactive({\n    doctorName: '',\n    workTime: null,\n    surname: '',\n    category: '',\n    serviceCost:'400000'\n})\n\nconst rules = reactive({\n    doctorName: [\n    { required: true, message: 'Iltimos ism kiriting', trigger: 'blur' },\n    ],\n    surname: [\n    {\n        required: true,\n        message: 'Iltimos familiya kiriting',\n        trigger: 'blur',\n    },\n    ],\n    category: [\n    {\n        required: true,\n        message: 'Iltimos kategoriya kiriting',\n        trigger: 'blur',\n    },\n    ],\n    serviceCost: [\n    {\n        required: true,\n        message: 'Iltimos xizmat narxini kiriting',\n        trigger: 'blur',\n    },\n    ],\n    workTime: [\n    {\n        type: 'date',\n        required: true,\n        message: 'Iltimos ishlash vaqtini kiriting',\n        trigger: 'change',\n    },\n    ]\n})\n\nconst submitForm = async (formEl) => {\n    if (!formEl) return\n    await formEl.validate((valid, fields) => {\n        if (valid) {\n            useDoctors().createDoctor(ruleForm);\n            router.go(-1)\n        } else {\n            console.log('error submit!', fields)\n        }\n    })\n}\n\nconst getOneDoctor = (id) => {\n    Request({\n        url:`doctor/${id}`,\n        method:\"get\"\n    }).then((res) => {\n        ruleForm.doctorName =  doctor?.name\n        ruleForm.category =  doctor?.category\n        ruleForm.serviceCost =  doctor?.serviceCost\n        ruleForm.surname =  doctor?.surname\n        ruleForm.workTime =  doctor?.workTime\n        return res.data\n    }).catch((error) => {\n        useToast().error(error)\n    })\n}\n\nconst resetForm = (formEl) => {\n    if (!formEl) return\n    formEl.resetFields()\n}\n\nonMounted(() => {\n    if(router.currentRoute.value.params.id){\n        doctorId.value = router.currentRoute.value.params.id;\n        getOneDoctor(doctorId);\n        \n    }\n})\n</script>\n\n\n<style scoped>\n.demo-ruleForm{\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n}\n\n.demo-ruleForm .el-form-item{\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n}\n</style>"],"mappings":"AA4CA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,KAAK;AACzC,SAASC,UAAU,QAAQ,uBAAuB;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,kBAAkB,MAAM,qCAAqC;AACpE,OAAOC,OAAO,MAAM,OAAO;;;;;;;IAE3B,MAAMC,QAAQ,GAAGC,GAAG,CAAC,IAAI,CAAC;IAE1B,MAAMC,QAAQ,GAAGP,QAAQ,CAAC;MACtBQ,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAC;IAChB,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAGb,QAAQ,CAAC;MACnBQ,UAAU,EAAE,CACZ;QAAEM,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,sBAAsB;QAAEC,OAAO,EAAE;MAAO,CAAC,CACnE;MACDN,OAAO,EAAE,CACT;QACII,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,2BAA2B;QACpCC,OAAO,EAAE;MACb,CAAC,CACA;MACDL,QAAQ,EAAE,CACV;QACIG,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,6BAA6B;QACtCC,OAAO,EAAE;MACb,CAAC,CACA;MACDJ,WAAW,EAAE,CACb;QACIE,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,iCAAiC;QAC1CC,OAAO,EAAE;MACb,CAAC,CACA;MACDP,QAAQ,EAAE,CACV;QACIQ,IAAI,EAAE,MAAM;QACZH,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,kCAAkC;QAC3CC,OAAO,EAAE;MACb,CAAC;IAEL,CAAC,CAAC;IAEF,MAAME,UAAU,GAAG,MAAOC,MAAM,IAAK;MACjC,IAAI,CAACA,MAAM,EAAE;MACb,MAAMA,MAAM,CAACC,QAAQ,CAAC,CAACC,KAAK,EAAEC,MAAM,KAAK;QACrC,IAAID,KAAK,EAAE;UACPpB,UAAU,CAAC,CAAC,CAACsB,YAAY,CAAChB,QAAQ,CAAC;UACnCL,MAAM,CAACsB,EAAE,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,MAAM;UACHC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,MAAM,CAAC;QACxC;MACJ,CAAC,CAAC;IACN,CAAC;IAED,MAAMK,YAAY,GAAIC,EAAE,IAAK;MACzBxB,OAAO,CAAC;QACJyB,GAAG,EAAE,UAASD,EAAG,EAAC;QAClBE,MAAM,EAAC;MACX,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;QACbzB,QAAQ,CAACC,UAAU,GAAIyB,MAAM,EAAEC,IAAI;QACnC3B,QAAQ,CAACI,QAAQ,GAAIsB,MAAM,EAAEtB,QAAQ;QACrCJ,QAAQ,CAACK,WAAW,GAAIqB,MAAM,EAAErB,WAAW;QAC3CL,QAAQ,CAACG,OAAO,GAAIuB,MAAM,EAAEvB,OAAO;QACnCH,QAAQ,CAACE,QAAQ,GAAIwB,MAAM,EAAExB,QAAQ;QACrC,OAAOuB,GAAG,CAACG,IAAI;MACnB,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;QAChBC,QAAQ,CAAC,CAAC,CAACD,KAAK,CAACA,KAAK,CAAC;MAC3B,CAAC,CAAC;IACN,CAAC;IAED,MAAME,SAAS,GAAIpB,MAAM,IAAK;MAC1B,IAAI,CAACA,MAAM,EAAE;MACbA,MAAM,CAACqB,WAAW,CAAC,CAAC;IACxB,CAAC;IAEDzC,SAAS,CAAC,MAAM;MACZ,IAAGG,MAAM,CAACuC,YAAY,CAACC,KAAK,CAACC,MAAM,CAACf,EAAE,EAAC;QACnCvB,QAAQ,CAACqC,KAAK,GAAGxC,MAAM,CAACuC,YAAY,CAACC,KAAK,CAACC,MAAM,CAACf,EAAE;QACpDD,YAAY,CAACtB,QAAQ,CAAC;MAE1B;IACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}