{"ast":null,"code":"import { defineStore } from \"pinia\";\nimport Request from \"@/api\";\nimport { useToast } from \"./toast.pinia\";\nexport const usePatients = defineStore('patients', {\n  state: () => ({\n    patients: [],\n    patient: null\n  }),\n  actions: {\n    createPatient(form) {\n      Request({\n        url: \"patient\",\n        method: \"post\",\n        data: form\n      }).then(res => {\n        console.log(res);\n      }).catch(error => {\n        useToast().error(error);\n      });\n    },\n    getAllPatients() {\n      Request({\n        url: \"patient\",\n        method: \"get\"\n      }).then(res => {\n        this.patients = res.data;\n      }).catch(error => {\n        useToast().error(error);\n      });\n    },\n    deletePatient(id) {\n      Request({\n        url: `patient/${id}`,\n        method: \"delete\"\n      }).then(res => {\n        useToast().success(res.data.message);\n      }).catch(error => {\n        useToast().error(error);\n      });\n    }\n  }\n});","map":{"version":3,"names":["defineStore","Request","useToast","usePatients","state","patients","patient","actions","createPatient","form","url","method","data","then","res","console","log","catch","error","getAllPatients","deletePatient","id","success","message"],"sources":["/Users/air/Documents/crm-front/src/store/patients.pinia.js"],"sourcesContent":["import {defineStore} from \"pinia\";\nimport Request from \"@/api\";\nimport { useToast } from \"./toast.pinia\";\n\nexport const usePatients = defineStore('patients', {\n    state: () => ({\n        patients: [],\n        patient:null\n    }),\n    actions: {\n        createPatient(form){\n            Request({\n                url:\"patient\",\n                method:\"post\",\n                data:form\n            }).then((res) => {\n                console.log(res);\n            }).catch((error) => {\n                useToast().error(error)\n            })\n        },\n        getAllPatients(){\n            Request({\n                url:\"patient\",\n                method:\"get\"\n            }).then((res) => {\n                this.patients = res.data\n            }).catch((error) => {\n                useToast().error(error)\n            })\n        },\n        deletePatient(id){\n            Request({\n                url:`patient/${id}`,\n                method:\"delete\"\n            }).then((res) => {\n                useToast().success(res.data.message);\n            }).catch((error) => {\n                useToast().error(error)\n            })\n        },\n    }\n});\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AACjC,OAAOC,OAAO,MAAM,OAAO;AAC3B,SAASC,QAAQ,QAAQ,eAAe;AAExC,OAAO,MAAMC,WAAW,GAAGH,WAAW,CAAC,UAAU,EAAE;EAC/CI,KAAK,EAAEA,CAAA,MAAO;IACVC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAC;EACZ,CAAC,CAAC;EACFC,OAAO,EAAE;IACLC,aAAaA,CAACC,IAAI,EAAC;MACfR,OAAO,CAAC;QACJS,GAAG,EAAC,SAAS;QACbC,MAAM,EAAC,MAAM;QACbC,IAAI,EAACH;MACT,CAAC,CAAC,CAACI,IAAI,CAAEC,GAAG,IAAK;QACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB,CAAC,CAAC,CAACG,KAAK,CAAEC,KAAK,IAAK;QAChBhB,QAAQ,CAAC,CAAC,CAACgB,KAAK,CAACA,KAAK,CAAC;MAC3B,CAAC,CAAC;IACN,CAAC;IACDC,cAAcA,CAAA,EAAE;MACZlB,OAAO,CAAC;QACJS,GAAG,EAAC,SAAS;QACbC,MAAM,EAAC;MACX,CAAC,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACT,QAAQ,GAAGS,GAAG,CAACF,IAAI;MAC5B,CAAC,CAAC,CAACK,KAAK,CAAEC,KAAK,IAAK;QAChBhB,QAAQ,CAAC,CAAC,CAACgB,KAAK,CAACA,KAAK,CAAC;MAC3B,CAAC,CAAC;IACN,CAAC;IACDE,aAAaA,CAACC,EAAE,EAAC;MACbpB,OAAO,CAAC;QACJS,GAAG,EAAE,WAAUW,EAAG,EAAC;QACnBV,MAAM,EAAC;MACX,CAAC,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;QACbZ,QAAQ,CAAC,CAAC,CAACoB,OAAO,CAACR,GAAG,CAACF,IAAI,CAACW,OAAO,CAAC;MACxC,CAAC,CAAC,CAACN,KAAK,CAAEC,KAAK,IAAK;QAChBhB,QAAQ,CAAC,CAAC,CAACgB,KAAK,CAACA,KAAK,CAAC;MAC3B,CAAC,CAAC;IACN;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}