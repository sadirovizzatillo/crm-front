{"ast":null,"code":"import { reactive } from 'vue';\nimport { useDoctors } from \"@/store/doctors.pinia\";\nimport router from '@/router';\nimport TheComponentHeader from '@/components/TheComponentHeader.vue';\nexport default {\n  __name: 'DoctorForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const {\n      doctor\n    } = useDoctors();\n    const ruleForm = reactive({\n      doctorName: '',\n      workTime: null,\n      surname: '',\n      category: '',\n      serviceCost: '400000'\n    });\n    const rules = reactive({\n      doctorName: [{\n        required: true,\n        message: 'Iltimos ism kiriting',\n        trigger: 'blur'\n      }],\n      surname: [{\n        required: true,\n        message: 'Iltimos familiya kiriting',\n        trigger: 'blur'\n      }],\n      category: [{\n        required: true,\n        message: 'Iltimos kategoriya kiriting',\n        trigger: 'blur'\n      }],\n      serviceCost: [{\n        required: true,\n        message: 'Iltimos xizmat narxini kiriting',\n        trigger: 'blur'\n      }],\n      workTime: [{\n        type: 'date',\n        required: true,\n        message: 'Iltimos ishlash vaqtini kiriting',\n        trigger: 'change'\n      }]\n    });\n    const submitForm = async formEl => {\n      if (!formEl) return;\n      await formEl.validate((valid, fields) => {\n        if (valid) {\n          useDoctors().createDoctor(ruleForm);\n          router.go(-1);\n        } else {\n          console.log('error submit!', fields);\n        }\n      });\n    };\n    const resetForm = formEl => {\n      if (!formEl) return;\n      formEl.resetFields();\n    };\n\n    // onMounted(() => {\n    //     try{\n    if (router.currentRoute.value.params.id) {\n      const doctorId = router.currentRoute.value.params.id;\n      useDoctors().getOneDoctor(doctorId);\n    }\n    //     }catch(err){\n    //      console.log(err);   \n    //     }\n\n    // })\n\n    const __returned__ = {\n      doctor,\n      ruleForm,\n      rules,\n      submitForm,\n      resetForm,\n      reactive,\n      get useDoctors() {\n        return useDoctors;\n      },\n      get router() {\n        return router;\n      },\n      TheComponentHeader\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","useDoctors","router","TheComponentHeader","doctor","ruleForm","doctorName","workTime","surname","category","serviceCost","rules","required","message","trigger","type","submitForm","formEl","validate","valid","fields","createDoctor","go","console","log","resetForm","resetFields","currentRoute","value","params","id","doctorId","getOneDoctor"],"sources":["/Users/air/Documents/crm-front/src/views/doctors/DoctorForm.vue"],"sourcesContent":["<template>\n    <TheComponentHeader \n    header-title=\"Doktor qo'shish\"\n    route=\"DoctorList\"\n    btn-title=\"Orqaga\"\n    />\n    {{ doctor }}\n    <el-form\n    ref=\"ruleFormRef\"\n    :model=\"ruleForm\"\n    :rules=\"rules\"\n    class=\"demo-ruleForm\"\n    >\n    <el-form-item label=\"Doktor ismi\" prop=\"doctorName\">\n        <el-input v-model=\"ruleForm.doctorName\"  autosize/>\n    </el-form-item>\n    <el-form-item label=\"Familiyasi\" prop=\"surname\">\n        <el-input v-model=\"ruleForm.surname\" type=\"input\" />\n    </el-form-item>\n    <el-form-item label=\"Kategoriyasi\" prop=\"category\">\n        <el-input v-model=\"ruleForm.category\" type=\"input\" />\n    </el-form-item>\n    <el-form-item label=\"Xizmat narxi\" prop=\"serviceCost\">\n        <el-input v-model=\"ruleForm.serviceCost\" type=\"input\" />\n    </el-form-item>\n    <el-form-item label=\"Ish vaqti\" required>\n        <el-time-picker\n        v-model=\"ruleForm.workTime\"\n        is-range\n        range-separator=\"To\"\n        start-placeholder=\"Start time\"\n        end-placeholder=\"End time\"\n        />\n    </el-form-item>\n</el-form>\n<div>\n    <el-button type=\"primary\" @click=\"submitForm(ruleFormRef)\">\n        Create\n    </el-button>\n    <el-button @click=\"resetForm(ruleFormRef)\">Reset</el-button>\n</div>\n</template>\n\n<script setup>\nimport { reactive } from 'vue'\nimport { useDoctors } from \"@/store/doctors.pinia\"\nimport router from '@/router';\nimport TheComponentHeader from '@/components/TheComponentHeader.vue';\n\nconst { doctor } = useDoctors()\n\nconst ruleForm = reactive({\n    doctorName: '',\n    workTime: null,\n    surname: '',\n    category: '',\n    serviceCost:'400000'\n})\n\nconst rules = reactive({\n    doctorName: [\n    { required: true, message: 'Iltimos ism kiriting', trigger: 'blur' },\n    ],\n    surname: [\n    {\n        required: true,\n        message: 'Iltimos familiya kiriting',\n        trigger: 'blur',\n    },\n    ],\n    category: [\n    {\n        required: true,\n        message: 'Iltimos kategoriya kiriting',\n        trigger: 'blur',\n    },\n    ],\n    serviceCost: [\n    {\n        required: true,\n        message: 'Iltimos xizmat narxini kiriting',\n        trigger: 'blur',\n    },\n    ],\n    workTime: [\n    {\n        type: 'date',\n        required: true,\n        message: 'Iltimos ishlash vaqtini kiriting',\n        trigger: 'change',\n    },\n    ]\n})\n\nconst submitForm = async (formEl) => {\n    if (!formEl) return\n    await formEl.validate((valid, fields) => {\n        if (valid) {\n            useDoctors().createDoctor(ruleForm);\n            router.go(-1)\n        } else {\n            console.log('error submit!', fields)\n        }\n    })\n}\n\nconst resetForm = (formEl) => {\n    if (!formEl) return\n    formEl.resetFields()\n}\n\n// onMounted(() => {\n    //     try{\n        if(router.currentRoute.value.params.id){\n            const doctorId = router.currentRoute.value.params.id;\n            useDoctors().getOneDoctor(doctorId)\n            \n        }\n        //     }catch(err){\n            //      console.log(err);   \n            //     }\n            \n            // })\n        </script>\n        \n        \n        <style scoped>\n        .demo-ruleForm{\n            display: grid;\n            grid-template-columns: 1fr 1fr 1fr;\n        }\n        \n        .demo-ruleForm .el-form-item{\n            display: flex;\n            flex-direction: column;\n            align-items: flex-start;\n        }\n    </style>"],"mappings":"AA4CA,SAASA,QAAQ,QAAQ,KAAK;AAC9B,SAASC,UAAU,QAAQ,uBAAuB;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,kBAAkB,MAAM,qCAAqC;;;;;;;IAEpE,MAAM;MAAEC;IAAO,CAAC,GAAGH,UAAU,CAAC,CAAC;IAE/B,MAAMI,QAAQ,GAAGL,QAAQ,CAAC;MACtBM,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAC;IAChB,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAGX,QAAQ,CAAC;MACnBM,UAAU,EAAE,CACZ;QAAEM,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,sBAAsB;QAAEC,OAAO,EAAE;MAAO,CAAC,CACnE;MACDN,OAAO,EAAE,CACT;QACII,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,2BAA2B;QACpCC,OAAO,EAAE;MACb,CAAC,CACA;MACDL,QAAQ,EAAE,CACV;QACIG,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,6BAA6B;QACtCC,OAAO,EAAE;MACb,CAAC,CACA;MACDJ,WAAW,EAAE,CACb;QACIE,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,iCAAiC;QAC1CC,OAAO,EAAE;MACb,CAAC,CACA;MACDP,QAAQ,EAAE,CACV;QACIQ,IAAI,EAAE,MAAM;QACZH,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,kCAAkC;QAC3CC,OAAO,EAAE;MACb,CAAC;IAEL,CAAC,CAAC;IAEF,MAAME,UAAU,GAAG,MAAOC,MAAM,IAAK;MACjC,IAAI,CAACA,MAAM,EAAE;MACb,MAAMA,MAAM,CAACC,QAAQ,CAAC,CAACC,KAAK,EAAEC,MAAM,KAAK;QACrC,IAAID,KAAK,EAAE;UACPlB,UAAU,CAAC,CAAC,CAACoB,YAAY,CAAChB,QAAQ,CAAC;UACnCH,MAAM,CAACoB,EAAE,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,MAAM;UACHC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,MAAM,CAAC;QACxC;MACJ,CAAC,CAAC;IACN,CAAC;IAED,MAAMK,SAAS,GAAIR,MAAM,IAAK;MAC1B,IAAI,CAACA,MAAM,EAAE;MACbA,MAAM,CAACS,WAAW,CAAC,CAAC;IACxB,CAAC;;IAED;IACI;IACI,IAAGxB,MAAM,CAACyB,YAAY,CAACC,KAAK,CAACC,MAAM,CAACC,EAAE,EAAC;MACnC,MAAMC,QAAQ,GAAG7B,MAAM,CAACyB,YAAY,CAACC,KAAK,CAACC,MAAM,CAACC,EAAE;MACpD7B,UAAU,CAAC,CAAC,CAAC+B,YAAY,CAACD,QAAQ,CAAC;IAEvC;IACA;IACI;IACA;;IAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}