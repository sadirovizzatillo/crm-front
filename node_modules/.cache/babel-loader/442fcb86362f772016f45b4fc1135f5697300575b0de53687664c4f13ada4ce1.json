{"ast":null,"code":"import { reactive, ref } from 'vue';\nexport default {\n  __name: 'DoctorForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const formSize = ref('default');\n    const ruleFormRef = ref();\n    const ruleForm = reactive({\n      doctorName: '',\n      workTime: '',\n      surname: '',\n      category: '',\n      date2: '',\n      delivery: false,\n      type: [],\n      resource: '',\n      desc: ''\n    });\n    const rules = reactive({\n      name: [{\n        required: true,\n        message: 'Please input Activity name',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        max: 5,\n        message: 'Length should be 3 to 5',\n        trigger: 'blur'\n      }],\n      region: [{\n        required: true,\n        message: 'Please select Activity zone',\n        trigger: 'change'\n      }],\n      count: [{\n        required: true,\n        message: 'Please select Activity count',\n        trigger: 'change'\n      }],\n      date1: [{\n        type: 'date',\n        required: true,\n        message: 'Please pick a date',\n        trigger: 'change'\n      }],\n      date2: [{\n        type: 'date',\n        required: true,\n        message: 'Please pick a time',\n        trigger: 'change'\n      }],\n      type: [{\n        type: 'array',\n        required: true,\n        message: 'Please select at least one activity type',\n        trigger: 'change'\n      }],\n      resource: [{\n        required: true,\n        message: 'Please select activity resource',\n        trigger: 'change'\n      }],\n      desc: [{\n        required: true,\n        message: 'Please input activity form',\n        trigger: 'blur'\n      }]\n    });\n    const submitForm = async formEl => {\n      if (!formEl) return;\n      await formEl.validate((valid, fields) => {\n        if (valid) {\n          console.log('submit!');\n        } else {\n          console.log('error submit!', fields);\n        }\n      });\n    };\n    const resetForm = formEl => {\n      if (!formEl) return;\n      formEl.resetFields();\n    };\n    const options = Array.from({\n      length: 10000\n    }).map((_, idx) => ({\n      value: `${idx + 1}`,\n      label: `${idx + 1}`\n    }));\n    const __returned__ = {\n      formSize,\n      ruleFormRef,\n      ruleForm,\n      rules,\n      submitForm,\n      resetForm,\n      options,\n      reactive,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","ref","formSize","ruleFormRef","ruleForm","doctorName","workTime","surname","category","date2","delivery","type","resource","desc","rules","name","required","message","trigger","min","max","region","count","date1","submitForm","formEl","validate","valid","fields","console","log","resetForm","resetFields","options","Array","from","length","map","_","idx","value","label"],"sources":["/Users/air/Documents/crm/src/views/doctors/DoctorForm.vue"],"sourcesContent":["<template>\n    <el-form\n    ref=\"ruleFormRef\"\n    :model=\"ruleForm\"\n    :rules=\"rules\"\n    label-width=\"120px\"\n    class=\"demo-ruleForm\"\n    :size=\"formSize\"\n    status-icon\n    >\n    <el-form-item label=\"Doktor ismi\" prop=\"doctorName\">\n        <el-input v-model=\"ruleForm.doctorName\" />\n    </el-form-item>\n    <el-form-item label=\"Kategoriyasi\" prop=\"category\">\n        <el-select-v2\n        v-model=\"ruleForm.count\"\n        placeholder=\"Activity count\"\n        :options=\"options\"\n        />\n    </el-form-item>\n    <el-form-item label=\"Activity time\" required>\n        <el-time-picker\n        v-model=\"workTime\"\n        is-range\n        range-separator=\"To\"\n        start-placeholder=\"Start time\"\n        end-placeholder=\"End time\"\n        />\n    </el-form-item>\n    <el-form-item label=\"Resources\" prop=\"resource\">\n        <el-radio-group v-model=\"ruleForm.resource\">\n            <el-radio label=\"Sponsorship\" />\n            <el-radio label=\"Venue\" />\n        </el-radio-group>\n    </el-form-item>\n    <el-form-item label=\"Activity form\" prop=\"desc\">\n        <el-input v-model=\"ruleForm.desc\" type=\"textarea\" />\n    </el-form-item>\n    <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm(ruleFormRef)\">\n            Create\n        </el-button>\n        <el-button @click=\"resetForm(ruleFormRef)\">Reset</el-button>\n    </el-form-item>\n</el-form>\n</template>\n\n<script setup>\nimport { reactive, ref } from 'vue'\n\nconst formSize = ref('default')\nconst ruleFormRef = ref()\nconst ruleForm = reactive({\n    doctorName: '',\n    workTime: '',\n    surname: '',\n    category: '',\n    date2: '',\n    delivery: false,\n    type: [],\n    resource: '',\n    desc: '',\n})\n\nconst rules = reactive({\n    name: [\n    { required: true, message: 'Please input Activity name', trigger: 'blur' },\n    { min: 3, max: 5, message: 'Length should be 3 to 5', trigger: 'blur' },\n    ],\n    region: [\n    {\n        required: true,\n        message: 'Please select Activity zone',\n        trigger: 'change',\n    },\n    ],\n    count: [\n    {\n        required: true,\n        message: 'Please select Activity count',\n        trigger: 'change',\n    },\n    ],\n    date1: [\n    {\n        type: 'date',\n        required: true,\n        message: 'Please pick a date',\n        trigger: 'change',\n    },\n    ],\n    date2: [\n    {\n        type: 'date',\n        required: true,\n        message: 'Please pick a time',\n        trigger: 'change',\n    },\n    ],\n    type: [\n    {\n        type: 'array',\n        required: true,\n        message: 'Please select at least one activity type',\n        trigger: 'change',\n    },\n    ],\n    resource: [\n    {\n        required: true,\n        message: 'Please select activity resource',\n        trigger: 'change',\n    },\n    ],\n    desc: [\n    { required: true, message: 'Please input activity form', trigger: 'blur' },\n    ],\n})\n\nconst submitForm = async (formEl) => {\n    if (!formEl) return\n    await formEl.validate((valid, fields) => {\n        if (valid) {\n            console.log('submit!')\n        } else {\n            console.log('error submit!', fields)\n        }\n    })\n}\n\nconst resetForm = (formEl) => {\n    if (!formEl) return\n    formEl.resetFields()\n}\n\nconst options = Array.from({ length: 10000 }).map((_, idx) => ({\n    value: `${idx + 1}`,\n    label: `${idx + 1}`,\n}))\n</script>"],"mappings":"AAgDA,SAASA,QAAQ,EAAEC,GAAG,QAAQ,KAAK;;;;;;;IAEnC,MAAMC,QAAQ,GAAGD,GAAG,CAAC,SAAS,CAAC;IAC/B,MAAME,WAAW,GAAGF,GAAG,CAAC,CAAC;IACzB,MAAMG,QAAQ,GAAGJ,QAAQ,CAAC;MACtBK,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,KAAK;MACfC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE;IACV,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAGd,QAAQ,CAAC;MACnBe,IAAI,EAAE,CACN;QAAEC,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,4BAA4B;QAAEC,OAAO,EAAE;MAAO,CAAC,EAC1E;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC;QAAEH,OAAO,EAAE,yBAAyB;QAAEC,OAAO,EAAE;MAAO,CAAC,CACtE;MACDG,MAAM,EAAE,CACR;QACIL,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,6BAA6B;QACtCC,OAAO,EAAE;MACb,CAAC,CACA;MACDI,KAAK,EAAE,CACP;QACIN,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,8BAA8B;QACvCC,OAAO,EAAE;MACb,CAAC,CACA;MACDK,KAAK,EAAE,CACP;QACIZ,IAAI,EAAE,MAAM;QACZK,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,oBAAoB;QAC7BC,OAAO,EAAE;MACb,CAAC,CACA;MACDT,KAAK,EAAE,CACP;QACIE,IAAI,EAAE,MAAM;QACZK,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,oBAAoB;QAC7BC,OAAO,EAAE;MACb,CAAC,CACA;MACDP,IAAI,EAAE,CACN;QACIA,IAAI,EAAE,OAAO;QACbK,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,0CAA0C;QACnDC,OAAO,EAAE;MACb,CAAC,CACA;MACDN,QAAQ,EAAE,CACV;QACII,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,iCAAiC;QAC1CC,OAAO,EAAE;MACb,CAAC,CACA;MACDL,IAAI,EAAE,CACN;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,4BAA4B;QAAEC,OAAO,EAAE;MAAO,CAAC;IAE9E,CAAC,CAAC;IAEF,MAAMM,UAAU,GAAG,MAAOC,MAAM,IAAK;MACjC,IAAI,CAACA,MAAM,EAAE;MACb,MAAMA,MAAM,CAACC,QAAQ,CAAC,CAACC,KAAK,EAAEC,MAAM,KAAK;QACrC,IAAID,KAAK,EAAE;UACPE,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;QAC1B,CAAC,MAAM;UACHD,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,MAAM,CAAC;QACxC;MACJ,CAAC,CAAC;IACN,CAAC;IAED,MAAMG,SAAS,GAAIN,MAAM,IAAK;MAC1B,IAAI,CAACA,MAAM,EAAE;MACbA,MAAM,CAACO,WAAW,CAAC,CAAC;IACxB,CAAC;IAED,MAAMC,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAM,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,MAAM;MAC3DC,KAAK,EAAG,GAAED,GAAG,GAAG,CAAE,EAAC;MACnBE,KAAK,EAAG,GAAEF,GAAG,GAAG,CAAE;IACtB,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}