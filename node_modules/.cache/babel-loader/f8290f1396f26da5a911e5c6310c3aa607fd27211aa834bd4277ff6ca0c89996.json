{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from \"pinia\";\nexport const useStore = defineStore('store', {\n  state: () => ({\n    shopId: parseInt(localStorage.getItem('shopId')) || null,\n    doctors: [{\n      id: 1,\n      doctorName: \"Akbarjon\",\n      surname: \"Zokirov\",\n      serviceCost: 200000,\n      category: \"Stomatolog\",\n      roomNumber: 1,\n      workTime: [\"Thu Jun 22 2023 09:00:00 GMT+0500 (Uzbekistan Standard Time)\", \"Thu Jun 22 2023 18:00:00 GMT+0500 (Uzbekistan Standard Time)\"]\n    }],\n    patients: [],\n    reports: []\n  }),\n  actions: {\n    createDoctor(doctor) {\n      console.log(doctor);\n      this.doctors.push(doctor);\n    },\n    updateDoctor(doctor) {\n      console.log(doctor);\n      const index = this.doctors.findIndex(d => d.id === doctor.id);\n      this.doctors[index] = doctor;\n    },\n    deleteDoctor(doctor) {\n      const index = this.doctors.findIndex(d => d.id === doctor.id);\n      this.doctors.slice(index, 1);\n    },\n    createReport(report) {\n      this.reports.push(report);\n    },\n    updateReport(report) {\n      const index = this.patients.findIndex(p => p.id === report.id);\n      this.reports[index] = report;\n    },\n    deletePatient(patient) {\n      const index = this.patients.findIndex(p => p.id === patient.id);\n      this.patients.slice(index, 1);\n    },\n    updatePatient(patient) {\n      const index = this.patients.findIndex(p => p.id === patient.id);\n      this.patients[index] = patient;\n    },\n    createPatients(patient) {\n      this.patients.push(patient);\n    }\n  }\n});","map":{"version":3,"names":["defineStore","useStore","state","shopId","parseInt","localStorage","getItem","doctors","id","doctorName","surname","serviceCost","category","roomNumber","workTime","patients","reports","actions","createDoctor","doctor","console","log","push","updateDoctor","index","findIndex","d","deleteDoctor","slice","createReport","report","updateReport","p","deletePatient","patient","updatePatient","createPatients"],"sources":["/Users/air/Documents/crm-front/src/store/index.js"],"sourcesContent":["import {defineStore} from \"pinia\";\n\nexport const useStore = defineStore('store', {\n  state: () => ({\n    shopId: parseInt(localStorage.getItem('shopId')) || null,\n    doctors:[\n      {\n        id:1,\n        doctorName:\"Akbarjon\",\n        surname:\"Zokirov\",\n        serviceCost:200000,\n        category:\"Stomatolog\",\n        roomNumber:1,\n        workTime: [\"Thu Jun 22 2023 09:00:00 GMT+0500 (Uzbekistan Standard Time)\", \"Thu Jun 22 2023 18:00:00 GMT+0500 (Uzbekistan Standard Time)\"]\n      }\n    ],\n    patients:[],\n    reports:[]\n  }),\n  actions: {\n    createDoctor(doctor){\n      console.log(doctor);\n      this.doctors.push(doctor)\n    },\n    updateDoctor(doctor){\n      console.log(doctor);\n      const index = this.doctors.findIndex(d => d.id === doctor.id);\n      this.doctors[index] = doctor\n    },\n    deleteDoctor(doctor){\n      const index = this.doctors.findIndex(d => d.id === doctor.id);\n      this.doctors.slice(index, 1)\n    },\n    createReport(report){\n      this.reports.push(report)\n    },\n    updateReport(report){\n      const index = this.patients.findIndex(p => p.id === report.id);\n      this.reports[index] = report\n    },\n    deletePatient(patient){\n      const index = this.patients.findIndex(p => p.id === patient.id);\n      this.patients.slice(index, 1)\n    },\n    updatePatient(patient){\n      const index = this.patients.findIndex(p => p.id === patient.id);\n      this.patients[index] = patient\n    },\n    createPatients(patient){\n      this.patients.push(patient)    \n    }\n  },\n});\n"],"mappings":";AAAA,SAAQA,WAAW,QAAO,OAAO;AAEjC,OAAO,MAAMC,QAAQ,GAAGD,WAAW,CAAC,OAAO,EAAE;EAC3CE,KAAK,EAAEA,CAAA,MAAO;IACZC,MAAM,EAAEC,QAAQ,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI;IACxDC,OAAO,EAAC,CACN;MACEC,EAAE,EAAC,CAAC;MACJC,UAAU,EAAC,UAAU;MACrBC,OAAO,EAAC,SAAS;MACjBC,WAAW,EAAC,MAAM;MAClBC,QAAQ,EAAC,YAAY;MACrBC,UAAU,EAAC,CAAC;MACZC,QAAQ,EAAE,CAAC,8DAA8D,EAAE,8DAA8D;IAC3I,CAAC,CACF;IACDC,QAAQ,EAAC,EAAE;IACXC,OAAO,EAAC;EACV,CAAC,CAAC;EACFC,OAAO,EAAE;IACPC,YAAYA,CAACC,MAAM,EAAC;MAClBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnB,IAAI,CAACZ,OAAO,CAACe,IAAI,CAACH,MAAM,CAAC;IAC3B,CAAC;IACDI,YAAYA,CAACJ,MAAM,EAAC;MAClBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnB,MAAMK,KAAK,GAAG,IAAI,CAACjB,OAAO,CAACkB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAAClB,EAAE,KAAKW,MAAM,CAACX,EAAE,CAAC;MAC7D,IAAI,CAACD,OAAO,CAACiB,KAAK,CAAC,GAAGL,MAAM;IAC9B,CAAC;IACDQ,YAAYA,CAACR,MAAM,EAAC;MAClB,MAAMK,KAAK,GAAG,IAAI,CAACjB,OAAO,CAACkB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAAClB,EAAE,KAAKW,MAAM,CAACX,EAAE,CAAC;MAC7D,IAAI,CAACD,OAAO,CAACqB,KAAK,CAACJ,KAAK,EAAE,CAAC,CAAC;IAC9B,CAAC;IACDK,YAAYA,CAACC,MAAM,EAAC;MAClB,IAAI,CAACd,OAAO,CAACM,IAAI,CAACQ,MAAM,CAAC;IAC3B,CAAC;IACDC,YAAYA,CAACD,MAAM,EAAC;MAClB,MAAMN,KAAK,GAAG,IAAI,CAACT,QAAQ,CAACU,SAAS,CAACO,CAAC,IAAIA,CAAC,CAACxB,EAAE,KAAKsB,MAAM,CAACtB,EAAE,CAAC;MAC9D,IAAI,CAACQ,OAAO,CAACQ,KAAK,CAAC,GAAGM,MAAM;IAC9B,CAAC;IACDG,aAAaA,CAACC,OAAO,EAAC;MACpB,MAAMV,KAAK,GAAG,IAAI,CAACT,QAAQ,CAACU,SAAS,CAACO,CAAC,IAAIA,CAAC,CAACxB,EAAE,KAAK0B,OAAO,CAAC1B,EAAE,CAAC;MAC/D,IAAI,CAACO,QAAQ,CAACa,KAAK,CAACJ,KAAK,EAAE,CAAC,CAAC;IAC/B,CAAC;IACDW,aAAaA,CAACD,OAAO,EAAC;MACpB,MAAMV,KAAK,GAAG,IAAI,CAACT,QAAQ,CAACU,SAAS,CAACO,CAAC,IAAIA,CAAC,CAACxB,EAAE,KAAK0B,OAAO,CAAC1B,EAAE,CAAC;MAC/D,IAAI,CAACO,QAAQ,CAACS,KAAK,CAAC,GAAGU,OAAO;IAChC,CAAC;IACDE,cAAcA,CAACF,OAAO,EAAC;MACrB,IAAI,CAACnB,QAAQ,CAACO,IAAI,CAACY,OAAO,CAAC;IAC7B;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}