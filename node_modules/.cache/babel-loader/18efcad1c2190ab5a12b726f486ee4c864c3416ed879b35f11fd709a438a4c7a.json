{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { resolveDirective as Le, openBlock as h, createElementBlock as p, normalizeClass as b, withDirectives as R, withKeys as N, createElementVNode as E, createCommentVNode as C, toDisplayString as S, renderSlot as Z, withModifiers as ke, vModelText as Be, Fragment as Ge, renderList as je, vModelDynamic as Ue } from \"vue\";\nconst He = [[\"Afghanistan (‫افغانستان‬‎)\", \"af\", \"93\"], [\"Albania (Shqipëri)\", \"al\", \"355\"], [\"Algeria (‫الجزائر‬‎)\", \"dz\", \"213\"], [\"American Samoa\", \"as\", \"1684\"], [\"Andorra\", \"ad\", \"376\"], [\"Angola\", \"ao\", \"244\"], [\"Anguilla\", \"ai\", \"1264\"], [\"Antigua and Barbuda\", \"ag\", \"1268\"], [\"Argentina\", \"ar\", \"54\"], [\"Armenia (Հայաստան)\", \"am\", \"374\"], [\"Aruba\", \"aw\", \"297\"], [\"Australia\", \"au\", \"61\"], [\"Austria (Österreich)\", \"at\", \"43\"], [\"Azerbaijan (Azərbaycan)\", \"az\", \"994\"], [\"Bahamas\", \"bs\", \"1242\"], [\"Bahrain (‫البحرين‬‎)\", \"bh\", \"973\"], [\"Bangladesh (বাংলাদেশ)\", \"bd\", \"880\"], [\"Barbados\", \"bb\", \"1246\"], [\"Belarus (Беларусь)\", \"by\", \"375\"], [\"Belgium (België)\", \"be\", \"32\"], [\"Belize\", \"bz\", \"501\"], [\"Benin (Bénin)\", \"bj\", \"229\"], [\"Bermuda\", \"bm\", \"1441\"], [\"Bhutan (འབྲུག)\", \"bt\", \"975\"], [\"Bolivia\", \"bo\", \"591\"], [\"Bosnia and Herzegovina (Босна и Херцеговина)\", \"ba\", \"387\"], [\"Botswana\", \"bw\", \"267\"], [\"Brazil (Brasil)\", \"br\", \"55\"], [\"British Indian Ocean Territory\", \"io\", \"246\"], [\"British Virgin Islands\", \"vg\", \"1284\"], [\"Brunei\", \"bn\", \"673\"], [\"Bulgaria (България)\", \"bg\", \"359\"], [\"Burkina Faso\", \"bf\", \"226\"], [\"Burundi (Uburundi)\", \"bi\", \"257\"], [\"Cambodia (កម្ពុជា)\", \"kh\", \"855\"], [\"Cameroon (Cameroun)\", \"cm\", \"237\"], [\"Canada\", \"ca\", \"1\"], [\"Cape Verde (Kabu Verdi)\", \"cv\", \"238\"], [\"Caribbean Netherlands\", \"bq\", \"599\"], [\"Cayman Islands\", \"ky\", \"1345\"], [\"Central African Republic (République centrafricaine)\", \"cf\", \"236\"], [\"Chad (Tchad)\", \"td\", \"235\"], [\"Chile\", \"cl\", \"56\"], [\"China (中国)\", \"cn\", \"86\"], [\"Christmas Island\", \"cx\", \"61\"], [\"Cocos (Keeling) Islands\", \"cc\", \"61\"], [\"Colombia\", \"co\", \"57\"], [\"Comoros (‫جزر القمر‬‎)\", \"km\", \"269\"], [\"Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)\", \"cd\", \"243\"], [\"Congo (Republic) (Congo-Brazzaville)\", \"cg\", \"242\"], [\"Cook Islands\", \"ck\", \"682\"], [\"Costa Rica\", \"cr\", \"506\"], [\"Côte d’Ivoire\", \"ci\", \"225\"], [\"Croatia (Hrvatska)\", \"hr\", \"385\"], [\"Cuba\", \"cu\", \"53\"], [\"Curaçao\", \"cw\", \"599\"], [\"Cyprus (Κύπρος)\", \"cy\", \"357\"], [\"Czech Republic (Česká republika)\", \"cz\", \"420\"], [\"Denmark (Danmark)\", \"dk\", \"45\"], [\"Djibouti\", \"dj\", \"253\"], [\"Dominica\", \"dm\", \"1767\"], [\"Dominican Republic (República Dominicana)\", \"do\", \"1\"], [\"Ecuador\", \"ec\", \"593\"], [\"Egypt (‫مصر‬‎)\", \"eg\", \"20\"], [\"El Salvador\", \"sv\", \"503\"], [\"Equatorial Guinea (Guinea Ecuatorial)\", \"gq\", \"240\"], [\"Eritrea\", \"er\", \"291\"], [\"Estonia (Eesti)\", \"ee\", \"372\"], [\"Ethiopia\", \"et\", \"251\"], [\"Falkland Islands (Islas Malvinas)\", \"fk\", \"500\"], [\"Faroe Islands (Føroyar)\", \"fo\", \"298\"], [\"Fiji\", \"fj\", \"679\"], [\"Finland (Suomi)\", \"fi\", \"358\"], [\"France\", \"fr\", \"33\"], [\"French Guiana (Guyane française)\", \"gf\", \"594\"], [\"French Polynesia (Polynésie française)\", \"pf\", \"689\"], [\"Gabon\", \"ga\", \"241\"], [\"Gambia\", \"gm\", \"220\"], [\"Georgia (საქართველო)\", \"ge\", \"995\"], [\"Germany (Deutschland)\", \"de\", \"49\"], [\"Ghana (Gaana)\", \"gh\", \"233\"], [\"Gibraltar\", \"gi\", \"350\"], [\"Greece (Ελλάδα)\", \"gr\", \"30\"], [\"Greenland (Kalaallit Nunaat)\", \"gl\", \"299\"], [\"Grenada\", \"gd\", \"1473\"], [\"Guadeloupe\", \"gp\", \"590\"], [\"Guam\", \"gu\", \"1671\"], [\"Guatemala\", \"gt\", \"502\"], [\"Guernsey\", \"gg\", \"44\", 1], [\"Guinea (Guinée)\", \"gn\", \"224\"], [\"Guinea-Bissau (Guiné Bissau)\", \"gw\", \"245\"], [\"Guyana\", \"gy\", \"592\"], [\"Haiti\", \"ht\", \"509\"], [\"Honduras\", \"hn\", \"504\"], [\"Hong Kong (香港)\", \"hk\", \"852\"], [\"Hungary (Magyarország)\", \"hu\", \"36\"], [\"Iceland (Ísland)\", \"is\", \"354\"], [\"India (भारत)\", \"in\", \"91\"], [\"Indonesia\", \"id\", \"62\"], [\"Iran (‫ایران‬‎)\", \"ir\", \"98\"], [\"Iraq (‫العراق‬‎)\", \"iq\", \"964\"], [\"Ireland\", \"ie\", \"353\"], [\"Isle of Man\", \"im\", \"44\"], [\"Israel (‫ישראל‬‎)\", \"il\", \"972\"], [\"Italy (Italia)\", \"it\", \"39\"], [\"Jamaica\", \"jm\", \"1876\"], [\"Japan (日本)\", \"jp\", \"81\"], [\"Jersey\", \"je\", \"44\"], [\"Jordan (‫الأردن‬‎)\", \"jo\", \"962\"], [\"Kazakhstan (Казахстан)\", \"kz\", \"7\"], [\"Kenya\", \"ke\", \"254\"], [\"Kiribati\", \"ki\", \"686\"], [\"Kosovo\", \"xk\", \"383\"], [\"Kuwait (‫الكويت‬‎)\", \"kw\", \"965\"], [\"Kyrgyzstan (Кыргызстан)\", \"kg\", \"996\"], [\"Laos (ລາວ)\", \"la\", \"856\"], [\"Latvia (Latvija)\", \"lv\", \"371\"], [\"Lebanon (‫لبنان‬‎)\", \"lb\", \"961\"], [\"Lesotho\", \"ls\", \"266\"], [\"Liberia\", \"lr\", \"231\"], [\"Libya (‫ليبيا‬‎)\", \"ly\", \"218\"], [\"Liechtenstein\", \"li\", \"423\"], [\"Lithuania (Lietuva)\", \"lt\", \"370\"], [\"Luxembourg\", \"lu\", \"352\"], [\"Macau (澳門)\", \"mo\", \"853\"], [\"Macedonia (FYROM) (Македонија)\", \"mk\", \"389\"], [\"Madagascar (Madagasikara)\", \"mg\", \"261\"], [\"Malawi\", \"mw\", \"265\"], [\"Malaysia\", \"my\", \"60\"], [\"Maldives\", \"mv\", \"960\"], [\"Mali\", \"ml\", \"223\"], [\"Malta\", \"mt\", \"356\"], [\"Marshall Islands\", \"mh\", \"692\"], [\"Martinique\", \"mq\", \"596\"], [\"Mauritania (‫موريتانيا‬‎)\", \"mr\", \"222\"], [\"Mauritius (Moris)\", \"mu\", \"230\"], [\"Mayotte\", \"yt\", \"262\"], [\"Mexico (México)\", \"mx\", \"52\"], [\"Micronesia\", \"fm\", \"691\"], [\"Moldova (Republica Moldova)\", \"md\", \"373\"], [\"Monaco\", \"mc\", \"377\"], [\"Mongolia (Монгол)\", \"mn\", \"976\"], [\"Montenegro (Crna Gora)\", \"me\", \"382\"], [\"Montserrat\", \"ms\", \"1664\"], [\"Morocco (‫المغرب‬‎)\", \"ma\", \"212\"], [\"Mozambique (Moçambique)\", \"mz\", \"258\"], [\"Myanmar (Burma) (မြန်မာ)\", \"mm\", \"95\"], [\"Namibia (Namibië)\", \"na\", \"264\"], [\"Nauru\", \"nr\", \"674\"], [\"Nepal (नेपाल)\", \"np\", \"977\"], [\"Netherlands (Nederland)\", \"nl\", \"31\"], [\"New Caledonia (Nouvelle-Calédonie)\", \"nc\", \"687\"], [\"New Zealand\", \"nz\", \"64\"], [\"Nicaragua\", \"ni\", \"505\"], [\"Niger (Nijar)\", \"ne\", \"227\"], [\"Nigeria\", \"ng\", \"234\"], [\"Niue\", \"nu\", \"683\"], [\"Norfolk Island\", \"nf\", \"672\"], [\"North Korea (조선 민주주의 인민 공화국)\", \"kp\", \"850\"], [\"Northern Mariana Islands\", \"mp\", \"1670\"], [\"Norway (Norge)\", \"no\", \"47\"], [\"Oman (‫عُمان‬‎)\", \"om\", \"968\"], [\"Pakistan (‫پاکستان‬‎)\", \"pk\", \"92\"], [\"Palau\", \"pw\", \"680\"], [\"Palestine (‫فلسطين‬‎)\", \"ps\", \"970\"], [\"Panama (Panamá)\", \"pa\", \"507\"], [\"Papua New Guinea\", \"pg\", \"675\"], [\"Paraguay\", \"py\", \"595\"], [\"Peru (Perú)\", \"pe\", \"51\"], [\"Philippines\", \"ph\", \"63\"], [\"Poland (Polska)\", \"pl\", \"48\"], [\"Portugal\", \"pt\", \"351\"], [\"Puerto Rico\", \"pr\", \"1\"], [\"Qatar (‫قطر‬‎)\", \"qa\", \"974\"], [\"Réunion (La Réunion)\", \"re\", \"262\"], [\"Romania (România)\", \"ro\", \"40\"], [\"Russia (Россия)\", \"ru\", \"7\"], [\"Rwanda\", \"rw\", \"250\"], [\"Saint Barthélemy\", \"bl\", \"590\"], [\"Saint Helena\", \"sh\", \"290\"], [\"Saint Kitts and Nevis\", \"kn\", \"1869\"], [\"Saint Lucia\", \"lc\", \"1758\"], [\"Saint Martin (Saint-Martin (partie française))\", \"mf\", \"590\"], [\"Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)\", \"pm\", \"508\"], [\"Saint Vincent and the Grenadines\", \"vc\", \"1784\"], [\"Samoa\", \"ws\", \"685\"], [\"San Marino\", \"sm\", \"378\"], [\"São Tomé and Príncipe (São Tomé e Príncipe)\", \"st\", \"239\"], [\"Saudi Arabia (‫المملكة العربية السعودية‬‎)\", \"sa\", \"966\"], [\"Senegal (Sénégal)\", \"sn\", \"221\"], [\"Serbia (Србија)\", \"rs\", \"381\"], [\"Seychelles\", \"sc\", \"248\"], [\"Sierra Leone\", \"sl\", \"232\"], [\"Singapore\", \"sg\", \"65\"], [\"Sint Maarten\", \"sx\", \"1721\"], [\"Slovakia (Slovensko)\", \"sk\", \"421\"], [\"Slovenia (Slovenija)\", \"si\", \"386\"], [\"Solomon Islands\", \"sb\", \"677\"], [\"Somalia (Soomaaliya)\", \"so\", \"252\"], [\"South Africa\", \"za\", \"27\"], [\"South Korea (대한민국)\", \"kr\", \"82\"], [\"South Sudan (‫جنوب السودان‬‎)\", \"ss\", \"211\"], [\"Spain (España)\", \"es\", \"34\"], [\"Sri Lanka (ශ්‍රී ලංකාව)\", \"lk\", \"94\"], [\"Sudan (‫السودان‬‎)\", \"sd\", \"249\"], [\"Suriname\", \"sr\", \"597\"], [\"Svalbard and Jan Mayen\", \"sj\", \"47\"], [\"Swaziland\", \"sz\", \"268\"], [\"Sweden (Sverige)\", \"se\", \"46\"], [\"Switzerland (Schweiz)\", \"ch\", \"41\"], [\"Syria (‫سوريا‬‎)\", \"sy\", \"963\"], [\"Taiwan (台灣)\", \"tw\", \"886\"], [\"Tajikistan\", \"tj\", \"992\"], [\"Tanzania\", \"tz\", \"255\"], [\"Thailand (ไทย)\", \"th\", \"66\"], [\"Timor-Leste\", \"tl\", \"670\"], [\"Togo\", \"tg\", \"228\"], [\"Tokelau\", \"tk\", \"690\"], [\"Tonga\", \"to\", \"676\"], [\"Trinidad and Tobago\", \"tt\", \"1868\"], [\"Tunisia (‫تونس‬‎)\", \"tn\", \"216\"], [\"Turkey (Türkiye)\", \"tr\", \"90\"], [\"Turkmenistan\", \"tm\", \"993\"], [\"Turks and Caicos Islands\", \"tc\", \"1649\"], [\"Tuvalu\", \"tv\", \"688\"], [\"U.S. Virgin Islands\", \"vi\", \"1340\"], [\"Uganda\", \"ug\", \"256\"], [\"Ukraine (Україна)\", \"ua\", \"380\"], [\"United Arab Emirates (‫الإمارات العربية المتحدة‬‎)\", \"ae\", \"971\"], [\"United Kingdom\", \"gb\", \"44\"], [\"United States\", \"us\", \"1\"], [\"Uruguay\", \"uy\", \"598\"], [\"Uzbekistan (Oʻzbekiston)\", \"uz\", \"998\"], [\"Vanuatu\", \"vu\", \"678\"], [\"Vatican City (Città del Vaticano)\", \"va\", \"39\"], [\"Venezuela\", \"ve\", \"58\"], [\"Vietnam (Việt Nam)\", \"vn\", \"84\"], [\"Wallis and Futuna (Wallis-et-Futuna)\", \"wf\", \"681\"], [\"Western Sahara (‫الصحراء الغربية‬‎)\", \"eh\", \"212\"], [\"Yemen (‫اليمن‬‎)\", \"ye\", \"967\"], [\"Zambia\", \"zm\", \"260\"], [\"Zimbabwe\", \"zw\", \"263\"], [\"Åland Islands\", \"ax\", \"358\"]],\n  Ve = He.map(([e, d, t]) => ({\n    name: e,\n    iso2: d.toUpperCase(),\n    dialCode: t\n  }));\nfunction Ke() {\n  return fetch(\"https://ip2c.org/s\").then(e => e.text()).then(e => {\n    const d = (e || \"\").toString();\n    if (!d || d[0] !== \"1\") throw new Error(\"unable to fetch the country\");\n    return d.substr(2, 2);\n  });\n}\nfunction We(e, d) {\n  if (e.setSelectionRange) e.focus(), e.setSelectionRange(d, d);else if (e.createTextRange) {\n    const t = e.createTextRange();\n    t.collapse(!0), t.moveEnd(\"character\", d), t.moveStart(\"character\", d), t.select();\n  }\n}\nconst ze = [{\n    name: \"allCountries\",\n    type: Array,\n    default: Ve,\n    description: \"All countries that are used in <code>libphonenumber-js</code>, can be overridden by this prop\",\n    inDemo: !1\n  }, {\n    name: \"autoFormat\",\n    type: Boolean,\n    default: !0,\n    description: \"Auto update the input to the formatted phone number when it's valid\",\n    inDemo: !0\n  }, {\n    name: \"customValidate\",\n    type: [Boolean, RegExp],\n    default: !1,\n    description: \"Custom validation RegExp for input\",\n    inDemo: !1\n  }, {\n    name: \"defaultCountry\",\n    default: \"\",\n    type: [String, Number],\n    description: \"Default country (by iso2 or dialCode), will override the country fetched from IP address of user\",\n    inDemo: !1\n  }, {\n    name: \"disabled\",\n    default: !1,\n    type: Boolean,\n    description: \"Disable <code>vue-tel-input</code>, including the input & flag dropdown\",\n    inDemo: !1\n  }, {\n    name: \"autoDefaultCountry\",\n    default: !0,\n    type: Boolean,\n    description: \"To fetch default country based on IP address of user\",\n    inDemo: !1\n  }, {\n    name: \"dropdownOptions\",\n    type: Object,\n    description: \"Options for dropdown, see below\",\n    inDemo: !1\n  }, {\n    name: \"dropdownOptions.disabled\",\n    default: !1,\n    type: Boolean,\n    description: \"Disable dropdown\",\n    inDemo: !1\n  }, {\n    name: \"dropdownOptions.showDialCodeInList\",\n    default: !0,\n    type: Boolean,\n    description: \"Show dial code in the dropdown list\",\n    inDemo: !0\n  }, {\n    name: \"dropdownOptions.showDialCodeInSelection\",\n    default: !1,\n    type: Boolean,\n    description: \"Show dial code in the dropdown selection\",\n    inDemo: !0\n  }, {\n    name: \"dropdownOptions.showFlags\",\n    default: !0,\n    type: Boolean,\n    description: \"Show flags in the dropdown selection and list\",\n    inDemo: !0\n  }, {\n    name: \"dropdownOptions.showSearchBox\",\n    default: !1,\n    type: Boolean,\n    description: \"Show country search box\",\n    inDemo: !0\n  }, {\n    name: \"dropdownOptions.tabindex\",\n    default: 0,\n    type: Number,\n    description: \"Native dropdown <code>tabindex</code> attribute\",\n    inDemo: !1\n  }, {\n    name: \"ignoredCountries\",\n    default: [],\n    type: Array,\n    description: \"List of countries will NOT be shown on the dropdown\",\n    inDemo: !1\n  }, {\n    name: \"inputOptions\",\n    type: Object,\n    description: \"Options for input, see below\",\n    inDemo: !1\n  }, {\n    name: \"inputOptions.autocomplete\",\n    type: String,\n    default: \"on\",\n    description: \"Native input <code>autocomplete</code> attribute\",\n    inDemo: !1\n  }, {\n    name: \"inputOptions.autofocus\",\n    type: Boolean,\n    default: !1,\n    description: \"Native input <code>autofocus</code> attribute\",\n    inDemo: !1\n  },\n  // {\n  //   name: 'inputOptions.dynamicPlaceholder',\n  //   default: false,\n  //   type: Boolean,\n  //   description: 'Placeholder as a sample phone number in the current country',\n  //   inDemo: false,\n  // },\n  {\n    name: \"inputOptions.aria-describedby\",\n    default: \"\",\n    type: String,\n    description: \"Native input <code>aria-describedby</code> attribute\",\n    inDemo: !1\n  }, {\n    name: \"inputOptions.id\",\n    default: \"\",\n    type: String,\n    description: \"Native input <code>id</code> attribute\",\n    inDemo: !1\n  }, {\n    name: \"inputOptions.maxlength\",\n    default: 25,\n    type: Number,\n    description: \"Native input <code>maxlength</code> attribute\",\n    inDemo: !1\n  }, {\n    name: \"inputOptions.name\",\n    default: \"telephone\",\n    type: String,\n    description: \"Native input <code>name</code> attribute\",\n    inDemo: !1\n  }, {\n    name: \"inputOptions.showDialCode\",\n    default: !1,\n    type: Boolean,\n    description: \"Show dial code in input\",\n    inDemo: !1\n  }, {\n    name: \"inputOptions.placeholder\",\n    default: \"Enter a phone number\",\n    type: String,\n    description: \"Placeholder for the input\",\n    inDemo: !1\n  }, {\n    name: \"inputOptions.readonly\",\n    default: !1,\n    type: Boolean,\n    description: \"Native input <code>readonly</code> attribute\",\n    inDemo: !1\n  }, {\n    name: \"inputOptions.required\",\n    default: !1,\n    type: Boolean,\n    description: \"Native input <code>required</code> attribute\",\n    inDemo: !1\n  }, {\n    name: \"inputOptions.tabindex\",\n    default: 0,\n    type: Number,\n    description: \"Native input <code>tabindex</code> attribute\",\n    inDemo: !1\n  }, {\n    name: \"inputOptions.type\",\n    default: \"tel\",\n    type: String,\n    description: \"Native input <code>type</code> attribute\",\n    inDemo: !1\n  }, {\n    name: \"inputOptions.styleClasses\",\n    default: \"\",\n    type: [String, Array, Object],\n    description: \"Custom classes for the <code>input</code>\",\n    inDemo: !1\n  }, {\n    name: \"invalidMsg\",\n    default: \"\",\n    type: String,\n    description: \"\",\n    inDemo: !1\n  }, {\n    name: \"mode\",\n    default: \"auto\",\n    type: String,\n    description: \"Allowed values: <code>'auto'</code> (Default set by phone),  <code>'international'</code> (Format number with the dial code i.e. + 61), <code>'national'</code> (Format number without dial code i.e. 0321232)\",\n    inDemo: !0,\n    options: [\"auto\", \"national\", \"international\"]\n  }, {\n    name: \"onlyCountries\",\n    default: [],\n    type: Array,\n    description: \"List of countries will be shown on the dropdown\",\n    inDemo: !1\n  }, {\n    name: \"preferredCountries\",\n    default: [],\n    type: Array,\n    description: \"Preferred countries list, will be on top of the dropdown\",\n    inDemo: !1\n  }, {\n    name: \"styleClasses\",\n    default: \"\",\n    type: [String, Array, Object],\n    description: \"Custom classes for the wrapper\",\n    inDemo: !1\n  }, {\n    name: \"validCharactersOnly\",\n    default: !1,\n    type: Boolean,\n    description: \"Only allow valid characters in a phone number (will also verify in <code>mounted</code>, so phone number with invalid characters will be shown as an empty string)\",\n    inDemo: !1\n  }],\n  Pe = [...ze].reduce((e, d) => {\n    if (d.name.includes(\".\")) {\n      const [t, n] = d.name.split(\".\");\n      e[t] ? Object.assign(e[t], {\n        [n]: d.default\n      }) : Object.assign(e, {\n        [t]: {\n          [n]: d.default\n        }\n      });\n    } else Object.assign(e, {\n      [d.name]: d.default\n    });\n    return e;\n  }, {}),\n  G = {\n    options: {\n      ...Pe\n    }\n  },\n  Xe = {\n    version: 4,\n    country_calling_codes: {\n      1: [\"US\", \"AG\", \"AI\", \"AS\", \"BB\", \"BM\", \"BS\", \"CA\", \"DM\", \"DO\", \"GD\", \"GU\", \"JM\", \"KN\", \"KY\", \"LC\", \"MP\", \"MS\", \"PR\", \"SX\", \"TC\", \"TT\", \"VC\", \"VG\", \"VI\"],\n      7: [\"RU\", \"KZ\"],\n      20: [\"EG\"],\n      27: [\"ZA\"],\n      30: [\"GR\"],\n      31: [\"NL\"],\n      32: [\"BE\"],\n      33: [\"FR\"],\n      34: [\"ES\"],\n      36: [\"HU\"],\n      39: [\"IT\", \"VA\"],\n      40: [\"RO\"],\n      41: [\"CH\"],\n      43: [\"AT\"],\n      44: [\"GB\", \"GG\", \"IM\", \"JE\"],\n      45: [\"DK\"],\n      46: [\"SE\"],\n      47: [\"NO\", \"SJ\"],\n      48: [\"PL\"],\n      49: [\"DE\"],\n      51: [\"PE\"],\n      52: [\"MX\"],\n      53: [\"CU\"],\n      54: [\"AR\"],\n      55: [\"BR\"],\n      56: [\"CL\"],\n      57: [\"CO\"],\n      58: [\"VE\"],\n      60: [\"MY\"],\n      61: [\"AU\", \"CC\", \"CX\"],\n      62: [\"ID\"],\n      63: [\"PH\"],\n      64: [\"NZ\"],\n      65: [\"SG\"],\n      66: [\"TH\"],\n      81: [\"JP\"],\n      82: [\"KR\"],\n      84: [\"VN\"],\n      86: [\"CN\"],\n      90: [\"TR\"],\n      91: [\"IN\"],\n      92: [\"PK\"],\n      93: [\"AF\"],\n      94: [\"LK\"],\n      95: [\"MM\"],\n      98: [\"IR\"],\n      211: [\"SS\"],\n      212: [\"MA\", \"EH\"],\n      213: [\"DZ\"],\n      216: [\"TN\"],\n      218: [\"LY\"],\n      220: [\"GM\"],\n      221: [\"SN\"],\n      222: [\"MR\"],\n      223: [\"ML\"],\n      224: [\"GN\"],\n      225: [\"CI\"],\n      226: [\"BF\"],\n      227: [\"NE\"],\n      228: [\"TG\"],\n      229: [\"BJ\"],\n      230: [\"MU\"],\n      231: [\"LR\"],\n      232: [\"SL\"],\n      233: [\"GH\"],\n      234: [\"NG\"],\n      235: [\"TD\"],\n      236: [\"CF\"],\n      237: [\"CM\"],\n      238: [\"CV\"],\n      239: [\"ST\"],\n      240: [\"GQ\"],\n      241: [\"GA\"],\n      242: [\"CG\"],\n      243: [\"CD\"],\n      244: [\"AO\"],\n      245: [\"GW\"],\n      246: [\"IO\"],\n      247: [\"AC\"],\n      248: [\"SC\"],\n      249: [\"SD\"],\n      250: [\"RW\"],\n      251: [\"ET\"],\n      252: [\"SO\"],\n      253: [\"DJ\"],\n      254: [\"KE\"],\n      255: [\"TZ\"],\n      256: [\"UG\"],\n      257: [\"BI\"],\n      258: [\"MZ\"],\n      260: [\"ZM\"],\n      261: [\"MG\"],\n      262: [\"RE\", \"YT\"],\n      263: [\"ZW\"],\n      264: [\"NA\"],\n      265: [\"MW\"],\n      266: [\"LS\"],\n      267: [\"BW\"],\n      268: [\"SZ\"],\n      269: [\"KM\"],\n      290: [\"SH\", \"TA\"],\n      291: [\"ER\"],\n      297: [\"AW\"],\n      298: [\"FO\"],\n      299: [\"GL\"],\n      350: [\"GI\"],\n      351: [\"PT\"],\n      352: [\"LU\"],\n      353: [\"IE\"],\n      354: [\"IS\"],\n      355: [\"AL\"],\n      356: [\"MT\"],\n      357: [\"CY\"],\n      358: [\"FI\", \"AX\"],\n      359: [\"BG\"],\n      370: [\"LT\"],\n      371: [\"LV\"],\n      372: [\"EE\"],\n      373: [\"MD\"],\n      374: [\"AM\"],\n      375: [\"BY\"],\n      376: [\"AD\"],\n      377: [\"MC\"],\n      378: [\"SM\"],\n      380: [\"UA\"],\n      381: [\"RS\"],\n      382: [\"ME\"],\n      383: [\"XK\"],\n      385: [\"HR\"],\n      386: [\"SI\"],\n      387: [\"BA\"],\n      389: [\"MK\"],\n      420: [\"CZ\"],\n      421: [\"SK\"],\n      423: [\"LI\"],\n      500: [\"FK\"],\n      501: [\"BZ\"],\n      502: [\"GT\"],\n      503: [\"SV\"],\n      504: [\"HN\"],\n      505: [\"NI\"],\n      506: [\"CR\"],\n      507: [\"PA\"],\n      508: [\"PM\"],\n      509: [\"HT\"],\n      590: [\"GP\", \"BL\", \"MF\"],\n      591: [\"BO\"],\n      592: [\"GY\"],\n      593: [\"EC\"],\n      594: [\"GF\"],\n      595: [\"PY\"],\n      596: [\"MQ\"],\n      597: [\"SR\"],\n      598: [\"UY\"],\n      599: [\"CW\", \"BQ\"],\n      670: [\"TL\"],\n      672: [\"NF\"],\n      673: [\"BN\"],\n      674: [\"NR\"],\n      675: [\"PG\"],\n      676: [\"TO\"],\n      677: [\"SB\"],\n      678: [\"VU\"],\n      679: [\"FJ\"],\n      680: [\"PW\"],\n      681: [\"WF\"],\n      682: [\"CK\"],\n      683: [\"NU\"],\n      685: [\"WS\"],\n      686: [\"KI\"],\n      687: [\"NC\"],\n      688: [\"TV\"],\n      689: [\"PF\"],\n      690: [\"TK\"],\n      691: [\"FM\"],\n      692: [\"MH\"],\n      850: [\"KP\"],\n      852: [\"HK\"],\n      853: [\"MO\"],\n      855: [\"KH\"],\n      856: [\"LA\"],\n      880: [\"BD\"],\n      886: [\"TW\"],\n      960: [\"MV\"],\n      961: [\"LB\"],\n      962: [\"JO\"],\n      963: [\"SY\"],\n      964: [\"IQ\"],\n      965: [\"KW\"],\n      966: [\"SA\"],\n      967: [\"YE\"],\n      968: [\"OM\"],\n      970: [\"PS\"],\n      971: [\"AE\"],\n      972: [\"IL\"],\n      973: [\"BH\"],\n      974: [\"QA\"],\n      975: [\"BT\"],\n      976: [\"MN\"],\n      977: [\"NP\"],\n      992: [\"TJ\"],\n      993: [\"TM\"],\n      994: [\"AZ\"],\n      995: [\"GE\"],\n      996: [\"KG\"],\n      998: [\"UZ\"]\n    },\n    countries: {\n      AC: [\"247\", \"00\", \"(?:[01589]\\\\d|[46])\\\\d{4}\", [5, 6]],\n      AD: [\"376\", \"00\", \"(?:1|6\\\\d)\\\\d{7}|[135-9]\\\\d{5}\", [6, 8, 9], [[\"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"[135-9]\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"1\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"]]]],\n      AE: [\"971\", \"00\", \"(?:[4-7]\\\\d|9[0-689])\\\\d{7}|800\\\\d{2,9}|[2-4679]\\\\d{7}\", [5, 6, 7, 8, 9, 10, 11, 12], [[\"(\\\\d{3})(\\\\d{2,9})\", \"$1 $2\", [\"60|8\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[236]|[479][2-8]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d)(\\\\d{5})\", \"$1 $2 $3\", [\"[479]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"]], \"0\"],\n      AF: [\"93\", \"00\", \"[2-7]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-7]\"], \"0$1\"]], \"0\"],\n      AG: [\"1\", \"011\", \"(?:268|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([457]\\\\d{6})$\", \"268$1\", 0, \"268\"],\n      AI: [\"1\", \"011\", \"(?:264|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2457]\\\\d{6})$\", \"264$1\", 0, \"264\"],\n      AL: [\"355\", \"00\", \"(?:700\\\\d\\\\d|900)\\\\d{3}|8\\\\d{5,7}|(?:[2-5]|6\\\\d)\\\\d{7}\", [6, 7, 8, 9], [[\"(\\\\d{3})(\\\\d{3,4})\", \"$1 $2\", [\"80|9\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"4[2-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2358][2-5]|4\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[23578]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"6\"], \"0$1\"]], \"0\"],\n      AM: [\"374\", \"00\", \"(?:[1-489]\\\\d|55|60|77)\\\\d{6}\", [8], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]0\"], \"0 $1\"], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"2|3[12]\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"1|47\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[3-9]\"], \"0$1\"]], \"0\"],\n      AO: [\"244\", \"00\", \"[29]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[29]\"]]]],\n      AR: [\"54\", \"00\", \"(?:11|[89]\\\\d\\\\d)\\\\d{8}|[2368]\\\\d{9}\", [10, 11], [[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2-$3\", [\"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\", \"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)\", \"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\", \"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"], \"0$1\", 1], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"1\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[68]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[23]\"], \"0$1\", 1], [\"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$2 15-$3-$4\", [\"9(?:2[2-469]|3[3-578])\", \"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\", \"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)\", \"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\", \"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"], \"0$1\", 0, \"$1 $2 $3-$4\"], [\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$2 15-$3-$4\", [\"91\"], \"0$1\", 0, \"$1 $2 $3-$4\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1-$2-$3\", [\"8\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$2 15-$3-$4\", [\"9\"], \"0$1\", 0, \"$1 $2 $3-$4\"]], \"0\", 0, \"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?\", \"9$1\"],\n      AS: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|684|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([267]\\\\d{6})$\", \"684$1\", 0, \"684\"],\n      AT: [\"43\", \"00\", \"1\\\\d{3,12}|2\\\\d{6,12}|43(?:(?:0\\\\d|5[02-9])\\\\d{3,9}|2\\\\d{4,5}|[3467]\\\\d{4}|8\\\\d{4,6}|9\\\\d{4,7})|5\\\\d{4,12}|8\\\\d{7,12}|9\\\\d{8,12}|(?:[367]\\\\d|4[0-24-9])\\\\d{4,11}\", [4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [[\"(\\\\d)(\\\\d{3,12})\", \"$1 $2\", [\"1(?:11|[2-9])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})\", \"$1 $2\", [\"517\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3,5})\", \"$1 $2\", [\"5[079]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3,10})\", \"$1 $2\", [\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3,9})\", \"$1 $2\", [\"[2-467]|5[2-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\", \"$1 $2 $3\", [\"5\"], \"0$1\"]], \"0\"],\n      AU: [\"61\", \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"1(?:[0-79]\\\\d{7}(?:\\\\d(?:\\\\d{2})?)?|8[0-24-9]\\\\d{7})|[2-478]\\\\d{8}|1\\\\d{4,7}\", [5, 6, 7, 8, 9, 10, 12], [[\"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"16\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"16\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"14|4\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[2378]\"], \"(0$1)\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:30|[89])\"]]], \"0\", 0, \"0|(183[12])\", 0, 0, 0, [[\"(?:(?:2(?:[0-26-9]\\\\d|3[0-8]|4[02-9]|5[0135-9])|3(?:[0-3589]\\\\d|4[0-578]|6[1-9]|7[0-35-9])|7(?:[013-57-9]\\\\d|2[0-8]))\\\\d{3}|8(?:51(?:0(?:0[03-9]|[12479]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\\\d|7[89]|9[0-4]))|(?:6[0-8]|[78]\\\\d)\\\\d{3}|9(?:[02-9]\\\\d{3}|1(?:(?:[0-58]\\\\d|6[0135-9])\\\\d|7(?:0[0-24-9]|[1-9]\\\\d)|9(?:[0-46-9]\\\\d|5[0-79])))))\\\\d{3}\", [9]], [\"4(?:83[0-38]|93[0-6])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[06-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\\\d{6}\", [9]], [\"180(?:0\\\\d{3}|2)\\\\d{3}\", [7, 10]], [\"190[0-26]\\\\d{6}\", [10]], 0, 0, 0, [\"163\\\\d{2,6}\", [5, 6, 7, 8, 9]], [\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\", [9]], [\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\", [6, 8, 10, 12]]], \"0011\"],\n      AW: [\"297\", \"00\", \"(?:[25-79]\\\\d\\\\d|800)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[25-9]\"]]]],\n      AX: [\"358\", \"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\", \"2\\\\d{4,9}|35\\\\d{4,5}|(?:60\\\\d\\\\d|800)\\\\d{4,6}|7\\\\d{5,11}|(?:[14]\\\\d|3[0-46-9]|50)\\\\d{4,8}\", [5, 6, 7, 8, 9, 10, 11, 12], 0, \"0\", 0, 0, 0, 0, \"18\", 0, \"00\"],\n      AZ: [\"994\", \"00\", \"365\\\\d{6}|(?:[124579]\\\\d|60|88)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"90\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[28]|2|365|46\", \"1[28]|2|365[45]|46\", \"1[28]|2|365(?:4|5[02])|46\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[13-9]\"], \"0$1\"]], \"0\"],\n      BA: [\"387\", \"00\", \"6\\\\d{8}|(?:[35689]\\\\d|49|70)\\\\d{6}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[1-3]|[7-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2-$3\", [\"[3-5]|6[56]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"6\"], \"0$1\"]], \"0\"],\n      BB: [\"1\", \"011\", \"(?:246|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-9]\\\\d{6})$\", \"246$1\", 0, \"246\"],\n      BD: [\"880\", \"00\", \"[1-469]\\\\d{9}|8[0-79]\\\\d{7,8}|[2-79]\\\\d{8}|[2-9]\\\\d{7}|[3-9]\\\\d{6}|[57-9]\\\\d{5}\", [6, 7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{4,6})\", \"$1-$2\", [\"31[5-8]|[459]1\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3,7})\", \"$1-$2\", [\"3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:28|4[14]|5)|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3,6})\", \"$1-$2\", [\"[13-9]|22\"], \"0$1\"], [\"(\\\\d)(\\\\d{7,8})\", \"$1-$2\", [\"2\"], \"0$1\"]], \"0\"],\n      BE: [\"32\", \"00\", \"4\\\\d{8}|[1-9]\\\\d{7}\", [8, 9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:80|9)0\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[239]|4[23]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[15-8]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"4\"], \"0$1\"]], \"0\"],\n      BF: [\"226\", \"00\", \"[025-7]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[025-7]\"]]]],\n      BG: [\"359\", \"00\", \"[2-7]\\\\d{6,7}|[89]\\\\d{6,8}|2\\\\d{5}\", [6, 7, 8, 9], [[\"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"2\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"43[1-6]|70[1-9]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:70|8)0\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"43[1-7]|7\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[48]|9[08]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], \"0\"],\n      BH: [\"973\", \"00\", \"[136-9]\\\\d{7}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[13679]|8[047]\"]]]],\n      BI: [\"257\", \"00\", \"(?:[267]\\\\d|31)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2367]\"]]]],\n      BJ: [\"229\", \"00\", \"(?:[25689]\\\\d|40)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24-689]\"]]]],\n      BL: [\"590\", \"00\", \"(?:590|(?:69|80)\\\\d|976)\\\\d{6}\", [9], 0, \"0\", 0, 0, 0, 0, 0, [[\"590(?:2[7-9]|5[12]|87)\\\\d{4}\"], [\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"], [\"80[0-5]\\\\d{6}\"], 0, 0, 0, 0, 0, [\"976[01]\\\\d{5}\"]]],\n      BM: [\"1\", \"011\", \"(?:441|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-8]\\\\d{6})$\", \"441$1\", 0, \"441\"],\n      BN: [\"673\", \"00\", \"[2-578]\\\\d{6}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-578]\"]]]],\n      BO: [\"591\", \"00(?:1\\\\d)?\", \"(?:[2-467]\\\\d\\\\d|8001)\\\\d{5}\", [8, 9], [[\"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"[23]|4[46]\"]], [\"(\\\\d{8})\", \"$1\", [\"[67]\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]], \"0\", 0, \"0(1\\\\d)?\"],\n      BQ: [\"599\", \"00\", \"(?:[34]1|7\\\\d)\\\\d{5}\", [7], 0, 0, 0, 0, 0, 0, \"[347]\"],\n      BR: [\"55\", \"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\", \"(?:[1-46-9]\\\\d\\\\d|5(?:[0-46-9]\\\\d|5[0-46-9]))\\\\d{8}|[1-9]\\\\d{9}|[3589]\\\\d{8}|[34]\\\\d{7}\", [8, 9, 10, 11], [[\"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"300|4(?:0[02]|37)\", \"4(?:02|37)0|[34]00\"]], [\"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\", \"$1 $2 $3\", [\"(?:[358]|90)0\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]\"], \"($1)\"], [\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1 $2-$3\", [\"[16][1-9]|[2-57-9]\"], \"($1)\"]], \"0\", 0, \"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\", \"$2\"],\n      BS: [\"1\", \"011\", \"(?:242|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([3-8]\\\\d{6})$\", \"242$1\", 0, \"242\"],\n      BT: [\"975\", \"00\", \"[17]\\\\d{7}|[2-8]\\\\d{6}\", [7, 8], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-68]|7[246]\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[67]|7\"]]]],\n      BW: [\"267\", \"00\", \"(?:0800|(?:[37]|800)\\\\d)\\\\d{6}|(?:[2-6]\\\\d|90)\\\\d{5}\", [7, 8, 10], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"90\"]], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[24-6]|3[15-79]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[37]\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"0\"]], [\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]]]],\n      BY: [\"375\", \"810\", \"(?:[12]\\\\d|33|44|902)\\\\d{7}|8(?:0[0-79]\\\\d{5,7}|[1-7]\\\\d{9})|8(?:1[0-489]|[5-79]\\\\d)\\\\d{7}|8[1-79]\\\\d{6,7}|8[0-79]\\\\d{5}|8\\\\d{5}\", [6, 7, 8, 9, 10, 11], [[\"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"800\"], \"8 $1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2,4})\", \"$1 $2 $3\", [\"800\"], \"8 $1\"], [\"(\\\\d{4})(\\\\d{2})(\\\\d{3})\", \"$1 $2-$3\", [\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\", \"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"], \"8 0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"1(?:[56]|7[467])|2[1-3]\"], \"8 0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[1-4]\"], \"8 0$1\"], [\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"8 $1\"]], \"8\", 0, \"0|80?\", 0, 0, 0, 0, \"8~10\"],\n      BZ: [\"501\", \"00\", \"(?:0800\\\\d|[2-8])\\\\d{6}\", [7, 11], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-8]\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1-$2-$3-$4\", [\"0\"]]]],\n      CA: [\"1\", \"011\", \"(?:[2-8]\\\\d|90)\\\\d{8}|3\\\\d{6}\", [7, 10], 0, \"1\", 0, 0, 0, 0, 0, [[\"(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|6[578])|4(?:03|1[68]|3[178]|50|68|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|13|39|47|72)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\", [10]], [\"\", [10]], [\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", [10]], [\"900[2-9]\\\\d{6}\", [10]], [\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|(?:5(?:00|2[125-7]|33|44|66|77|88)|622)[2-9]\\\\d{6}\", [10]], 0, [\"310\\\\d{4}\", [7]], 0, [\"600[2-9]\\\\d{6}\", [10]]]],\n      CC: [\"61\", \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\", [6, 7, 8, 9, 10, 12], 0, \"0\", 0, \"0|([59]\\\\d{7})$\", \"8$1\", 0, 0, [[\"8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}\", [9]], [\"4(?:83[0-38]|93[0-6])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[06-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\\\d{6}\", [9]], [\"180(?:0\\\\d{3}|2)\\\\d{3}\", [7, 10]], [\"190[0-26]\\\\d{6}\", [10]], 0, 0, 0, 0, [\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\", [9]], [\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\", [6, 8, 10, 12]]], \"0011\"],\n      CD: [\"243\", \"00\", \"[189]\\\\d{8}|[1-68]\\\\d{6}\", [7, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"88\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[1-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]], \"0\"],\n      CF: [\"236\", \"00\", \"(?:[27]\\\\d{3}|8776)\\\\d{4}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[278]\"]]]],\n      CG: [\"242\", \"00\", \"222\\\\d{6}|(?:0\\\\d|80)\\\\d{7}\", [9], [[\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[02]\"]]]],\n      CH: [\"41\", \"00\", \"8\\\\d{11}|[2-9]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8[047]|90\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-79]|81\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"8\"], \"0$1\"]], \"0\"],\n      CI: [\"225\", \"00\", \"[02]\\\\d{9}\", [10], [[\"(\\\\d{2})(\\\\d{2})(\\\\d)(\\\\d{5})\", \"$1 $2 $3 $4\", [\"2\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"0\"]]]],\n      CK: [\"682\", \"00\", \"[2-578]\\\\d{4}\", [5], [[\"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"[2-578]\"]]]],\n      CL: [\"56\", \"(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0\", \"12300\\\\d{6}|6\\\\d{9,10}|[2-9]\\\\d{8}\", [9, 10, 11], [[\"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"219\", \"2196\"], \"($1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"44\"]], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[1-36]\"], \"($1)\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"9[2-9]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"], \"($1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"60|8\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"60\"]]]],\n      CM: [\"237\", \"00\", \"[26]\\\\d{8}|88\\\\d{6,7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"88\"]], [\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[26]|88\"]]]],\n      CN: [\"86\", \"00|1(?:[12]\\\\d|79)\\\\d\\\\d00\", \"1[127]\\\\d{8,9}|2\\\\d{9}(?:\\\\d{2})?|[12]\\\\d{6,7}|86\\\\d{6}|(?:1[03-689]\\\\d|6)\\\\d{7,9}|(?:[3-579]\\\\d|8[0-57-9])\\\\d{6,9}\", [7, 8, 9, 10, 11, 12], [[\"(\\\\d{2})(\\\\d{5,6})\", \"$1 $2\", [\"(?:10|2[0-57-9])[19]\", \"(?:10|2[0-57-9])(?:10|9[56])\", \"(?:10|2[0-57-9])(?:100|9[56])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]\", \"(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]\", \"85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])\", \"85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"(?:4|80)0\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"10|2(?:[02-57-9]|1[1-9])\", \"10|2(?:[02-57-9]|1[1-9])\", \"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"9\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"80\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-578]\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"1[3-9]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"[12]\"], \"0$1\", 1]], \"0\", 0, \"0|(1(?:[12]\\\\d|79)\\\\d\\\\d)\", 0, 0, 0, 0, \"00\"],\n      CO: [\"57\", \"00(?:4(?:[14]4|56)|[579])\", \"(?:60\\\\d\\\\d|9101)\\\\d{6}|(?:1\\\\d|3)\\\\d{9}\", [10, 11], [[\"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"6\"], \"($1)\"], [\"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"[39]\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{7})\", \"$1-$2-$3\", [\"1\"], \"0$1\", 0, \"$1 $2 $3\"]], \"0\", 0, \"0(4(?:[14]4|56)|[579])?\"],\n      CR: [\"506\", \"00\", \"(?:8\\\\d|90)\\\\d{8}|(?:[24-8]\\\\d{3}|3005)\\\\d{4}\", [8, 10], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]|8[3-9]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[89]\"]]], 0, 0, \"(19(?:0[0-2468]|1[09]|20|66|77|99))\"],\n      CU: [\"53\", \"119\", \"[27]\\\\d{6,7}|[34]\\\\d{5,7}|(?:5|8\\\\d\\\\d)\\\\d{7}\", [6, 7, 8, 10], [[\"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"2[1-4]|[34]\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{6,7})\", \"$1 $2\", [\"7\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"5\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"8\"], \"0$1\"]], \"0\"],\n      CV: [\"238\", \"0\", \"(?:[2-59]\\\\d\\\\d|800)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[2-589]\"]]]],\n      CW: [\"599\", \"00\", \"(?:[34]1|60|(?:7|9\\\\d)\\\\d)\\\\d{5}\", [7, 8], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[3467]\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9[4-8]\"]]], 0, 0, 0, 0, 0, \"[69]\"],\n      CX: [\"61\", \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\", [6, 7, 8, 9, 10, 12], 0, \"0\", 0, \"0|([59]\\\\d{7})$\", \"8$1\", 0, 0, [[\"8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}\", [9]], [\"4(?:83[0-38]|93[0-6])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[06-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\\\d{6}\", [9]], [\"180(?:0\\\\d{3}|2)\\\\d{3}\", [7, 10]], [\"190[0-26]\\\\d{6}\", [10]], 0, 0, 0, 0, [\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\", [9]], [\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\", [6, 8, 10, 12]]], \"0011\"],\n      CY: [\"357\", \"00\", \"(?:[279]\\\\d|[58]0)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[257-9]\"]]]],\n      CZ: [\"420\", \"00\", \"(?:[2-578]\\\\d|60)\\\\d{7}|9\\\\d{8,11}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-8]|9[015-7]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"96\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]]]],\n      DE: [\"49\", \"00\", \"[2579]\\\\d{5,14}|49(?:[34]0|69|8\\\\d)\\\\d\\\\d?|49(?:37|49|60|7[089]|9\\\\d)\\\\d{1,3}|49(?:2[02-9]|3[2-689]|7[1-7])\\\\d{1,8}|(?:1|[368]\\\\d|4[0-8])\\\\d{3,13}|49(?:[015]\\\\d|[23]1|[46][1-8])\\\\d{1,9}\", [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [[\"(\\\\d{2})(\\\\d{3,13})\", \"$1 $2\", [\"3[02]|40|[68]9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3,12})\", \"$1 $2\", [\"2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\", \"2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{2,11})\", \"$1 $2\", [\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]\", \"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"138\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{2,10})\", \"$1 $2\", [\"3\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5,11})\", \"$1 $2\", [\"181\"], \"0$1\"], [\"(\\\\d{3})(\\\\d)(\\\\d{4,10})\", \"$1 $2 $3\", [\"1(?:3|80)|9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"1[67]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{7,12})\", \"$1 $2\", [\"8\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{6})\", \"$1 $2\", [\"185\", \"1850\", \"18500\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{7})\", \"$1 $2\", [\"18[68]\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{6})\", \"$1 $2\", [\"15[0568]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{7})\", \"$1 $2\", [\"15[1279]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{8})\", \"$1 $2\", [\"18\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{7,8})\", \"$1 $2 $3\", [\"1(?:6[023]|7)\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{2})(\\\\d{7})\", \"$1 $2 $3\", [\"15[279]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{8})\", \"$1 $2 $3\", [\"15\"], \"0$1\"]], \"0\"],\n      DJ: [\"253\", \"00\", \"(?:2\\\\d|77)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[27]\"]]]],\n      DK: [\"45\", \"00\", \"[2-9]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-9]\"]]]],\n      DM: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|767|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-7]\\\\d{6})$\", \"767$1\", 0, \"767\"],\n      DO: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, 0, 0, 0, \"8001|8[024]9\"],\n      DZ: [\"213\", \"00\", \"(?:[1-4]|[5-79]\\\\d|80)\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[1-4]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-8]\"], \"0$1\"]], \"0\"],\n      EC: [\"593\", \"00\", \"1\\\\d{9,10}|(?:[2-7]|9\\\\d)\\\\d{7}\", [8, 9, 10, 11], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[2-7]\"], \"(0$1)\", 0, \"$1-$2-$3\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1\"]]], \"0\"],\n      EE: [\"372\", \"00\", \"8\\\\d{9}|[4578]\\\\d{7}|(?:[3-8]\\\\d|90)\\\\d{5}\", [7, 8, 10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88\", \"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88\"]], [\"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"[45]|8(?:00|[1-49])\", \"[45]|8(?:00[1-9]|[1-49])\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]]]],\n      EG: [\"20\", \"00\", \"[189]\\\\d{8,9}|[24-6]\\\\d{8}|[135]\\\\d{7}\", [8, 9, 10], [[\"(\\\\d)(\\\\d{7,8})\", \"$1 $2\", [\"[23]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{6,7})\", \"$1 $2\", [\"1[35]|[4-6]|8[2468]|9[235-7]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[189]\"], \"0$1\"]], \"0\"],\n      EH: [\"212\", \"00\", \"[5-8]\\\\d{8}\", [9], 0, \"0\", 0, 0, 0, 0, \"528[89]\"],\n      ER: [\"291\", \"00\", \"[178]\\\\d{6}\", [7], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[178]\"], \"0$1\"]], \"0\"],\n      ES: [\"34\", \"00\", \"[5-9]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]00\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-9]\"]]]],\n      ET: [\"251\", \"00\", \"(?:11|[2-579]\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-579]\"], \"0$1\"]], \"0\"],\n      FI: [\"358\", \"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\", \"[1-35689]\\\\d{4}|7\\\\d{10,11}|(?:[124-7]\\\\d|3[0-46-9])\\\\d{8}|[1-9]\\\\d{5,8}\", [5, 6, 7, 8, 9, 10, 11, 12], [[\"(\\\\d)(\\\\d{4,9})\", \"$1 $2\", [\"[2568][1-8]|3(?:0[1-9]|[1-9])|9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"[12]00|[368]|70[07-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4,8})\", \"$1 $2\", [\"[1245]|7[135]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{6,10})\", \"$1 $2\", [\"7\"], \"0$1\"]], \"0\", 0, 0, 0, 0, \"1[03-79]|[2-9]\", 0, \"00\"],\n      FJ: [\"679\", \"0(?:0|52)\", \"45\\\\d{5}|(?:0800\\\\d|[235-9])\\\\d{6}\", [7, 11], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[235-9]|45\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"],\n      FK: [\"500\", \"00\", \"[2-7]\\\\d{4}\", [5]],\n      FM: [\"691\", \"00\", \"(?:[39]\\\\d\\\\d|820)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[389]\"]]]],\n      FO: [\"298\", \"00\", \"[2-9]\\\\d{5}\", [6], [[\"(\\\\d{6})\", \"$1\", [\"[2-9]\"]]], 0, 0, \"(10(?:01|[12]0|88))\"],\n      FR: [\"33\", \"00\", \"[1-9]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0 $1\"], [\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[1-79]\"], \"0$1\"]], \"0\"],\n      GA: [\"241\", \"00\", \"(?:[067]\\\\d|11)\\\\d{6}|[2-7]\\\\d{6}\", [7, 8], [[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-7]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"0\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"11|[67]\"], \"0$1\"]], 0, 0, \"0(11\\\\d{6}|60\\\\d{6}|61\\\\d{6}|6[256]\\\\d{6}|7[467]\\\\d{6})\", \"$1\"],\n      GB: [\"44\", \"00\", \"[1-357-9]\\\\d{9}|[18]\\\\d{8}|8\\\\d{6}\", [7, 9, 10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"800\", \"8001\", \"80011\", \"800111\", \"8001111\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"845\", \"8454\", \"84546\", \"845464\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"800\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{4,5})\", \"$1 $2\", [\"1(?:38|5[23]|69|76|94)\", \"1(?:(?:38|69)7|5(?:24|39)|768|946)\", \"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5,6})\", \"$1 $2\", [\"1(?:[2-69][02-9]|[78])\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[25]|7(?:0|6[02-9])\", \"[25]|7(?:0|6(?:[03-9]|2[356]))\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"7\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1389]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, [[\"(?:1(?:1(?:3(?:[0-58]\\\\d\\\\d|73[0235])|4(?:[0-5]\\\\d\\\\d|69[7-9]|70[01359])|(?:5[0-26-9]|[78][0-49])\\\\d\\\\d|6(?:[0-4]\\\\d\\\\d|50[0-79]))|2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)\\\\d\\\\d|1(?:[0-7]\\\\d\\\\d|8(?:[02]\\\\d|1[0-26-9])))|(?:3(?:0\\\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\\\d\\\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{3})\\\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\\\d)|76\\\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[5-7]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}\", [9, 10]], [\"7(?:457[0-57-9]|700[01]|911[028])\\\\d{5}|7(?:[1-3]\\\\d\\\\d|4(?:[0-46-9]\\\\d|5[0-689])|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[024-9]\\\\d|1[02-9]|3[0-689]))\\\\d{6}\", [10]], [\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"], [\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[2-49]))\\\\d{7}|845464\\\\d\", [7, 10]], [\"70\\\\d{8}\", [10]], 0, [\"(?:3[0347]|55)\\\\d{8}\", [10]], [\"76(?:464|652)\\\\d{5}|76(?:0[0-2]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\", [10]], [\"56\\\\d{8}\", [10]]], 0, \" x\"],\n      GD: [\"1\", \"011\", \"(?:473|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-9]\\\\d{6})$\", \"473$1\", 0, \"473\"],\n      GE: [\"995\", \"00\", \"(?:[3-57]\\\\d\\\\d|800)\\\\d{6}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"70\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"32\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[57]\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[348]\"], \"0$1\"]], \"0\"],\n      GF: [\"594\", \"00\", \"(?:[56]94|80\\\\d|976)\\\\d{6}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[569]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\"],\n      GG: [\"44\", \"00\", \"(?:1481|[357-9]\\\\d{3})\\\\d{6}|8\\\\d{6}(?:\\\\d{2})?\", [7, 9, 10], 0, \"0\", 0, \"0|([25-9]\\\\d{5})$\", \"1481$1\", 0, 0, [[\"1481[25-9]\\\\d{5}\", [10]], [\"7(?:(?:781|839)\\\\d|911[17])\\\\d{5}\", [10]], [\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"], [\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[0-3]))\\\\d{7}|845464\\\\d\", [7, 10]], [\"70\\\\d{8}\", [10]], 0, [\"(?:3[0347]|55)\\\\d{8}\", [10]], [\"76(?:464|652)\\\\d{5}|76(?:0[0-2]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\", [10]], [\"56\\\\d{8}\", [10]]]],\n      GH: [\"233\", \"00\", \"(?:[235]\\\\d{3}|800)\\\\d{5}\", [8, 9], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"8\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[235]\"], \"0$1\"]], \"0\"],\n      GI: [\"350\", \"00\", \"(?:[25]\\\\d\\\\d|606)\\\\d{5}\", [8], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"2\"]]]],\n      GL: [\"299\", \"00\", \"(?:19|[2-689]\\\\d|70)\\\\d{4}\", [6], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"19|[2-9]\"]]]],\n      GM: [\"220\", \"00\", \"[2-9]\\\\d{6}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]]]],\n      GN: [\"224\", \"00\", \"722\\\\d{6}|(?:3|6\\\\d)\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"3\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[67]\"]]]],\n      GP: [\"590\", \"00\", \"(?:590|(?:69|80)\\\\d|976)\\\\d{6}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[569]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, [[\"590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1289]|5[3-579]|6[0-289]|7[08]|8[0-689]|9\\\\d)\\\\d{4}\"], [\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"], [\"80[0-5]\\\\d{6}\"], 0, 0, 0, 0, 0, [\"976[01]\\\\d{5}\"]]],\n      GQ: [\"240\", \"00\", \"222\\\\d{6}|(?:3\\\\d|55|[89]0)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[235]\"]], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[89]\"]]]],\n      GR: [\"30\", \"00\", \"5005000\\\\d{3}|8\\\\d{9,11}|(?:[269]\\\\d|70)\\\\d{8}\", [10, 11, 12], [[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"21|7\"]], [\"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2689]\"]], [\"(\\\\d{3})(\\\\d{3,4})(\\\\d{5})\", \"$1 $2 $3\", [\"8\"]]]],\n      GT: [\"502\", \"00\", \"(?:1\\\\d{3}|[2-7])\\\\d{7}\", [8, 11], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]]]],\n      GU: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|671|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([3-9]\\\\d{6})$\", \"671$1\", 0, \"671\"],\n      GW: [\"245\", \"00\", \"[49]\\\\d{8}|4\\\\d{6}\", [7, 9], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"40\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[49]\"]]]],\n      GY: [\"592\", \"001\", \"9008\\\\d{3}|(?:[2-467]\\\\d\\\\d|862)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-46-9]\"]]]],\n      HK: [\"852\", \"00(?:30|5[09]|[126-9]?)\", \"8[0-46-9]\\\\d{6,7}|9\\\\d{4,7}|(?:[2-7]|9\\\\d{3})\\\\d{7}\", [5, 6, 7, 8, 9, 11], [[\"(\\\\d{3})(\\\\d{2,5})\", \"$1 $2\", [\"900\", \"9003\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]|8[1-4]|9(?:0[1-9]|[1-8])\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"],\n      HN: [\"504\", \"00\", \"8\\\\d{10}|[237-9]\\\\d{7}\", [8, 11], [[\"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[237-9]\"]]]],\n      HR: [\"385\", \"00\", \"(?:[24-69]\\\\d|3[0-79])\\\\d{7}|80\\\\d{5,7}|[1-79]\\\\d{7}|6\\\\d{5,6}\", [6, 7, 8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"6[01]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[67]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-5]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]], \"0\"],\n      HT: [\"509\", \"00\", \"[2-489]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-489]\"]]]],\n      HU: [\"36\", \"00\", \"[235-7]\\\\d{8}|[1-9]\\\\d{7}\", [8, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"(06 $1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]\"], \"(06 $1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-9]\"], \"06 $1\"]], \"06\"],\n      ID: [\"62\", \"00[89]\", \"(?:(?:00[1-9]|8\\\\d)\\\\d{4}|[1-36])\\\\d{6}|00\\\\d{10}|[1-9]\\\\d{8,10}|[2-9]\\\\d{7}\", [7, 8, 9, 10, 11, 12, 13], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"15\"]], [\"(\\\\d{2})(\\\\d{5,9})\", \"$1 $2\", [\"2[124]|[36]1\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{5,7})\", \"$1 $2\", [\"800\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5,8})\", \"$1 $2\", [\"[2-79]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\", \"$1-$2-$3\", [\"8[1-35-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6,8})\", \"$1 $2\", [\"1\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"804\"], \"0$1\"], [\"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"80\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1-$2-$3\", [\"8\"], \"0$1\"]], \"0\"],\n      IE: [\"353\", \"00\", \"(?:1\\\\d|[2569])\\\\d{6,8}|4\\\\d{6,9}|7\\\\d{8}|8\\\\d{8,9}\", [7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"2[24-9]|47|58|6[237-9]|9[35-9]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[45]0\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2569]|4[1-69]|7[14]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"70\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"81\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"4\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\"],\n      IL: [\"972\", \"0(?:0|1[2-9])\", \"1\\\\d{6}(?:\\\\d{3,5})?|[57]\\\\d{8}|[1-489]\\\\d{7}\", [7, 8, 9, 10, 11, 12], [[\"(\\\\d{4})(\\\\d{3})\", \"$1-$2\", [\"125\"]], [\"(\\\\d{4})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"121\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2-489]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"12\"]], [\"(\\\\d{4})(\\\\d{6})\", \"$1-$2\", [\"159\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3-$4\", [\"1[7-9]\"]], [\"(\\\\d{3})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3-$4\", [\"15\"]]], \"0\"],\n      IM: [\"44\", \"00\", \"1624\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\", [10], 0, \"0\", 0, \"0|([25-8]\\\\d{5})$\", \"1624$1\", 0, \"74576|(?:16|7[56])24\"],\n      IN: [\"91\", \"00\", \"(?:000800|[2-9]\\\\d\\\\d)\\\\d{7}|1\\\\d{7,12}\", [8, 9, 10, 11, 12, 13], [[\"(\\\\d{8})\", \"$1\", [\"5(?:0|2[23]|3[03]|[67]1|88)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"], 0, 1], [\"(\\\\d{4})(\\\\d{4,5})\", \"$1 $2\", [\"180\", \"1800\"], 0, 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"140\"], 0, 1], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\", \"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\", \"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]\", \"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]\", \"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]\"], \"0$1\", 1], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\", \"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\", \"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\\\d|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]\"], \"0$1\", 1], [\"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"[6-9]\"], \"0$1\", 1], [\"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:6|8[06])\", \"1(?:6|8[06]0)\"], 0, 1], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"18\"], 0, 1]], \"0\"],\n      IO: [\"246\", \"00\", \"3\\\\d{6}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"3\"]]]],\n      IQ: [\"964\", \"00\", \"(?:1|7\\\\d\\\\d)\\\\d{7}|[2-6]\\\\d{7,8}\", [8, 9, 10], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-6]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], \"0\"],\n      IR: [\"98\", \"00\", \"[1-9]\\\\d{9}|(?:[1-8]\\\\d\\\\d|9)\\\\d{3,4}\", [4, 5, 6, 7, 10], [[\"(\\\\d{4,5})\", \"$1\", [\"96\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4,5})\", \"$1 $2\", [\"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-8]\"], \"0$1\"]], \"0\"],\n      IS: [\"354\", \"00|1(?:0(?:01|[12]0)|100)\", \"(?:38\\\\d|[4-9])\\\\d{6}\", [7, 9], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[4-9]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"3\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"],\n      IT: [\"39\", \"00\", \"0\\\\d{5,10}|1\\\\d{8,10}|3(?:[0-8]\\\\d{7,10}|9\\\\d{7,8})|(?:55|70)\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?\", [6, 7, 8, 9, 10, 11], [[\"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"0[26]\"]], [\"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"0[13-57-9][0159]|8(?:03|4[17]|9[2-5])\", \"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))\"]], [\"(\\\\d{4})(\\\\d{2,6})\", \"$1 $2\", [\"0(?:[13-579][2-46-8]|8[236-8])\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"894\"]], [\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[26]|5\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1(?:44|[679])|[378]\"]], [\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[13-57-9][0159]|14\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{5})\", \"$1 $2 $3\", [\"0[26]\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"3\"]]], 0, 0, 0, 0, 0, 0, [[\"0669[0-79]\\\\d{1,6}|0(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\\\d\\\\d|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\\\d|6[0-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7}\"], [\"3[1-9]\\\\d{8}|3[2-9]\\\\d{7}\", [9, 10]], [\"80(?:0\\\\d{3}|3)\\\\d{3}\", [6, 9]], [\"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\", [6, 8, 9, 10]], [\"1(?:78\\\\d|99)\\\\d{6}\", [9, 10]], 0, 0, 0, [\"55\\\\d{8}\", [10]], [\"84(?:[08]\\\\d{3}|[17])\\\\d{3}\", [6, 9]]]],\n      JE: [\"44\", \"00\", \"1534\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\", [10], 0, \"0\", 0, \"0|([0-24-8]\\\\d{5})$\", \"1534$1\", 0, 0, [[\"1534[0-24-8]\\\\d{5}\"], [\"7(?:(?:(?:50|82)9|937)\\\\d|7(?:00[378]|97[7-9]))\\\\d{5}\"], [\"80(?:07(?:35|81)|8901)\\\\d{4}\"], [\"(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\"], [\"701511\\\\d{4}\"], 0, [\"(?:3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\\\d{4})\\\\d{4}\"], [\"76(?:464|652)\\\\d{5}|76(?:0[0-2]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\"], [\"56\\\\d{8}\"]]],\n      JM: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|658|900)\\\\d{7}\", [10], 0, \"1\", 0, 0, 0, 0, \"658|876\"],\n      JO: [\"962\", \"00\", \"(?:(?:[2689]|7\\\\d)\\\\d|32|53)\\\\d{6}\", [8, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2356]|87\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"70\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], \"0\"],\n      JP: [\"81\", \"010\", \"00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\", [8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"(?:12|57|99)0\"], \"0$1\"], [\"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:80|9[16])\", \"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9]|636)|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\", \"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9]|636[457-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"60\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[36]|4(?:2[09]|7[01])\", \"[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[27-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9])|5(?:2|3[045]|4[0-369]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|49|51|6(?:[0-24]|36|5[0-3589]|72|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:49|55|83)[29]|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|7[015-9]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17|3[015-9]))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9(?:[019]|4[1-3]|6(?:[0-47-9]|5[01346-9])))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|829(?:2|66)|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"[14]|[289][2-9]|5[3-9]|7[2-4679]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"800\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[257-9]\"], \"0$1\"]], \"0\"],\n      KE: [\"254\", \"000\", \"(?:[17]\\\\d\\\\d|900)\\\\d{6}|(?:2|80)0\\\\d{6,7}|[4-6]\\\\d{6,8}\", [7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{5,7})\", \"$1 $2\", [\"[24-6]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[17]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]], \"0\"],\n      KG: [\"996\", \"00\", \"8\\\\d{9}|(?:[235-8]\\\\d|99)\\\\d{7}\", [9, 10], [[\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"3(?:1[346]|[24-79])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[235-79]|88\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{2,3})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\"],\n      KH: [\"855\", \"00[14-9]\", \"1\\\\d{9}|[1-9]\\\\d{7,8}\", [8, 9, 10], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-9]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]], \"0\"],\n      KI: [\"686\", \"00\", \"(?:[37]\\\\d|6[0-79])\\\\d{6}|(?:[2-48]\\\\d|50)\\\\d{3}\", [5, 8], 0, \"0\"],\n      KM: [\"269\", \"00\", \"[3478]\\\\d{6}\", [7], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[3478]\"]]]],\n      KN: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-7]\\\\d{6})$\", \"869$1\", 0, \"869\"],\n      KP: [\"850\", \"00|99\", \"85\\\\d{6}|(?:19\\\\d|[2-7])\\\\d{7}\", [8, 10], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-7]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"]], \"0\"],\n      KR: [\"82\", \"00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))\", \"00[1-9]\\\\d{8,11}|(?:[12]|5\\\\d{3})\\\\d{7}|[13-6]\\\\d{9}|(?:[1-6]\\\\d|80)\\\\d{7}|[3-6]\\\\d{4,5}|(?:00|7)0\\\\d{8}\", [5, 6, 8, 9, 10, 11, 12, 13, 14], [[\"(\\\\d{2})(\\\\d{3,4})\", \"$1-$2\", [\"(?:3[1-3]|[46][1-4]|5[1-5])1\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"1\"]], [\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"60|8\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"[1346]|5[1-5]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1-$2-$3\", [\"5\"], \"0$1\"]], \"0\", 0, \"0(8(?:[1-46-8]|5\\\\d\\\\d))?\"],\n      KW: [\"965\", \"00\", \"18\\\\d{5}|(?:[2569]\\\\d|41)\\\\d{6}\", [7, 8], [[\"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"[169]|2(?:[235]|4[1-35-9])|52\"]], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[245]\"]]]],\n      KY: [\"1\", \"011\", \"(?:345|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-9]\\\\d{6})$\", \"345$1\", 0, \"345\"],\n      KZ: [\"7\", \"810\", \"(?:33622|8\\\\d{8})\\\\d{5}|[78]\\\\d{9}\", [10, 14], 0, \"8\", 0, 0, 0, 0, \"33|7\", 0, \"8~10\"],\n      LA: [\"856\", \"00\", \"[23]\\\\d{9}|3\\\\d{8}|(?:[235-8]\\\\d|41)\\\\d{6}\", [8, 9, 10], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2[13]|3[14]|[4-8]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"30[013-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[23]\"], \"0$1\"]], \"0\"],\n      LB: [\"961\", \"00\", \"[27-9]\\\\d{7}|[13-9]\\\\d{6}\", [7, 8], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[27-9]\"]]], \"0\"],\n      LC: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|758|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-8]\\\\d{6})$\", \"758$1\", 0, \"758\"],\n      LI: [\"423\", \"00\", \"[68]\\\\d{8}|(?:[2378]\\\\d|90)\\\\d{5}\", [7, 9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[2379]|8(?:0[09]|7)\", \"[2379]|8(?:0(?:02|9)|7)\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"69\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"]]], \"0\", 0, \"0|(1001)\"],\n      LK: [\"94\", \"00\", \"[1-9]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[1-689]\"], \"0$1\"]], \"0\"],\n      LR: [\"231\", \"00\", \"(?:2|33|5\\\\d|77|88)\\\\d{7}|[4-6]\\\\d{6}\", [7, 8, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[4-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3578]\"], \"0$1\"]], \"0\"],\n      LS: [\"266\", \"00\", \"(?:[256]\\\\d\\\\d|800)\\\\d{5}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2568]\"]]]],\n      LT: [\"370\", \"00\", \"(?:[3469]\\\\d|52|[78]0)\\\\d{6}\", [8], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"52[0-7]\"], \"(8-$1)\", 1], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"], \"8 $1\", 1], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"37|4(?:[15]|6[1-8])\"], \"(8-$1)\", 1], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[3-6]\"], \"(8-$1)\", 1]], \"8\", 0, \"[08]\"],\n      LU: [\"352\", \"00\", \"35[013-9]\\\\d{4,8}|6\\\\d{8}|35\\\\d{2,4}|(?:[2457-9]\\\\d|3[0-46-9])\\\\d{2,9}\", [4, 5, 6, 7, 8, 9, 10, 11], [[\"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"20[2-689]\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\", \"$1 $2 $3 $4\", [\"2(?:[0367]|4[3-8])\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"80[01]|90[015]\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"20\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\", \"$1 $2 $3 $4 $5\", [\"2(?:[0367]|4[3-8])\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,5})\", \"$1 $2 $3 $4\", [\"[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]\"]]], 0, 0, \"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\\\d)\"],\n      LV: [\"371\", \"00\", \"(?:[268]\\\\d|90)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[269]|8[01]\"]]]],\n      LY: [\"218\", \"00\", \"[2-9]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{7})\", \"$1-$2\", [\"[2-9]\"], \"0$1\"]], \"0\"],\n      MA: [\"212\", \"00\", \"[5-8]\\\\d{8}\", [9], [[\"(\\\\d{5})(\\\\d{4})\", \"$1-$2\", [\"5(?:29|38)\", \"5(?:29[89]|389)\", \"5(?:29[89]|389)0\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5[45]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5})\", \"$1-$2\", [\"5(?:2[2-489]|3[5-9]|9)|892\", \"5(?:2(?:[2-49]|8[235-9])|3[5-9]|9)|892\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1-$2\", [\"8\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6})\", \"$1-$2\", [\"[5-7]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, [[\"5(?:29(?:[189][05]|2[29]|3[01])|389[05])\\\\d{4}|5(?:2(?:[0-25-7]\\\\d|3[1-578]|4[02-46-8]|8[0235-7]|90)|3(?:[0-47]\\\\d|5[02-9]|6[02-8]|8[08]|9[3-9])|(?:4[067]|5[03])\\\\d)\\\\d{5}\"], [\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[017]\\\\d|2[0-2]|6[0-8]))\\\\d{6}\"], [\"80\\\\d{7}\"], [\"89\\\\d{7}\"], 0, 0, 0, 0, [\"592(?:4[0-2]|93)\\\\d{4}\"]]],\n      MC: [\"377\", \"00\", \"(?:[3489]|6\\\\d)\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"4\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[389]\"]], [\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"6\"], \"0$1\"]], \"0\"],\n      MD: [\"373\", \"00\", \"(?:[235-7]\\\\d|[89]0)\\\\d{6}\", [8], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"22|3\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[25-7]\"], \"0$1\"]], \"0\"],\n      ME: [\"382\", \"00\", \"(?:20|[3-79]\\\\d)\\\\d{6}|80\\\\d{6,7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-9]\"], \"0$1\"]], \"0\"],\n      MF: [\"590\", \"00\", \"(?:590|(?:69|80)\\\\d|976)\\\\d{6}\", [9], 0, \"0\", 0, 0, 0, 0, 0, [[\"590(?:0[079]|[14]3|[27][79]|30|5[0-268]|87)\\\\d{4}\"], [\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"], [\"80[0-5]\\\\d{6}\"], 0, 0, 0, 0, 0, [\"976[01]\\\\d{5}\"]]],\n      MG: [\"261\", \"00\", \"[23]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[23]\"], \"0$1\"]], \"0\", 0, \"0|([24-9]\\\\d{6})$\", \"20$1\"],\n      MH: [\"692\", \"011\", \"329\\\\d{4}|(?:[256]\\\\d|45)\\\\d{5}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-6]\"]]], \"1\"],\n      MK: [\"389\", \"00\", \"[2-578]\\\\d{7}\", [8], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2|34[47]|4(?:[37]7|5[47]|64)\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[347]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[58]\"], \"0$1\"]], \"0\"],\n      ML: [\"223\", \"00\", \"[24-9]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24-9]\"]]]],\n      MM: [\"95\", \"00\", \"1\\\\d{5,7}|95\\\\d{6}|(?:[4-7]|9[0-46-9])\\\\d{6,8}|(?:2|8\\\\d)\\\\d{5,8}\", [6, 7, 8, 9, 10], [[\"(\\\\d)(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"16|2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[12]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[4-7]|8[1-35]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{4,6})\", \"$1 $2 $3\", [\"9(?:2[0-4]|[35-9]|4[137-9])\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"92\"], \"0$1\"], [\"(\\\\d)(\\\\d{5})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], \"0\"],\n      MN: [\"976\", \"001\", \"[12]\\\\d{7,9}|[5-9]\\\\d{7}\", [8, 9, 10], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[12]1\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[5-9]\"]], [\"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[12]2[1-3]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5,6})\", \"$1 $2\", [\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])\", \"[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{4,5})\", \"$1 $2\", [\"[12]\"], \"0$1\"]], \"0\"],\n      MO: [\"853\", \"00\", \"0800\\\\d{3}|(?:28|[68]\\\\d)\\\\d{6}\", [7, 8], [[\"(\\\\d{4})(\\\\d{3})\", \"$1 $2\", [\"0\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[268]\"]]]],\n      MP: [\"1\", \"011\", \"[58]\\\\d{9}|(?:67|90)0\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-9]\\\\d{6})$\", \"670$1\", 0, \"670\"],\n      MQ: [\"596\", \"00\", \"(?:69|80)\\\\d{7}|(?:59|97)6\\\\d{6}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[569]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\"],\n      MR: [\"222\", \"00\", \"(?:[2-4]\\\\d\\\\d|800)\\\\d{5}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-48]\"]]]],\n      MS: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|664|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([34]\\\\d{6})$\", \"664$1\", 0, \"664\"],\n      MT: [\"356\", \"00\", \"3550\\\\d{4}|(?:[2579]\\\\d\\\\d|800)\\\\d{5}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2357-9]\"]]]],\n      MU: [\"230\", \"0(?:0|[24-7]0|3[03])\", \"(?:5|8\\\\d\\\\d)\\\\d{7}|[2-468]\\\\d{6}\", [7, 8, 10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-46]|8[013]\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"5\"]], [\"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"8\"]]], 0, 0, 0, 0, 0, 0, 0, \"020\"],\n      MV: [\"960\", \"0(?:0|19)\", \"(?:800|9[0-57-9]\\\\d)\\\\d{7}|[34679]\\\\d{6}\", [7, 10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[3467]|9[13-9]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"],\n      MW: [\"265\", \"00\", \"(?:[129]\\\\d|31|77|88)\\\\d{7}|1\\\\d{6}\", [7, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[2-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[137-9]\"], \"0$1\"]], \"0\"],\n      MX: [\"52\", \"0[09]\", \"1(?:(?:44|99)[1-9]|65[0-689])\\\\d{7}|(?:1(?:[017]\\\\d|[235][1-9]|4[0-35-9]|6[0-46-9]|8[1-79]|9[1-8])|[2-9]\\\\d)\\\\d{8}\", [10, 11], [[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"33|5[56]|81\"], 0, 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-9]\"], 0, 1], [\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$2 $3 $4\", [\"1(?:33|5[56]|81)\"], 0, 1], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$2 $3 $4\", [\"1\"], 0, 1]], \"01\", 0, \"0(?:[12]|4[45])|1\", 0, 0, 0, 0, \"00\"],\n      MY: [\"60\", \"00\", \"1\\\\d{8,9}|(?:3\\\\d|[4-9])\\\\d{7}\", [8, 9, 10], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"[4-79]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1-$2 $3\", [\"1(?:[02469]|[378][1-9]|53)|8\", \"1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2 $3\", [\"3\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3-$4\", [\"1(?:[367]|80)\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"15\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2 $3\", [\"1\"], \"0$1\"]], \"0\"],\n      MZ: [\"258\", \"00\", \"(?:2|8\\\\d)\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2|8[2-79]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]]]],\n      NA: [\"264\", \"00\", \"[68]\\\\d{7,8}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"88\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"6\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"87\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]], \"0\"],\n      NC: [\"687\", \"00\", \"(?:050|[2-57-9]\\\\d\\\\d)\\\\d{3}\", [6], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1.$2.$3\", [\"[02-57-9]\"]]]],\n      NE: [\"227\", \"00\", \"[027-9]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"08\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[089]|2[013]|7[04]\"]]]],\n      NF: [\"672\", \"00\", \"[13]\\\\d{5}\", [6], [[\"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"1[0-3]\"]], [\"(\\\\d)(\\\\d{5})\", \"$1 $2\", [\"[13]\"]]], 0, 0, \"([0-258]\\\\d{4})$\", \"3$1\"],\n      NG: [\"234\", \"009\", \"(?:[124-7]|9\\\\d{3})\\\\d{6}|[1-9]\\\\d{7}|[78]\\\\d{9,13}\", [7, 8, 10, 11, 12, 13, 14], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"78\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[12]|9(?:0[3-9]|[1-9])\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-7]|8[2-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[7-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5})(\\\\d{5,6})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"]], \"0\"],\n      NI: [\"505\", \"00\", \"(?:1800|[25-8]\\\\d{3})\\\\d{4}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[125-8]\"]]]],\n      NL: [\"31\", \"00\", \"(?:[124-7]\\\\d\\\\d|3(?:[02-9]\\\\d|1[0-8]))\\\\d{6}|8\\\\d{6,9}|9\\\\d{6,10}|1\\\\d{4,5}\", [5, 6, 7, 8, 9, 10, 11], [[\"(\\\\d{3})(\\\\d{4,7})\", \"$1 $2\", [\"[89]0\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"66\"], \"0$1\"], [\"(\\\\d)(\\\\d{8})\", \"$1 $2\", [\"6\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-578]|91\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], \"0\"],\n      NO: [\"47\", \"00\", \"(?:0|[2-9]\\\\d{3})\\\\d{4}\", [5, 8], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[489]|59\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[235-7]\"]]], 0, 0, 0, 0, 0, \"[02-689]|7[0-8]\"],\n      NP: [\"977\", \"00\", \"(?:1\\\\d|9)\\\\d{9}|[1-9]\\\\d{7}\", [8, 10, 11], [[\"(\\\\d)(\\\\d{7})\", \"$1-$2\", [\"1[2-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1-$2\", [\"1[01]|[2-8]|9(?:[1-59]|[67][2-6])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{7})\", \"$1-$2\", [\"9\"]]], \"0\"],\n      NR: [\"674\", \"00\", \"(?:444|(?:55|8\\\\d)\\\\d|666)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[4-68]\"]]]],\n      NU: [\"683\", \"00\", \"(?:[47]|888\\\\d)\\\\d{3}\", [4, 7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"8\"]]]],\n      NZ: [\"64\", \"0(?:0|161)\", \"[29]\\\\d{7,9}|50\\\\d{5}(?:\\\\d{2,3})?|6[0-35-9]\\\\d{6}|7\\\\d{7,8}|8\\\\d{4,9}|(?:11\\\\d|[34])\\\\d{7}\", [5, 6, 7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{3,8})\", \"$1 $2\", [\"8[1-579]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"50[036-8]|[89]0\", \"50(?:[0367]|88)|[89]0\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"24|[346]|7[2-57-9]|9[2-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2(?:10|74)|[59]|80\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1|2[028]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\", \"$1 $2 $3\", [\"2(?:[169]|7[0-35-9])|7|86\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, 0, \"00\"],\n      OM: [\"968\", \"00\", \"(?:1505|[279]\\\\d{3}|500)\\\\d{4}|800\\\\d{5,6}\", [7, 8, 9], [[\"(\\\\d{3})(\\\\d{4,6})\", \"$1 $2\", [\"[58]\"]], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"2\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[179]\"]]]],\n      PA: [\"507\", \"00\", \"(?:00800|8\\\\d{3})\\\\d{6}|[68]\\\\d{7}|[1-57-9]\\\\d{6}\", [7, 8, 10, 11], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[1-57-9]\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[68]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]]],\n      PE: [\"51\", \"00|19(?:1[124]|77|90)00\", \"(?:[14-8]|9\\\\d)\\\\d{7}\", [8, 9], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"80\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"1\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[4-8]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"]]], \"0\", 0, 0, 0, 0, 0, 0, \"00\", \" Anexo \"],\n      PF: [\"689\", \"00\", \"4\\\\d{5}(?:\\\\d{2})?|8\\\\d{7,8}\", [6, 8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"44\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"4|8[7-9]\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]]]],\n      PG: [\"675\", \"00|140[1-3]\", \"(?:180|[78]\\\\d{3})\\\\d{4}|(?:[2-589]\\\\d|64)\\\\d{5}\", [7, 8], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"18|[2-69]|85\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[78]\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"],\n      PH: [\"63\", \"00\", \"(?:[2-7]|9\\\\d)\\\\d{8}|2\\\\d{5}|(?:1800|8)\\\\d{7,9}\", [6, 8, 9, 10, 11, 12, 13], [[\"(\\\\d)(\\\\d{5})\", \"$1 $2\", [\"2\"], \"(0$1)\"], [\"(\\\\d{4})(\\\\d{4,6})\", \"$1 $2\", [\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2\", \"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"], \"(0$1)\"], [\"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"346|4(?:27|9[35])|883\", \"3469|4(?:279|9(?:30|56))|8834\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-7]|8[2-8]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [\"(\\\\d{4})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"1\"]]], \"0\"],\n      PK: [\"92\", \"00\", \"122\\\\d{6}|[24-8]\\\\d{10,11}|9(?:[013-9]\\\\d{8,10}|2(?:[01]\\\\d\\\\d|2(?:[06-8]\\\\d|1[01]))\\\\d{7})|(?:[2-8]\\\\d{3}|92(?:[0-7]\\\\d|8[1-9]))\\\\d{6}|[24-9]\\\\d{8}|[89]\\\\d{7}\", [8, 9, 10, 11, 12], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,7})\", \"$1 $2 $3\", [\"[89]0\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"1\"]], [\"(\\\\d{3})(\\\\d{6,7})\", \"$1 $2\", [\"2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])\", \"9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{7,8})\", \"$1 $2\", [\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"], \"(0$1)\"], [\"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"58\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[24-9]\"], \"(0$1)\"]], \"0\"],\n      PL: [\"48\", \"00\", \"6\\\\d{5}(?:\\\\d{2})?|8\\\\d{9}|[1-9]\\\\d{6}(?:\\\\d{2})?\", [6, 7, 8, 9, 10], [[\"(\\\\d{5})\", \"$1\", [\"19\"]], [\"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"11|64\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1\", \"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"64\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[2-8]|[2-7]|8[1-79]|9[145]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"8\"]]]],\n      PM: [\"508\", \"00\", \"(?:[45]|80\\\\d\\\\d)\\\\d{5}\", [6, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[45]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\"],\n      PR: [\"1\", \"011\", \"(?:[589]\\\\d\\\\d|787)\\\\d{7}\", [10], 0, \"1\", 0, 0, 0, 0, \"787|939\"],\n      PS: [\"970\", \"00\", \"[2489]2\\\\d{6}|(?:1\\\\d|5)\\\\d{8}\", [8, 9, 10], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2489]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]], \"0\"],\n      PT: [\"351\", \"00\", \"1693\\\\d{5}|(?:[26-9]\\\\d|30)\\\\d{7}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2[12]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"16|[236-9]\"]]]],\n      PW: [\"680\", \"01[12]\", \"(?:[24-8]\\\\d\\\\d|345|900)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]]]],\n      PY: [\"595\", \"00\", \"59\\\\d{4,6}|9\\\\d{5,10}|(?:[2-46-8]\\\\d|5[0-8])\\\\d{4,7}\", [6, 7, 8, 9, 10, 11], [[\"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"[2-9]0\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{4,5})\", \"$1 $2\", [\"2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"87\"]], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"9(?:[5-79]|8[1-6])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-8]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"]]], \"0\"],\n      QA: [\"974\", \"00\", \"[2-7]\\\\d{7}|800\\\\d{4}(?:\\\\d{2})?|2\\\\d{6}\", [7, 8, 9], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"2[126]|8\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]\"]]]],\n      RE: [\"262\", \"00\", \"976\\\\d{6}|(?:26|[68]\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2689]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, \"26[23]|69|[89]\"],\n      RO: [\"40\", \"00\", \"(?:[2378]\\\\d|90)\\\\d{7}|[23]\\\\d{5}\", [6, 9], [[\"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"2[3-6]\", \"2[3-6]\\\\d9\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"219|31\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[23]1\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[237-9]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, 0, 0, \" int \"],\n      RS: [\"381\", \"00\", \"38[02-9]\\\\d{6,9}|6\\\\d{7,9}|90\\\\d{4,8}|38\\\\d{5,6}|(?:7\\\\d\\\\d|800)\\\\d{3,9}|(?:[12]\\\\d|3[0-79])\\\\d{5,10}\", [6, 7, 8, 9, 10, 11, 12], [[\"(\\\\d{3})(\\\\d{3,9})\", \"$1 $2\", [\"(?:2[389]|39)0|[7-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{5,10})\", \"$1 $2\", [\"[1-36]\"], \"0$1\"]], \"0\"],\n      RU: [\"7\", \"810\", \"8\\\\d{13}|[347-9]\\\\d{9}\", [10, 14], [[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"7(?:1[0-8]|2[1-9])\", \"7(?:1(?:[0-6]2|7|8[27])|2(?:1[23]|[2-9]2))\", \"7(?:1(?:[0-6]2|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2\"], \"8 ($1)\", 1], [\"(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"7(?:1[0-68]|2[1-9])\", \"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))\", \"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]\"], \"8 ($1)\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"8 ($1)\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[349]|8(?:[02-7]|1[1-8])\"], \"8 ($1)\", 1], [\"(\\\\d{4})(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"8\"], \"8 ($1)\"]], \"8\", 0, 0, 0, 0, \"3[04-689]|[489]\", 0, \"8~10\"],\n      RW: [\"250\", \"00\", \"(?:06|[27]\\\\d\\\\d|[89]00)\\\\d{6}\", [8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"0\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"]]], \"0\"],\n      SA: [\"966\", \"00\", \"92\\\\d{7}|(?:[15]|8\\\\d)\\\\d{8}\", [9, 10], [[\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"9\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"81\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]], \"0\"],\n      SB: [\"677\", \"0[01]\", \"(?:[1-6]|[7-9]\\\\d\\\\d)\\\\d{4}\", [5, 7], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"7|8[4-9]|9(?:[1-8]|9[0-8])\"]]]],\n      SC: [\"248\", \"010|0[0-2]\", \"800\\\\d{4}|(?:[249]\\\\d|64)\\\\d{5}\", [7], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[246]|9[57]\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"],\n      SD: [\"249\", \"00\", \"[19]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[19]\"], \"0$1\"]], \"0\"],\n      SE: [\"46\", \"00\", \"(?:[26]\\\\d\\\\d|9)\\\\d{9}|[1-9]\\\\d{8}|[1-689]\\\\d{7}|[1-4689]\\\\d{6}|2\\\\d{5}\", [6, 7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3\", [\"20\"], \"0$1\", 0, \"$1 $2 $3\"], [\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"9(?:00|39|44|9)\"], \"0$1\", 0, \"$1 $2\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})\", \"$1-$2 $3\", [\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"], \"0$1\", 0, \"$1 $2 $3\"], [\"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"8\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3\", [\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"], \"0$1\", 0, \"$1 $2 $3\"], [\"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\", \"$1-$2 $3\", [\"9(?:00|39|44)\"], \"0$1\", 0, \"$1 $2 $3\"], [\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"10|7\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"8\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1-$2 $3 $4\", [\"9\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4 $5\", [\"[26]\"], \"0$1\", 0, \"$1 $2 $3 $4 $5\"]], \"0\"],\n      SG: [\"65\", \"0[0-3]\\\\d\", \"(?:(?:1\\\\d|8)\\\\d\\\\d|7000)\\\\d{7}|[3689]\\\\d{7}\", [8, 10, 11], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[369]|8(?:0[1-5]|[1-9])\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]], [\"(\\\\d{4})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]]]],\n      SH: [\"290\", \"00\", \"(?:[256]\\\\d|8)\\\\d{3}\", [4, 5], 0, 0, 0, 0, 0, 0, \"[256]\"],\n      SI: [\"386\", \"00|10(?:22|66|88|99)\", \"[1-7]\\\\d{7}|8\\\\d{4,7}|90\\\\d{4,6}\", [5, 6, 7, 8], [[\"(\\\\d{2})(\\\\d{3,6})\", \"$1 $2\", [\"8[09]|9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"59|8\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[37][01]|4[0139]|51|6\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[1-57]\"], \"(0$1)\"]], \"0\", 0, 0, 0, 0, 0, 0, \"00\"],\n      SJ: [\"47\", \"00\", \"0\\\\d{4}|(?:[489]\\\\d|[57]9)\\\\d{6}\", [5, 8], 0, 0, 0, 0, 0, 0, \"79\"],\n      SK: [\"421\", \"00\", \"[2-689]\\\\d{8}|[2-59]\\\\d{6}|[2-5]\\\\d{5}\", [6, 7, 9], [[\"(\\\\d)(\\\\d{2})(\\\\d{3,4})\", \"$1 $2 $3\", [\"21\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-5][1-8]1\", \"[3-5][1-8]1[67]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"2\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[689]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"[3-5]\"], \"0$1\"]], \"0\"],\n      SL: [\"232\", \"00\", \"(?:[237-9]\\\\d|66)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[236-9]\"], \"(0$1)\"]], \"0\"],\n      SM: [\"378\", \"00\", \"(?:0549|[5-7]\\\\d)\\\\d{6}\", [8, 10], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-7]\"]], [\"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"0\"]]], 0, 0, \"([89]\\\\d{5})$\", \"0549$1\"],\n      SN: [\"221\", \"00\", \"(?:[378]\\\\d|93)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[379]\"]]]],\n      SO: [\"252\", \"00\", \"[346-9]\\\\d{8}|[12679]\\\\d{7}|[1-5]\\\\d{6}|[1348]\\\\d{5}\", [6, 7, 8, 9], [[\"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"8[125]\"]], [\"(\\\\d{6})\", \"$1\", [\"[134]\"]], [\"(\\\\d)(\\\\d{6})\", \"$1 $2\", [\"[15]|2[0-79]|3[0-46-8]|4[0-7]\"]], [\"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"24|[67]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[3478]|64|90\"]], [\"(\\\\d{2})(\\\\d{5,7})\", \"$1 $2\", [\"1|28|6(?:0[5-7]|[1-35-9])|9[2-9]\"]]], \"0\"],\n      SR: [\"597\", \"00\", \"(?:[2-5]|68|[78]\\\\d)\\\\d{5}\", [6, 7], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"56\"]], [\"(\\\\d{3})(\\\\d{3})\", \"$1-$2\", [\"[2-5]\"]], [\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[6-8]\"]]]],\n      SS: [\"211\", \"00\", \"[19]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[19]\"], \"0$1\"]], \"0\"],\n      ST: [\"239\", \"00\", \"(?:22|9\\\\d)\\\\d{5}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[29]\"]]]],\n      SV: [\"503\", \"00\", \"[267]\\\\d{7}|[89]00\\\\d{4}(?:\\\\d{4})?\", [7, 8, 11], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[89]\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[267]\"]], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"]]]],\n      SX: [\"1\", \"011\", \"7215\\\\d{6}|(?:[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|(5\\\\d{6})$\", \"721$1\", 0, \"721\"],\n      SY: [\"963\", \"00\", \"[1-39]\\\\d{8}|[1-5]\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-5]\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\", 1]], \"0\"],\n      SZ: [\"268\", \"00\", \"0800\\\\d{4}|(?:[237]\\\\d|900)\\\\d{6}\", [8, 9], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[0237]\"]], [\"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"9\"]]]],\n      TA: [\"290\", \"00\", \"8\\\\d{3}\", [4], 0, 0, 0, 0, 0, 0, \"8\"],\n      TC: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|649|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-479]\\\\d{6})$\", \"649$1\", 0, \"649\"],\n      TD: [\"235\", \"00|16\", \"(?:22|[69]\\\\d|77)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2679]\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"],\n      TG: [\"228\", \"00\", \"[279]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[279]\"]]]],\n      TH: [\"66\", \"00[1-9]\", \"(?:001800|[2-57]|[689]\\\\d)\\\\d{7}|1\\\\d{7,9}\", [8, 9, 10, 13], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[13-9]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]], \"0\"],\n      TJ: [\"992\", \"810\", \"(?:00|[1-57-9]\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{6})(\\\\d)(\\\\d{2})\", \"$1 $2 $3\", [\"331\", \"3317\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[34]7|91[78]\"]], [\"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1 $2 $3\", [\"3[1-5]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[0-57-9]\"]]], 0, 0, 0, 0, 0, 0, 0, \"8~10\"],\n      TK: [\"690\", \"00\", \"[2-47]\\\\d{3,6}\", [4, 5, 6, 7]],\n      TL: [\"670\", \"00\", \"7\\\\d{7}|(?:[2-47]\\\\d|[89]0)\\\\d{5}\", [7, 8], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-489]|70\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"7\"]]]],\n      TM: [\"993\", \"810\", \"[1-6]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"12\"], \"(8 $1)\"], [\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[1-5]\"], \"(8 $1)\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"6\"], \"8 $1\"]], \"8\", 0, 0, 0, 0, 0, 0, \"8~10\"],\n      TN: [\"216\", \"00\", \"[2-57-9]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-57-9]\"]]]],\n      TO: [\"676\", \"00\", \"(?:0800|(?:[5-8]\\\\d\\\\d|999)\\\\d)\\\\d{3}|[2-8]\\\\d{4}\", [5, 7], [[\"(\\\\d{2})(\\\\d{3})\", \"$1-$2\", [\"[2-4]|50|6[09]|7[0-24-69]|8[05]\"]], [\"(\\\\d{4})(\\\\d{3})\", \"$1 $2\", [\"0\"]], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[5-9]\"]]]],\n      TR: [\"90\", \"00\", \"4\\\\d{6}|8\\\\d{11,12}|(?:[2-58]\\\\d\\\\d|900)\\\\d{7}\", [7, 10, 12, 13], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"512|8[01589]|90\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5(?:[0-59]|61)\", \"5(?:[0-59]|616)\", \"5(?:[0-59]|6161)\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24][1-8]|3[1-9]\"], \"(0$1)\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{6,7})\", \"$1 $2 $3\", [\"80\"], \"0$1\", 1]], \"0\"],\n      TT: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-46-8]\\\\d{6})$\", \"868$1\", 0, \"868\"],\n      TV: [\"688\", \"00\", \"(?:2|7\\\\d\\\\d|90)\\\\d{4}\", [5, 6, 7], [[\"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"2\"]], [\"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"90\"]], [\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"7\"]]]],\n      TW: [\"886\", \"0(?:0[25-79]|19)\", \"[2-689]\\\\d{8}|7\\\\d{9,10}|[2-8]\\\\d{7}|2\\\\d{6}\", [7, 8, 9, 10, 11], [[\"(\\\\d{2})(\\\\d)(\\\\d{4})\", \"$1 $2 $3\", [\"202\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[258]0\"], \"0$1\"], [\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]\", \"[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[49]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, 0, 0, \"#\"],\n      TZ: [\"255\", \"00[056]\", \"(?:[26-8]\\\\d|41|90)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[24]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[67]\"], \"0$1\"]], \"0\"],\n      UA: [\"380\", \"00\", \"[89]\\\\d{9}|[3-9]\\\\d{8}\", [9, 10], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]\", \"6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])\", \"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-7]|89|9[1-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, 0, \"0~0\"],\n      UG: [\"256\", \"00[057]\", \"800\\\\d{6}|(?:[29]0|[347]\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"202\", \"2024\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[27-9]|4(?:6[45]|[7-9])\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"[34]\"], \"0$1\"]], \"0\"],\n      US: [\"1\", \"011\", \"[2-9]\\\\d{9}|3\\\\d{6}\", [10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"310\"], 0, 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"($1) $2-$3\", [\"[2-9]\"], 0, 1, \"$1-$2-$3\"]], \"1\", 0, 0, 0, 0, 0, [[\"5(?:05(?:[2-57-9]\\\\d\\\\d|6(?:[0-35-9]\\\\d|44))|82(?:2(?:0[0-3]|[268]2)|3(?:0[02]|22|33)|4(?:00|4[24]|65|82)|5(?:00|29|58|83)|6(?:00|66|82)|7(?:58|77)|8(?:00|42|5[25]|88)|9(?:00|9[89])))\\\\d{4}|(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[01356]|3[0-24679]|4[167]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[0-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-289]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\"], [\"\"], [\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"], [\"900[2-9]\\\\d{6}\"], [\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\n      UY: [\"598\", \"0(?:0|1[3-9]\\\\d)\", \"4\\\\d{9}|[1249]\\\\d{7}|(?:[49]\\\\d|80)\\\\d{5}\", [7, 8, 10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"405|8|90\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[124]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"4\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, 0, \"00\", \" int. \"],\n      UZ: [\"998\", \"810\", \"(?:33|55|[679]\\\\d|88)\\\\d{7}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[35-9]\"], \"8 $1\"]], \"8\", 0, 0, 0, 0, 0, 0, \"8~10\"],\n      VA: [\"39\", \"00\", \"0\\\\d{5,10}|3[0-8]\\\\d{7,10}|55\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?|(?:1\\\\d|39)\\\\d{7,8}\", [6, 7, 8, 9, 10, 11], 0, 0, 0, 0, 0, 0, \"06698\"],\n      VC: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|784|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-7]\\\\d{6})$\", \"784$1\", 0, \"784\"],\n      VE: [\"58\", \"00\", \"[68]00\\\\d{7}|(?:[24]\\\\d|[59]0)\\\\d{8}\", [10], [[\"(\\\\d{3})(\\\\d{7})\", \"$1-$2\", [\"[24-689]\"], \"0$1\"]], \"0\"],\n      VG: [\"1\", \"011\", \"(?:284|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-578]\\\\d{6})$\", \"284$1\", 0, \"284\"],\n      VI: [\"1\", \"011\", \"[58]\\\\d{9}|(?:34|90)0\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-9]\\\\d{6})$\", \"340$1\", 0, \"340\"],\n      VN: [\"84\", \"00\", \"[12]\\\\d{9}|[135-9]\\\\d{8}|[16]\\\\d{7}|[16-8]\\\\d{6}\", [7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"80\"], \"0$1\", 1], [\"(\\\\d{4})(\\\\d{4,6})\", \"$1 $2\", [\"1\"], 0, 1], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[69]\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[3578]\"], \"0$1\", 1], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[48]\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\", 1]], \"0\"],\n      VU: [\"678\", \"00\", \"[57-9]\\\\d{6}|(?:[238]\\\\d|48)\\\\d{3}\", [5, 7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[57-9]\"]]]],\n      WF: [\"681\", \"00\", \"(?:40|72)\\\\d{4}|8\\\\d{5}(?:\\\\d{3})?\", [6, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[478]\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]]]],\n      WS: [\"685\", \"0\", \"(?:[2-6]|8\\\\d{5})\\\\d{4}|[78]\\\\d{6}|[68]\\\\d{5}\", [5, 6, 7, 10], [[\"(\\\\d{5})\", \"$1\", [\"[2-5]|6[1-9]\"]], [\"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"[68]\"]], [\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"7\"]]]],\n      XK: [\"383\", \"00\", \"[23]\\\\d{7,8}|(?:4\\\\d\\\\d|[89]00)\\\\d{5}\", [8, 9], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-4]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[23]\"], \"0$1\"]], \"0\"],\n      YE: [\"967\", \"00\", \"(?:1|7\\\\d)\\\\d{7}|[1-7]\\\\d{6}\", [7, 8, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-6]|7[24-68]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], \"0\"],\n      YT: [\"262\", \"00\", \"80\\\\d{7}|(?:26|63)9\\\\d{6}\", [9], 0, \"0\", 0, 0, 0, 0, \"269|63\"],\n      ZA: [\"27\", \"00\", \"[1-79]\\\\d{8}|8\\\\d{4,9}\", [5, 6, 7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"8[1-4]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"8[1-4]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"860\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]], \"0\"],\n      ZM: [\"260\", \"00\", \"800\\\\d{6}|(?:21|63|[79]\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[28]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"[79]\"], \"0$1\"]], \"0\"],\n      ZW: [\"263\", \"00\", \"2(?:[0-57-9]\\\\d{6,8}|6[0-24-9]\\\\d{6,7})|[38]\\\\d{9}|[35-8]\\\\d{8}|[3-6]\\\\d{7}|[1-689]\\\\d{6}|[1-3569]\\\\d{5}|[1356]\\\\d{4}\", [5, 6, 7, 8, 9, 10], [[\"(\\\\d{3})(\\\\d{3,5})\", \"$1 $2\", [\"2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"[49]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"80\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2\", \"2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)\", \"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"8\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3,5})\", \"$1 $2\", [\"1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"29[013-9]|39|54\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3,5})\", \"$1 $2\", [\"(?:25|54)8\", \"258|5483\"], \"0$1\"]], \"0\"]\n    },\n    nonGeographic: {\n      800: [\"800\", 0, \"(?:00|[1-9]\\\\d)\\\\d{6}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"\\\\d\"]]], 0, 0, 0, 0, 0, 0, [0, 0, [\"(?:00|[1-9]\\\\d)\\\\d{6}\"]]],\n      808: [\"808\", 0, \"[1-9]\\\\d{7}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[1-9]\"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, 0, [\"[1-9]\\\\d{7}\"]]],\n      870: [\"870\", 0, \"7\\\\d{11}|[35-7]\\\\d{8}\", [9, 12], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[35-7]\"]]], 0, 0, 0, 0, 0, 0, [0, [\"(?:[356]|774[45])\\\\d{8}|7[6-8]\\\\d{7}\"]]],\n      878: [\"878\", 0, \"10\\\\d{10}\", [12], [[\"(\\\\d{2})(\\\\d{5})(\\\\d{5})\", \"$1 $2 $3\", [\"1\"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, [\"10\\\\d{10}\"]]],\n      881: [\"881\", 0, \"[0-36-9]\\\\d{8}\", [9], [[\"(\\\\d)(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\", [\"[0-36-9]\"]]], 0, 0, 0, 0, 0, 0, [0, [\"[0-36-9]\\\\d{8}\"]]],\n      882: [\"882\", 0, \"[13]\\\\d{6}(?:\\\\d{2,5})?|285\\\\d{9}|(?:[19]\\\\d|49)\\\\d{6}\", [7, 8, 9, 10, 11, 12], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"16|342\"]], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"4\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[19]\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"3[23]\"]], [\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"34[57]\"]], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"34\"]], [\"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\", \"$1 $2 $3\", [\"[1-3]\"]]], 0, 0, 0, 0, 0, 0, [0, [\"342\\\\d{4}|(?:337|49)\\\\d{6}|3(?:2|47|7\\\\d{3})\\\\d{7}\", [7, 8, 9, 10, 12]], 0, 0, 0, 0, 0, 0, [\"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\\\d{4}|6\\\\d{5,10})|(?:(?:285\\\\d\\\\d|3(?:45|[69]\\\\d{3}))\\\\d|9[89])\\\\d{6}\"]]],\n      883: [\"883\", 0, \"(?:210|370\\\\d\\\\d)\\\\d{7}|51\\\\d{7}(?:\\\\d{3})?\", [9, 10, 12], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"510\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"]], [\"(\\\\d{4})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"51[13]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[35]\"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, [\"(?:210|(?:370[1-9]|51[013]0)\\\\d)\\\\d{7}|5100\\\\d{5}\"]]],\n      888: [\"888\", 0, \"\\\\d{11}\", [11], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\"]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, [\"\\\\d{11}\"]]],\n      979: [\"979\", 0, \"[1359]\\\\d{8}\", [9], [[\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[1359]\"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, [\"[1359]\\\\d{8}\"]]]\n    }\n  };\nfunction Ye(e, d) {\n  var t = Array.prototype.slice.call(d);\n  return t.push(Xe), e.apply(this, t);\n}\nfunction j(e) {\n  return j = typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\" ? function (d) {\n    return typeof d;\n  } : function (d) {\n    return d && typeof Symbol == \"function\" && d.constructor === Symbol && d !== Symbol.prototype ? \"symbol\" : typeof d;\n  }, j(e);\n}\nfunction J(e, d) {\n  for (var t = 0; t < d.length; t++) {\n    var n = d[t];\n    n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n  }\n}\nfunction Ze(e, d, t) {\n  return d && J(e.prototype, d), t && J(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nfunction Je(e, d) {\n  if (!(e instanceof d)) throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction qe(e, d) {\n  if (typeof d != \"function\" && d !== null) throw new TypeError(\"Super expression must either be null or a function\");\n  e.prototype = Object.create(d && d.prototype, {\n    constructor: {\n      value: e,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), d && w(e, d);\n}\nfunction Qe(e) {\n  var d = we();\n  return function () {\n    var n = I(e),\n      r;\n    if (d) {\n      var i = I(this).constructor;\n      r = Reflect.construct(n, arguments, i);\n    } else r = n.apply(this, arguments);\n    return ed(this, r);\n  };\n}\nfunction ed(e, d) {\n  if (d && (j(d) === \"object\" || typeof d == \"function\")) return d;\n  if (d !== void 0) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return Ne(e);\n}\nfunction Ne(e) {\n  if (e === void 0) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nfunction U(e) {\n  var d = typeof Map == \"function\" ? /* @__PURE__ */new Map() : void 0;\n  return U = function (n) {\n    if (n === null || !dd(n)) return n;\n    if (typeof n != \"function\") throw new TypeError(\"Super expression must either be null or a function\");\n    if (typeof d < \"u\") {\n      if (d.has(n)) return d.get(n);\n      d.set(n, r);\n    }\n    function r() {\n      return _(n, arguments, I(this).constructor);\n    }\n    return r.prototype = Object.create(n.prototype, {\n      constructor: {\n        value: r,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), w(r, n);\n  }, U(e);\n}\nfunction _(e, d, t) {\n  return we() ? _ = Reflect.construct : _ = function (r, i, a) {\n    var $ = [null];\n    $.push.apply($, i);\n    var u = Function.bind.apply(r, $),\n      o = new u();\n    return a && w(o, a.prototype), o;\n  }, _.apply(null, arguments);\n}\nfunction we() {\n  if (typeof Reflect > \"u\" || !Reflect.construct || Reflect.construct.sham) return !1;\n  if (typeof Proxy == \"function\") return !0;\n  try {\n    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;\n  } catch {\n    return !1;\n  }\n}\nfunction dd(e) {\n  return Function.toString.call(e).indexOf(\"[native code]\") !== -1;\n}\nfunction w(e, d) {\n  return w = Object.setPrototypeOf || function (n, r) {\n    return n.__proto__ = r, n;\n  }, w(e, d);\n}\nfunction I(e) {\n  return I = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, I(e);\n}\nvar m = /* @__PURE__ */function (e) {\n    qe(t, e);\n    var d = Qe(t);\n    function t(n) {\n      var r;\n      return Je(this, t), r = d.call(this, n), Object.setPrototypeOf(Ne(r), t.prototype), r.name = r.constructor.name, r;\n    }\n    return Ze(t);\n  }( /* @__PURE__ */U(Error)),\n  K = 2,\n  td = 17,\n  nd = 3,\n  g = \"0-9０-９٠-٩۰-۹\",\n  rd = \"-‐-―−ー－\",\n  id = \"／/\",\n  $d = \"．.\",\n  ad = \"  ­​⁠　\",\n  od = \"()（）［］\\\\[\\\\]\",\n  ud = \"~⁓∼～\",\n  T = \"\".concat(rd).concat(id).concat($d).concat(ad).concat(od).concat(ud),\n  W = \"+＋\";\nfunction q(e, d) {\n  e = e.split(\"-\"), d = d.split(\"-\");\n  for (var t = e[0].split(\".\"), n = d[0].split(\".\"), r = 0; r < 3; r++) {\n    var i = Number(t[r]),\n      a = Number(n[r]);\n    if (i > a) return 1;\n    if (a > i) return -1;\n    if (!isNaN(i) && isNaN(a)) return 1;\n    if (isNaN(i) && !isNaN(a)) return -1;\n  }\n  return e[1] && d[1] ? e[1] > d[1] ? 1 : e[1] < d[1] ? -1 : 0 : !e[1] && d[1] ? 1 : e[1] && !d[1] ? -1 : 0;\n}\nfunction F(e) {\n  return F = typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\" ? function (d) {\n    return typeof d;\n  } : function (d) {\n    return d && typeof Symbol == \"function\" && d.constructor === Symbol && d !== Symbol.prototype ? \"symbol\" : typeof d;\n  }, F(e);\n}\nfunction A(e, d) {\n  if (!(e instanceof d)) throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction Q(e, d) {\n  for (var t = 0; t < d.length; t++) {\n    var n = d[t];\n    n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n  }\n}\nfunction D(e, d, t) {\n  return d && Q(e.prototype, d), t && Q(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nvar sd = \"1.2.0\",\n  ld = \"1.7.35\",\n  ee = \" ext. \",\n  fd = /^\\d+$/,\n  l = /* @__PURE__ */function () {\n    function e(d) {\n      A(this, e), yd(d), this.metadata = d, Ie.call(this, d);\n    }\n    return D(e, [{\n      key: \"getCountries\",\n      value: function () {\n        return Object.keys(this.metadata.countries).filter(function (t) {\n          return t !== \"001\";\n        });\n      }\n    }, {\n      key: \"getCountryMetadata\",\n      value: function (t) {\n        return this.metadata.countries[t];\n      }\n    }, {\n      key: \"nonGeographic\",\n      value: function () {\n        if (!(this.v1 || this.v2 || this.v3)) return this.metadata.nonGeographic || this.metadata.nonGeographical;\n      }\n    }, {\n      key: \"hasCountry\",\n      value: function (t) {\n        return this.getCountryMetadata(t) !== void 0;\n      }\n    }, {\n      key: \"hasCallingCode\",\n      value: function (t) {\n        if (this.getCountryCodesForCallingCode(t)) return !0;\n        if (this.nonGeographic()) {\n          if (this.nonGeographic()[t]) return !0;\n        } else {\n          var n = this.countryCallingCodes()[t];\n          if (n && n.length === 1 && n[0] === \"001\") return !0;\n        }\n      }\n    }, {\n      key: \"isNonGeographicCallingCode\",\n      value: function (t) {\n        return this.nonGeographic() ? !!this.nonGeographic()[t] : !this.getCountryCodesForCallingCode(t);\n      }\n      // Deprecated.\n    }, {\n      key: \"country\",\n      value: function (t) {\n        return this.selectNumberingPlan(t);\n      }\n    }, {\n      key: \"selectNumberingPlan\",\n      value: function (t, n) {\n        if (t && fd.test(t) && (n = t, t = null), t && t !== \"001\") {\n          if (!this.hasCountry(t)) throw new Error(\"Unknown country: \".concat(t));\n          this.numberingPlan = new de(this.getCountryMetadata(t), this);\n        } else if (n) {\n          if (!this.hasCallingCode(n)) throw new Error(\"Unknown calling code: \".concat(n));\n          this.numberingPlan = new de(this.getNumberingPlanMetadata(n), this);\n        } else this.numberingPlan = void 0;\n        return this;\n      }\n    }, {\n      key: \"getCountryCodesForCallingCode\",\n      value: function (t) {\n        var n = this.countryCallingCodes()[t];\n        if (n) return n.length === 1 && n[0].length === 3 ? void 0 : n;\n      }\n    }, {\n      key: \"getCountryCodeForCallingCode\",\n      value: function (t) {\n        var n = this.getCountryCodesForCallingCode(t);\n        if (n) return n[0];\n      }\n    }, {\n      key: \"getNumberingPlanMetadata\",\n      value: function (t) {\n        var n = this.getCountryCodeForCallingCode(t);\n        if (n) return this.getCountryMetadata(n);\n        if (this.nonGeographic()) {\n          var r = this.nonGeographic()[t];\n          if (r) return r;\n        } else {\n          var i = this.countryCallingCodes()[t];\n          if (i && i.length === 1 && i[0] === \"001\") return this.metadata.countries[\"001\"];\n        }\n      }\n      // Deprecated.\n    }, {\n      key: \"countryCallingCode\",\n      value: function () {\n        return this.numberingPlan.callingCode();\n      }\n      // Deprecated.\n    }, {\n      key: \"IDDPrefix\",\n      value: function () {\n        return this.numberingPlan.IDDPrefix();\n      }\n      // Deprecated.\n    }, {\n      key: \"defaultIDDPrefix\",\n      value: function () {\n        return this.numberingPlan.defaultIDDPrefix();\n      }\n      // Deprecated.\n    }, {\n      key: \"nationalNumberPattern\",\n      value: function () {\n        return this.numberingPlan.nationalNumberPattern();\n      }\n      // Deprecated.\n    }, {\n      key: \"possibleLengths\",\n      value: function () {\n        return this.numberingPlan.possibleLengths();\n      }\n      // Deprecated.\n    }, {\n      key: \"formats\",\n      value: function () {\n        return this.numberingPlan.formats();\n      }\n      // Deprecated.\n    }, {\n      key: \"nationalPrefixForParsing\",\n      value: function () {\n        return this.numberingPlan.nationalPrefixForParsing();\n      }\n      // Deprecated.\n    }, {\n      key: \"nationalPrefixTransformRule\",\n      value: function () {\n        return this.numberingPlan.nationalPrefixTransformRule();\n      }\n      // Deprecated.\n    }, {\n      key: \"leadingDigits\",\n      value: function () {\n        return this.numberingPlan.leadingDigits();\n      }\n      // Deprecated.\n    }, {\n      key: \"hasTypes\",\n      value: function () {\n        return this.numberingPlan.hasTypes();\n      }\n      // Deprecated.\n    }, {\n      key: \"type\",\n      value: function (t) {\n        return this.numberingPlan.type(t);\n      }\n      // Deprecated.\n    }, {\n      key: \"ext\",\n      value: function () {\n        return this.numberingPlan.ext();\n      }\n    }, {\n      key: \"countryCallingCodes\",\n      value: function () {\n        return this.v1 ? this.metadata.country_phone_code_to_countries : this.metadata.country_calling_codes;\n      }\n      // Deprecated.\n    }, {\n      key: \"chooseCountryByCountryCallingCode\",\n      value: function (t) {\n        return this.selectNumberingPlan(t);\n      }\n    }, {\n      key: \"hasSelectedNumberingPlan\",\n      value: function () {\n        return this.numberingPlan !== void 0;\n      }\n    }]), e;\n  }(),\n  de = /* @__PURE__ */function () {\n    function e(d, t) {\n      A(this, e), this.globalMetadataObject = t, this.metadata = d, Ie.call(this, t.metadata);\n    }\n    return D(e, [{\n      key: \"callingCode\",\n      value: function () {\n        return this.metadata[0];\n      }\n      // Formatting information for regions which share\n      // a country calling code is contained by only one region\n      // for performance reasons. For example, for NANPA region\n      // (\"North American Numbering Plan Administration\",\n      //  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n      // it will be contained in the metadata for `US`.\n    }, {\n      key: \"getDefaultCountryMetadataForRegion\",\n      value: function () {\n        return this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode());\n      }\n      // Is always present.\n    }, {\n      key: \"IDDPrefix\",\n      value: function () {\n        if (!(this.v1 || this.v2)) return this.metadata[1];\n      }\n      // Is only present when a country supports multiple IDD prefixes.\n    }, {\n      key: \"defaultIDDPrefix\",\n      value: function () {\n        if (!(this.v1 || this.v2)) return this.metadata[12];\n      }\n    }, {\n      key: \"nationalNumberPattern\",\n      value: function () {\n        return this.v1 || this.v2 ? this.metadata[1] : this.metadata[2];\n      }\n      // \"possible length\" data is always present in Google's metadata.\n    }, {\n      key: \"possibleLengths\",\n      value: function () {\n        if (!this.v1) return this.metadata[this.v2 ? 2 : 3];\n      }\n    }, {\n      key: \"_getFormats\",\n      value: function (t) {\n        return t[this.v1 ? 2 : this.v2 ? 3 : 4];\n      }\n      // For countries of the same region (e.g. NANPA)\n      // formats are all stored in the \"main\" country for that region.\n      // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n    }, {\n      key: \"formats\",\n      value: function () {\n        var t = this,\n          n = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || [];\n        return n.map(function (r) {\n          return new cd(r, t);\n        });\n      }\n    }, {\n      key: \"nationalPrefix\",\n      value: function () {\n        return this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5];\n      }\n    }, {\n      key: \"_getNationalPrefixFormattingRule\",\n      value: function (t) {\n        return t[this.v1 ? 4 : this.v2 ? 5 : 6];\n      }\n      // For countries of the same region (e.g. NANPA)\n      // national prefix formatting rule is stored in the \"main\" country for that region.\n      // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n    }, {\n      key: \"nationalPrefixFormattingRule\",\n      value: function () {\n        return this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion());\n      }\n    }, {\n      key: \"_nationalPrefixForParsing\",\n      value: function () {\n        return this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7];\n      }\n    }, {\n      key: \"nationalPrefixForParsing\",\n      value: function () {\n        return this._nationalPrefixForParsing() || this.nationalPrefix();\n      }\n    }, {\n      key: \"nationalPrefixTransformRule\",\n      value: function () {\n        return this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8];\n      }\n    }, {\n      key: \"_getNationalPrefixIsOptionalWhenFormatting\",\n      value: function () {\n        return !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9];\n      }\n      // For countries of the same region (e.g. NANPA)\n      // \"national prefix is optional when formatting\" flag is\n      // stored in the \"main\" country for that region.\n      // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n    }, {\n      key: \"nationalPrefixIsOptionalWhenFormattingInNationalFormat\",\n      value: function () {\n        return this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) || this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion());\n      }\n    }, {\n      key: \"leadingDigits\",\n      value: function () {\n        return this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10];\n      }\n    }, {\n      key: \"types\",\n      value: function () {\n        return this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11];\n      }\n    }, {\n      key: \"hasTypes\",\n      value: function () {\n        return this.types() && this.types().length === 0 ? !1 : !!this.types();\n      }\n    }, {\n      key: \"type\",\n      value: function (t) {\n        if (this.hasTypes() && te(this.types(), t)) return new pd(te(this.types(), t), this);\n      }\n    }, {\n      key: \"ext\",\n      value: function () {\n        return this.v1 || this.v2 ? ee : this.metadata[13] || ee;\n      }\n    }]), e;\n  }(),\n  cd = /* @__PURE__ */function () {\n    function e(d, t) {\n      A(this, e), this._format = d, this.metadata = t;\n    }\n    return D(e, [{\n      key: \"pattern\",\n      value: function () {\n        return this._format[0];\n      }\n    }, {\n      key: \"format\",\n      value: function () {\n        return this._format[1];\n      }\n    }, {\n      key: \"leadingDigitsPatterns\",\n      value: function () {\n        return this._format[2] || [];\n      }\n    }, {\n      key: \"nationalPrefixFormattingRule\",\n      value: function () {\n        return this._format[3] || this.metadata.nationalPrefixFormattingRule();\n      }\n    }, {\n      key: \"nationalPrefixIsOptionalWhenFormattingInNationalFormat\",\n      value: function () {\n        return !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat();\n      }\n    }, {\n      key: \"nationalPrefixIsMandatoryWhenFormattingInNationalFormat\",\n      value: function () {\n        return this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat();\n      }\n      // Checks whether national prefix formatting rule contains national prefix.\n    }, {\n      key: \"usesNationalPrefix\",\n      value: function () {\n        return !!(this.nationalPrefixFormattingRule() &&\n        // Check that national prefix formatting rule is not a \"dummy\" one.\n        !hd.test(this.nationalPrefixFormattingRule()));\n      }\n    }, {\n      key: \"internationalFormat\",\n      value: function () {\n        return this._format[5] || this.format();\n      }\n    }]), e;\n  }(),\n  hd = /^\\(?\\$1\\)?$/,\n  pd = /* @__PURE__ */function () {\n    function e(d, t) {\n      A(this, e), this.type = d, this.metadata = t;\n    }\n    return D(e, [{\n      key: \"pattern\",\n      value: function () {\n        return this.metadata.v1 ? this.type : this.type[0];\n      }\n    }, {\n      key: \"possibleLengths\",\n      value: function () {\n        if (!this.metadata.v1) return this.type[1] || this.metadata.possibleLengths();\n      }\n    }]), e;\n  }();\nfunction te(e, d) {\n  switch (d) {\n    case \"FIXED_LINE\":\n      return e[0];\n    case \"MOBILE\":\n      return e[1];\n    case \"TOLL_FREE\":\n      return e[2];\n    case \"PREMIUM_RATE\":\n      return e[3];\n    case \"PERSONAL_NUMBER\":\n      return e[4];\n    case \"VOICEMAIL\":\n      return e[5];\n    case \"UAN\":\n      return e[6];\n    case \"PAGER\":\n      return e[7];\n    case \"VOIP\":\n      return e[8];\n    case \"SHARED_COST\":\n      return e[9];\n  }\n}\nfunction yd(e) {\n  if (!e) throw new Error(\"[libphonenumber-js] `metadata` argument not passed. Check your arguments.\");\n  if (!M(e) || !M(e.countries)) throw new Error(\"[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` child object property. Got \".concat(M(e) ? \"an object of shape: { \" + Object.keys(e).join(\", \") + \" }\" : \"a \" + md(e) + \": \" + e, \".\"));\n}\nvar M = function (d) {\n    return F(d) === \"object\";\n  },\n  md = function (d) {\n    return F(d);\n  };\nfunction z(e, d) {\n  if (d = new l(d), d.hasCountry(e)) return d.country(e).countryCallingCode();\n  throw new Error(\"Unknown country: \".concat(e));\n}\nfunction gd(e, d) {\n  return d.countries[e] !== void 0;\n}\nfunction Ie(e) {\n  var d = e.version;\n  typeof d == \"number\" ? (this.v1 = d === 1, this.v2 = d === 2, this.v3 = d === 3, this.v4 = d === 4) : d ? q(d, sd) === -1 ? this.v2 = !0 : q(d, ld) === -1 ? this.v3 = !0 : this.v4 = !0 : this.v1 = !0;\n}\nvar bd = \";ext=\",\n  O = function (d) {\n    return \"([\".concat(g, \"]{1,\").concat(d, \"})\");\n  };\nfunction Ee(e) {\n  var d = \"20\",\n    t = \"15\",\n    n = \"9\",\n    r = \"6\",\n    i = \"[  \\\\t,]*\",\n    a = \"[:\\\\.．]?[  \\\\t,-]*\",\n    $ = \"#?\",\n    u = \"(?:e?xt(?:ensi(?:ó?|ó))?n?|ｅ?ｘｔｎ?|доб|anexo)\",\n    o = \"(?:[xｘ#＃~～]|int|ｉｎｔ)\",\n    c = \"[- ]+\",\n    f = \"[  \\\\t]*\",\n    v = \"(?:,{2}|;)\",\n    P = bd + O(d),\n    xe = i + u + a + O(d) + $,\n    Ae = i + o + a + O(n) + $,\n    De = c + O(r) + \"#\",\n    Re = f + v + a + O(t) + $,\n    Me = f + \"(?:,)+\" + a + O(n) + $;\n  return P + \"|\" + xe + \"|\" + Ae + \"|\" + De + \"|\" + Re + \"|\" + Me;\n}\nvar vd = \"[\" + g + \"]{\" + K + \"}\",\n  Cd = \"[\" + W + \"]{0,1}(?:[\" + T + \"]*[\" + g + \"]){3,}[\" + T + g + \"]*\",\n  Od = new RegExp(\"^[\" + W + \"]{0,1}(?:[\" + T + \"]*[\" + g + \"]){1,2}$\", \"i\"),\n  Pd = Cd +\n  // Phone number extensions\n  \"(?:\" + Ee() + \")?\",\n  Nd = new RegExp(\n  // Either a short two-digit-only phone number\n  \"^\" + vd + \"$|^\" + Pd + \"$\", \"i\");\nfunction Se(e) {\n  return e.length >= K && Nd.test(e);\n}\nfunction wd(e) {\n  return Od.test(e);\n}\nvar ne = new RegExp(\"(?:\" + Ee() + \")$\", \"i\");\nfunction Id(e) {\n  var d = e.search(ne);\n  if (d < 0) return {};\n  for (var t = e.slice(0, d), n = e.match(ne), r = 1; r < n.length;) {\n    if (n[r]) return {\n      number: t,\n      ext: n[r]\n    };\n    r++;\n  }\n}\nvar Ed = {\n  0: \"0\",\n  1: \"1\",\n  2: \"2\",\n  3: \"3\",\n  4: \"4\",\n  5: \"5\",\n  6: \"6\",\n  7: \"7\",\n  8: \"8\",\n  9: \"9\",\n  \"０\": \"0\",\n  // Fullwidth digit 0\n  \"１\": \"1\",\n  // Fullwidth digit 1\n  \"２\": \"2\",\n  // Fullwidth digit 2\n  \"３\": \"3\",\n  // Fullwidth digit 3\n  \"４\": \"4\",\n  // Fullwidth digit 4\n  \"５\": \"5\",\n  // Fullwidth digit 5\n  \"６\": \"6\",\n  // Fullwidth digit 6\n  \"７\": \"7\",\n  // Fullwidth digit 7\n  \"８\": \"8\",\n  // Fullwidth digit 8\n  \"９\": \"9\",\n  // Fullwidth digit 9\n  \"٠\": \"0\",\n  // Arabic-indic digit 0\n  \"١\": \"1\",\n  // Arabic-indic digit 1\n  \"٢\": \"2\",\n  // Arabic-indic digit 2\n  \"٣\": \"3\",\n  // Arabic-indic digit 3\n  \"٤\": \"4\",\n  // Arabic-indic digit 4\n  \"٥\": \"5\",\n  // Arabic-indic digit 5\n  \"٦\": \"6\",\n  // Arabic-indic digit 6\n  \"٧\": \"7\",\n  // Arabic-indic digit 7\n  \"٨\": \"8\",\n  // Arabic-indic digit 8\n  \"٩\": \"9\",\n  // Arabic-indic digit 9\n  \"۰\": \"0\",\n  // Eastern-Arabic digit 0\n  \"۱\": \"1\",\n  // Eastern-Arabic digit 1\n  \"۲\": \"2\",\n  // Eastern-Arabic digit 2\n  \"۳\": \"3\",\n  // Eastern-Arabic digit 3\n  \"۴\": \"4\",\n  // Eastern-Arabic digit 4\n  \"۵\": \"5\",\n  // Eastern-Arabic digit 5\n  \"۶\": \"6\",\n  // Eastern-Arabic digit 6\n  \"۷\": \"7\",\n  // Eastern-Arabic digit 7\n  \"۸\": \"8\",\n  // Eastern-Arabic digit 8\n  \"۹\": \"9\"\n  // Eastern-Arabic digit 9\n};\n\nfunction Sd(e) {\n  return Ed[e];\n}\nfunction _d(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t) return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = Td(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function () {\n      return n >= e.length ? {\n        done: !0\n      } : {\n        done: !1,\n        value: e[n++]\n      };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction Td(e, d) {\n  if (e) {\n    if (typeof e == \"string\") return re(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\") return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)) return re(e, d);\n  }\n}\nfunction re(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++) n[t] = e[t];\n  return n;\n}\nfunction ie(e) {\n  for (var d = \"\", t = _d(e.split(\"\")), n; !(n = t()).done;) {\n    var r = n.value;\n    d += Fd(r, d) || \"\";\n  }\n  return d;\n}\nfunction Fd(e, d) {\n  return e === \"+\" ? d ? void 0 : \"+\" : Sd(e);\n}\nfunction xd(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t) return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = Ad(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function () {\n      return n >= e.length ? {\n        done: !0\n      } : {\n        done: !1,\n        value: e[n++]\n      };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction Ad(e, d) {\n  if (e) {\n    if (typeof e == \"string\") return $e(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\") return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)) return $e(e, d);\n  }\n}\nfunction $e(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++) n[t] = e[t];\n  return n;\n}\nfunction Dd(e, d) {\n  for (var t = e.slice(), n = xd(d), r; !(r = n()).done;) {\n    var i = r.value;\n    e.indexOf(i) < 0 && t.push(i);\n  }\n  return t.sort(function (a, $) {\n    return a - $;\n  });\n}\nfunction X(e, d) {\n  return _e(e, void 0, d);\n}\nfunction _e(e, d, t) {\n  var n = t.type(d),\n    r = n && n.possibleLengths() || t.possibleLengths();\n  if (!r) return \"IS_POSSIBLE\";\n  if (d === \"FIXED_LINE_OR_MOBILE\") {\n    if (!t.type(\"FIXED_LINE\")) return _e(e, \"MOBILE\", t);\n    var i = t.type(\"MOBILE\");\n    i && (r = Dd(r, i.possibleLengths()));\n  } else if (d && !n) return \"INVALID_LENGTH\";\n  var a = e.length,\n    $ = r[0];\n  return $ === a ? \"IS_POSSIBLE\" : $ > a ? \"TOO_SHORT\" : r[r.length - 1] < a ? \"TOO_LONG\" : r.indexOf(a, 1) >= 0 ? \"IS_POSSIBLE\" : \"INVALID_LENGTH\";\n}\nfunction Rd(e, d, t) {\n  if (d === void 0 && (d = {}), t = new l(t), d.v2) {\n    if (!e.countryCallingCode) throw new Error(\"Invalid phone number object passed\");\n    t.selectNumberingPlan(e.countryCallingCode);\n  } else {\n    if (!e.phone) return !1;\n    if (e.country) {\n      if (!t.hasCountry(e.country)) throw new Error(\"Unknown country: \".concat(e.country));\n      t.country(e.country);\n    } else {\n      if (!e.countryCallingCode) throw new Error(\"Invalid phone number object passed\");\n      t.selectNumberingPlan(e.countryCallingCode);\n    }\n  }\n  if (t.possibleLengths()) return Te(e.phone || e.nationalNumber, t);\n  if (e.countryCallingCode && t.isNonGeographicCallingCode(e.countryCallingCode)) return !0;\n  throw new Error('Missing \"possibleLengths\" in metadata. Perhaps the metadata has been generated before v1.0.18.');\n}\nfunction Te(e, d) {\n  switch (X(e, d)) {\n    case \"IS_POSSIBLE\":\n      return !0;\n    default:\n      return !1;\n  }\n}\nfunction Md(e, d) {\n  return Bd(e) || kd(e, d) || Fe(e, d) || Ld();\n}\nfunction Ld() {\n  throw new TypeError(`Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction kd(e, d) {\n  var t = e == null ? null : typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t != null) {\n    var n = [],\n      r = !0,\n      i = !1,\n      a,\n      $;\n    try {\n      for (t = t.call(e); !(r = (a = t.next()).done) && (n.push(a.value), !(d && n.length === d)); r = !0);\n    } catch (u) {\n      i = !0, $ = u;\n    } finally {\n      try {\n        !r && t.return != null && t.return();\n      } finally {\n        if (i) throw $;\n      }\n    }\n    return n;\n  }\n}\nfunction Bd(e) {\n  if (Array.isArray(e)) return e;\n}\nfunction Gd(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t) return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = Fe(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function () {\n      return n >= e.length ? {\n        done: !0\n      } : {\n        done: !1,\n        value: e[n++]\n      };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction Fe(e, d) {\n  if (e) {\n    if (typeof e == \"string\") return ae(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\") return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)) return ae(e, d);\n  }\n}\nfunction ae(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++) n[t] = e[t];\n  return n;\n}\nfunction jd(e) {\n  var d, t;\n  e = e.replace(/^tel:/, \"tel=\");\n  for (var n = Gd(e.split(\";\")), r; !(r = n()).done;) {\n    var i = r.value,\n      a = i.split(\"=\"),\n      $ = Md(a, 2),\n      u = $[0],\n      o = $[1];\n    switch (u) {\n      case \"tel\":\n        d = o;\n        break;\n      case \"ext\":\n        t = o;\n        break;\n      case \"phone-context\":\n        o[0] === \"+\" && (d = o + d);\n        break;\n    }\n  }\n  if (!Se(d)) return {};\n  var c = {\n    number: d\n  };\n  return t && (c.ext = t), c;\n}\nfunction Ud(e) {\n  var d = e.number,\n    t = e.ext;\n  if (!d) return \"\";\n  if (d[0] !== \"+\") throw new Error('\"formatRFC3966()\" expects \"number\" to be in E.164 format.');\n  return \"tel:\".concat(d).concat(t ? \";ext=\" + t : \"\");\n}\nfunction y(e, d) {\n  return e = e || \"\", new RegExp(\"^(?:\" + d + \")$\").test(e);\n}\nfunction Hd(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t) return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = Vd(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function () {\n      return n >= e.length ? {\n        done: !0\n      } : {\n        done: !1,\n        value: e[n++]\n      };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction Vd(e, d) {\n  if (e) {\n    if (typeof e == \"string\") return oe(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\") return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)) return oe(e, d);\n  }\n}\nfunction oe(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++) n[t] = e[t];\n  return n;\n}\nvar Kd = [\"MOBILE\", \"PREMIUM_RATE\", \"TOLL_FREE\", \"SHARED_COST\", \"VOIP\", \"PERSONAL_NUMBER\", \"PAGER\", \"UAN\", \"VOICEMAIL\"];\nfunction Y(e, d, t) {\n  if (d = d || {}, !!e.country) {\n    t = new l(t), t.selectNumberingPlan(e.country, e.countryCallingCode);\n    var n = d.v2 ? e.nationalNumber : e.phone;\n    if (y(n, t.nationalNumberPattern())) {\n      if (L(n, \"FIXED_LINE\", t)) return t.type(\"MOBILE\") && t.type(\"MOBILE\").pattern() === \"\" || !t.type(\"MOBILE\") || L(n, \"MOBILE\", t) ? \"FIXED_LINE_OR_MOBILE\" : \"FIXED_LINE\";\n      for (var r = Hd(Kd), i; !(i = r()).done;) {\n        var a = i.value;\n        if (L(n, a, t)) return a;\n      }\n    }\n  }\n}\nfunction L(e, d, t) {\n  return d = t.type(d), !d || !d.pattern() || d.possibleLengths() && d.possibleLengths().indexOf(e.length) < 0 ? !1 : y(e, d.pattern());\n}\nfunction Wd(e, d, t) {\n  if (d = d || {}, t = new l(t), !e.country) return !1;\n  if (t.selectNumberingPlan(e.country, e.countryCallingCode), t.hasTypes()) return Y(e, d, t.metadata) !== void 0;\n  var n = d.v2 ? e.nationalNumber : e.phone;\n  return y(n, t.nationalNumberPattern());\n}\nfunction zd(e) {\n  return e.replace(new RegExp(\"[\".concat(T, \"]+\"), \"g\"), \" \").trim();\n}\nvar Xd = /(\\$\\d)/;\nfunction Yd(e, d, t) {\n  var n = t.useInternationalFormat,\n    r = t.withNationalPrefix;\n  t.carrierCode, t.metadata;\n  var i = e.replace(new RegExp(d.pattern()), n ? d.internationalFormat() :\n  // This library doesn't use `domestic_carrier_code_formatting_rule`,\n  // because that one is only used when formatting phone numbers\n  // for dialing from a mobile phone, and this is not a dialing library.\n  // carrierCode && format.domesticCarrierCodeFormattingRule()\n  // \t// First, replace the $CC in the formatting rule with the desired carrier code.\n  // \t// Then, replace the $FG in the formatting rule with the first group\n  // \t// and the carrier code combined in the appropriate way.\n  // \t? format.format().replace(FIRST_GROUP_PATTERN, format.domesticCarrierCodeFormattingRule().replace('$CC', carrierCode))\n  // \t: (\n  // \t\twithNationalPrefix && format.nationalPrefixFormattingRule()\n  // \t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\n  // \t\t\t: format.format()\n  // \t)\n  r && d.nationalPrefixFormattingRule() ? d.format().replace(Xd, d.nationalPrefixFormattingRule()) : d.format());\n  return n ? zd(i) : i;\n}\nvar Zd = /^[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?$/;\nfunction Jd(e, d, t) {\n  var n = new l(t);\n  if (n.selectNumberingPlan(e, d), n.defaultIDDPrefix()) return n.defaultIDDPrefix();\n  if (Zd.test(n.IDDPrefix())) return n.IDDPrefix();\n}\nfunction qd(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t) return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = Qd(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function () {\n      return n >= e.length ? {\n        done: !0\n      } : {\n        done: !1,\n        value: e[n++]\n      };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction Qd(e, d) {\n  if (e) {\n    if (typeof e == \"string\") return ue(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\") return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)) return ue(e, d);\n  }\n}\nfunction ue(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++) n[t] = e[t];\n  return n;\n}\nfunction se(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction le(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? se(Object(t), !0).forEach(function (n) {\n      et(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : se(Object(t)).forEach(function (n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction et(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[d] = t, e;\n}\nvar fe = {\n  formatExtension: function (d, t, n) {\n    return \"\".concat(d).concat(n.ext()).concat(t);\n  }\n};\nfunction dt(e, d, t, n) {\n  if (t ? t = le(le({}, fe), t) : t = fe, n = new l(n), e.country && e.country !== \"001\") {\n    if (!n.hasCountry(e.country)) throw new Error(\"Unknown country: \".concat(e.country));\n    n.country(e.country);\n  } else if (e.countryCallingCode) n.selectNumberingPlan(e.countryCallingCode);else return e.phone || \"\";\n  var r = n.countryCallingCode(),\n    i = t.v2 ? e.nationalNumber : e.phone,\n    a;\n  switch (d) {\n    case \"NATIONAL\":\n      return i ? (a = x(i, e.carrierCode, \"NATIONAL\", n, t), k(a, e.ext, n, t.formatExtension)) : \"\";\n    case \"INTERNATIONAL\":\n      return i ? (a = x(i, null, \"INTERNATIONAL\", n, t), a = \"+\".concat(r, \" \").concat(a), k(a, e.ext, n, t.formatExtension)) : \"+\".concat(r);\n    case \"E.164\":\n      return \"+\".concat(r).concat(i);\n    case \"RFC3966\":\n      return Ud({\n        number: \"+\".concat(r).concat(i),\n        ext: e.ext\n      });\n    case \"IDD\":\n      if (!t.fromCountry) return;\n      var $ = nt(i, e.carrierCode, r, t.fromCountry, n);\n      return k($, e.ext, n, t.formatExtension);\n    default:\n      throw new Error('Unknown \"format\" argument passed to \"formatNumber()\": \"'.concat(d, '\"'));\n  }\n}\nfunction x(e, d, t, n, r) {\n  var i = tt(n.formats(), e);\n  return i ? Yd(e, i, {\n    useInternationalFormat: t === \"INTERNATIONAL\",\n    withNationalPrefix: !(i.nationalPrefixIsOptionalWhenFormattingInNationalFormat() && r && r.nationalPrefix === !1),\n    carrierCode: d,\n    metadata: n\n  }) : e;\n}\nfunction tt(e, d) {\n  for (var t = qd(e), n; !(n = t()).done;) {\n    var r = n.value;\n    if (r.leadingDigitsPatterns().length > 0) {\n      var i = r.leadingDigitsPatterns()[r.leadingDigitsPatterns().length - 1];\n      if (d.search(i) !== 0) continue;\n    }\n    if (y(d, r.pattern())) return r;\n  }\n}\nfunction k(e, d, t, n) {\n  return d ? n(e, d, t) : e;\n}\nfunction nt(e, d, t, n, r) {\n  var i = z(n, r.metadata);\n  if (i === t) {\n    var a = x(e, d, \"NATIONAL\", r);\n    return t === \"1\" ? t + \" \" + a : a;\n  }\n  var $ = Jd(n, void 0, r.metadata);\n  if ($) return \"\".concat($, \" \").concat(t, \" \").concat(x(e, null, \"INTERNATIONAL\", r));\n}\nfunction ce(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction he(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? ce(Object(t), !0).forEach(function (n) {\n      rt(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ce(Object(t)).forEach(function (n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction rt(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[d] = t, e;\n}\nfunction it(e, d) {\n  if (!(e instanceof d)) throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction pe(e, d) {\n  for (var t = 0; t < d.length; t++) {\n    var n = d[t];\n    n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n  }\n}\nfunction $t(e, d, t) {\n  return d && pe(e.prototype, d), t && pe(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nvar at = /* @__PURE__ */function () {\n    function e(d, t, n) {\n      if (it(this, e), !d) throw new TypeError(\"`country` or `countryCallingCode` not passed\");\n      if (!t) throw new TypeError(\"`nationalNumber` not passed\");\n      if (!n) throw new TypeError(\"`metadata` not passed\");\n      var r = new l(n);\n      ot(d) && (this.country = d, r.country(d), d = r.countryCallingCode()), this.countryCallingCode = d, this.nationalNumber = t, this.number = \"+\" + this.countryCallingCode + this.nationalNumber, this.metadata = n;\n    }\n    return $t(e, [{\n      key: \"setExt\",\n      value: function (t) {\n        this.ext = t;\n      }\n    }, {\n      key: \"isPossible\",\n      value: function () {\n        return Rd(this, {\n          v2: !0\n        }, this.metadata);\n      }\n    }, {\n      key: \"isValid\",\n      value: function () {\n        return Wd(this, {\n          v2: !0\n        }, this.metadata);\n      }\n    }, {\n      key: \"isNonGeographic\",\n      value: function () {\n        var t = new l(this.metadata);\n        return t.isNonGeographicCallingCode(this.countryCallingCode);\n      }\n    }, {\n      key: \"isEqual\",\n      value: function (t) {\n        return this.number === t.number && this.ext === t.ext;\n      }\n      // // Is just an alias for `this.isValid() && this.country === country`.\n      // // https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\n      // isValidForRegion(country) {\n      // \treturn isValidNumberForRegion(this, country, { v2: true }, this.metadata)\n      // }\n    }, {\n      key: \"getType\",\n      value: function () {\n        return Y(this, {\n          v2: !0\n        }, this.metadata);\n      }\n    }, {\n      key: \"format\",\n      value: function (t, n) {\n        return dt(this, t, n ? he(he({}, n), {}, {\n          v2: !0\n        }) : {\n          v2: !0\n        }, this.metadata);\n      }\n    }, {\n      key: \"formatNational\",\n      value: function (t) {\n        return this.format(\"NATIONAL\", t);\n      }\n    }, {\n      key: \"formatInternational\",\n      value: function (t) {\n        return this.format(\"INTERNATIONAL\", t);\n      }\n    }, {\n      key: \"getURI\",\n      value: function (t) {\n        return this.format(\"RFC3966\", t);\n      }\n    }]), e;\n  }(),\n  ot = function (d) {\n    return /^[A-Z]{2}$/.test(d);\n  },\n  ut = new RegExp(\"([\" + g + \"])\");\nfunction st(e, d, t, n) {\n  if (d) {\n    var r = new l(n);\n    r.selectNumberingPlan(d, t);\n    var i = new RegExp(r.IDDPrefix());\n    if (e.search(i) === 0) {\n      e = e.slice(e.match(i)[0].length);\n      var a = e.match(ut);\n      if (!(a && a[1] != null && a[1].length > 0 && a[1] === \"0\")) return e;\n    }\n  }\n}\nfunction lt(e, d) {\n  if (e && d.numberingPlan.nationalPrefixForParsing()) {\n    var t = new RegExp(\"^(?:\" + d.numberingPlan.nationalPrefixForParsing() + \")\"),\n      n = t.exec(e);\n    if (n) {\n      var r,\n        i,\n        a = n.length - 1,\n        $ = a > 0 && n[a];\n      if (d.nationalPrefixTransformRule() && $) r = e.replace(t, d.nationalPrefixTransformRule()), a > 1 && (i = n[1]);else {\n        var u = n[0];\n        r = e.slice(u.length), $ && (i = n[1]);\n      }\n      var o;\n      if ($) {\n        var c = e.indexOf(n[1]),\n          f = e.slice(0, c);\n        f === d.numberingPlan.nationalPrefix() && (o = d.numberingPlan.nationalPrefix());\n      } else o = n[0];\n      return {\n        nationalNumber: r,\n        nationalPrefix: o,\n        carrierCode: i\n      };\n    }\n  }\n  return {\n    nationalNumber: e\n  };\n}\nfunction H(e, d) {\n  var t = lt(e, d),\n    n = t.carrierCode,\n    r = t.nationalNumber;\n  if (r !== e) {\n    if (!ft(e, r, d)) return {\n      nationalNumber: e\n    };\n    if (d.possibleLengths() && !ct(r, d)) return {\n      nationalNumber: e\n    };\n  }\n  return {\n    nationalNumber: r,\n    carrierCode: n\n  };\n}\nfunction ft(e, d, t) {\n  return !(y(e, t.nationalNumberPattern()) && !y(d, t.nationalNumberPattern()));\n}\nfunction ct(e, d) {\n  switch (X(e, d)) {\n    case \"TOO_SHORT\":\n    case \"INVALID_LENGTH\":\n      return !1;\n    default:\n      return !0;\n  }\n}\nfunction ht(e, d, t, n) {\n  var r = d ? z(d, n) : t;\n  if (e.indexOf(r) === 0) {\n    n = new l(n), n.selectNumberingPlan(d, t);\n    var i = e.slice(r.length),\n      a = H(i, n),\n      $ = a.nationalNumber,\n      u = H(e, n),\n      o = u.nationalNumber;\n    if (!y(o, n.nationalNumberPattern()) && y($, n.nationalNumberPattern()) || X(o, n) === \"TOO_LONG\") return {\n      countryCallingCode: r,\n      number: i\n    };\n  }\n  return {\n    number: e\n  };\n}\nfunction pt(e, d, t, n) {\n  if (!e) return {};\n  if (e[0] !== \"+\") {\n    var r = st(e, d, t, n);\n    if (r && r !== e) e = \"+\" + r;else {\n      if (d || t) {\n        var i = ht(e, d, t, n),\n          a = i.countryCallingCode,\n          $ = i.number;\n        if (a) return {\n          countryCallingCode: a,\n          number: $\n        };\n      }\n      return {\n        number: e\n      };\n    }\n  }\n  if (e[1] === \"0\") return {};\n  n = new l(n);\n  for (var u = 2; u - 1 <= nd && u <= e.length;) {\n    var o = e.slice(1, u);\n    if (n.hasCallingCode(o)) return n.selectNumberingPlan(o), {\n      countryCallingCode: o,\n      number: e.slice(u)\n    };\n    u++;\n  }\n  return {};\n}\nfunction yt(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t) return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = mt(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function () {\n      return n >= e.length ? {\n        done: !0\n      } : {\n        done: !1,\n        value: e[n++]\n      };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction mt(e, d) {\n  if (e) {\n    if (typeof e == \"string\") return ye(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\") return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)) return ye(e, d);\n  }\n}\nfunction ye(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++) n[t] = e[t];\n  return n;\n}\nvar gt = !1;\nfunction bt(e, d, t) {\n  if (gt && t.isNonGeographicCallingCode(e)) return \"001\";\n  var n = t.getCountryCodesForCallingCode(e);\n  if (n) return n.length === 1 ? n[0] : vt(n, d, t.metadata);\n}\nfunction vt(e, d, t) {\n  t = new l(t);\n  for (var n = yt(e), r; !(r = n()).done;) {\n    var i = r.value;\n    if (t.country(i), t.leadingDigits()) {\n      if (d && d.search(t.leadingDigits()) === 0) return i;\n    } else if (Y({\n      phone: d,\n      country: i\n    }, void 0, t.metadata)) return i;\n  }\n}\nvar Ct = 250,\n  Ot = new RegExp(\"[\" + W + g + \"]\"),\n  Pt = new RegExp(\"[^\" + g + \"#]+$\");\nfunction Nt(e, d, t) {\n  if (d = d || {}, t = new l(t), d.defaultCountry && !t.hasCountry(d.defaultCountry)) throw d.v2 ? new m(\"INVALID_COUNTRY\") : new Error(\"Unknown country: \".concat(d.defaultCountry));\n  var n = It(e, d.v2, d.extract),\n    r = n.number,\n    i = n.ext,\n    a = n.error;\n  if (!r) {\n    if (d.v2) throw a === \"TOO_SHORT\" ? new m(\"TOO_SHORT\") : new m(\"NOT_A_NUMBER\");\n    return {};\n  }\n  var $ = St(r, d.defaultCountry, d.defaultCallingCode, t),\n    u = $.country,\n    o = $.nationalNumber,\n    c = $.countryCallingCode,\n    f = $.carrierCode;\n  if (!t.hasSelectedNumberingPlan()) {\n    if (d.v2) throw new m(\"INVALID_COUNTRY\");\n    return {};\n  }\n  if (!o || o.length < K) {\n    if (d.v2) throw new m(\"TOO_SHORT\");\n    return {};\n  }\n  if (o.length > td) {\n    if (d.v2) throw new m(\"TOO_LONG\");\n    return {};\n  }\n  if (d.v2) {\n    var v = new at(c, o, t.metadata);\n    return u && (v.country = u), f && (v.carrierCode = f), i && (v.ext = i), v;\n  }\n  var P = (d.extended ? t.hasSelectedNumberingPlan() : u) ? y(o, t.nationalNumberPattern()) : !1;\n  return d.extended ? {\n    country: u,\n    countryCallingCode: c,\n    carrierCode: f,\n    valid: P,\n    possible: P ? !0 : !!(d.extended === !0 && t.possibleLengths() && Te(o, t)),\n    phone: o,\n    ext: i\n  } : P ? Et(u, o, i) : {};\n}\nfunction wt(e, d, t) {\n  if (e) {\n    if (e.length > Ct) {\n      if (t) throw new m(\"TOO_LONG\");\n      return;\n    }\n    if (d === !1) return e;\n    var n = e.search(Ot);\n    if (!(n < 0)) return e.slice(n).replace(Pt, \"\");\n  }\n}\nfunction It(e, d, t) {\n  if (e && e.indexOf(\"tel:\") === 0) return jd(e);\n  var n = wt(e, t, d);\n  if (!n) return {};\n  if (!Se(n)) return wd(n) ? {\n    error: \"TOO_SHORT\"\n  } : {};\n  var r = Id(n);\n  return r.ext ? r : {\n    number: n\n  };\n}\nfunction Et(e, d, t) {\n  var n = {\n    country: e,\n    phone: d\n  };\n  return t && (n.ext = t), n;\n}\nfunction St(e, d, t, n) {\n  var r = pt(ie(e), d, t, n.metadata),\n    i = r.countryCallingCode,\n    a = r.number,\n    $;\n  if (i) n.selectNumberingPlan(i);else if (a && (d || t)) n.selectNumberingPlan(d, t), d && ($ = d), i = t || z(d, n.metadata);else return {};\n  if (!a) return {\n    countryCallingCode: i\n  };\n  var u = H(ie(a), n),\n    o = u.nationalNumber,\n    c = u.carrierCode,\n    f = bt(i, o, n);\n  return f && ($ = f, f === \"001\" || n.country($)), {\n    country: $,\n    countryCallingCode: i,\n    nationalNumber: o,\n    carrierCode: c\n  };\n}\nfunction me(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction ge(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? me(Object(t), !0).forEach(function (n) {\n      _t(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : me(Object(t)).forEach(function (n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction _t(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[d] = t, e;\n}\nfunction Tt(e, d, t) {\n  return Nt(e, ge(ge({}, d), {}, {\n    v2: !0\n  }), t);\n}\nfunction V(e) {\n  return V = typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\" ? function (d) {\n    return typeof d;\n  } : function (d) {\n    return d && typeof Symbol == \"function\" && d.constructor === Symbol && d !== Symbol.prototype ? \"symbol\" : typeof d;\n  }, V(e);\n}\nfunction be(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction Ft(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? be(Object(t), !0).forEach(function (n) {\n      xt(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : be(Object(t)).forEach(function (n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction xt(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[d] = t, e;\n}\nfunction At(e, d) {\n  return Lt(e) || Mt(e, d) || Rt(e, d) || Dt();\n}\nfunction Dt() {\n  throw new TypeError(`Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction Rt(e, d) {\n  if (e) {\n    if (typeof e == \"string\") return ve(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\") return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)) return ve(e, d);\n  }\n}\nfunction ve(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++) n[t] = e[t];\n  return n;\n}\nfunction Mt(e, d) {\n  var t = e == null ? null : typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t != null) {\n    var n = [],\n      r = !0,\n      i = !1,\n      a,\n      $;\n    try {\n      for (t = t.call(e); !(r = (a = t.next()).done) && (n.push(a.value), !(d && n.length === d)); r = !0);\n    } catch (u) {\n      i = !0, $ = u;\n    } finally {\n      try {\n        !r && t.return != null && t.return();\n      } finally {\n        if (i) throw $;\n      }\n    }\n    return n;\n  }\n}\nfunction Lt(e) {\n  if (Array.isArray(e)) return e;\n}\nfunction kt(e) {\n  var d = Array.prototype.slice.call(e),\n    t = At(d, 4),\n    n = t[0],\n    r = t[1],\n    i = t[2],\n    a = t[3],\n    $,\n    u,\n    o;\n  if (typeof n == \"string\") $ = n;else throw new TypeError(\"A text for parsing must be a string.\");\n  if (!r || typeof r == \"string\") a ? (u = i, o = a) : (u = void 0, o = i), r && (u = Ft({\n    defaultCountry: r\n  }, u));else if (Bt(r)) i ? (u = r, o = i) : o = r;else throw new Error(\"Invalid second argument: \".concat(r));\n  return {\n    text: $,\n    options: u,\n    metadata: o\n  };\n}\nvar Bt = function (d) {\n  return V(d) === \"object\";\n};\nfunction Ce(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction Oe(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? Ce(Object(t), !0).forEach(function (n) {\n      Gt(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : Ce(Object(t)).forEach(function (n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction Gt(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[d] = t, e;\n}\nfunction jt(e, d, t) {\n  d && d.defaultCountry && !gd(d.defaultCountry, t) && (d = Oe(Oe({}, d), {}, {\n    defaultCountry: void 0\n  }));\n  try {\n    return Tt(e, d, t);\n  } catch (n) {\n    if (!(n instanceof m)) throw n;\n  }\n}\nfunction Ut() {\n  var e = kt(arguments),\n    d = e.text,\n    t = e.options,\n    n = e.metadata;\n  return jt(d, t, n);\n}\nfunction B() {\n  return Ye(Ut, arguments);\n}\nconst Ht = {\n  beforeMount(e, d, t) {\n    if (typeof d.value != \"function\") {\n      const n = t.context.name;\n      let r = `[Vue-click-outside:] provided expression ${d.expression} is not a function, but has to be`;\n      n && (r += `Found in component ${n}`), console.warn(r);\n    }\n    e.clickOutsideEvent = function (n) {\n      e === n.target || e.contains(n.target) || d.value(n, e);\n    }, document.body.addEventListener(\"click\", e.clickOutsideEvent);\n  },\n  unmounted(e) {\n    document.body.removeEventListener(\"click\", e.clickOutsideEvent);\n  }\n};\nconst Vt = (e, d) => {\n  const t = e.__vccOpts || e;\n  for (const [n, r] of d) t[n] = r;\n  return t;\n};\nfunction s(e) {\n  const d = G.options[e];\n  return typeof d > \"u\" ? G.options[e] : d;\n}\nconst Kt = {\n    name: \"VueTelInput\",\n    directives: {\n      clickOutside: Ht\n    },\n    props: {\n      modelValue: {\n        type: String,\n        default: \"\"\n      },\n      allCountries: {\n        type: Array,\n        default: () => s(\"allCountries\")\n      },\n      autoFormat: {\n        type: Boolean,\n        default: () => s(\"autoFormat\")\n      },\n      customValidate: {\n        type: [Boolean, RegExp],\n        default: () => s(\"customValidate\")\n      },\n      defaultCountry: {\n        // Default country code, ie: 'AU'\n        // Will override the current country of user\n        type: [String, Number],\n        default: () => s(\"defaultCountry\")\n      },\n      disabled: {\n        type: Boolean,\n        default: () => s(\"disabled\")\n      },\n      autoDefaultCountry: {\n        type: Boolean,\n        default: () => s(\"autoDefaultCountry\")\n      },\n      dropdownOptions: {\n        type: Object,\n        default: () => s(\"dropdownOptions\")\n      },\n      ignoredCountries: {\n        type: Array,\n        default: () => s(\"ignoredCountries\")\n      },\n      inputOptions: {\n        type: Object,\n        default: () => s(\"inputOptions\")\n      },\n      invalidMsg: {\n        type: String,\n        default: () => s(\"invalidMsg\")\n      },\n      mode: {\n        type: String,\n        default: () => s(\"mode\")\n      },\n      onlyCountries: {\n        type: Array,\n        default: () => s(\"onlyCountries\")\n      },\n      preferredCountries: {\n        type: Array,\n        default: () => s(\"preferredCountries\")\n      },\n      validCharactersOnly: {\n        type: Boolean,\n        default: () => s(\"validCharactersOnly\")\n      },\n      styleClasses: {\n        type: [String, Array, Object],\n        default: () => s(\"styleClasses\")\n      }\n    },\n    data() {\n      return {\n        phone: \"\",\n        activeCountryCode: \"\",\n        open: !1,\n        finishMounted: !1,\n        selectedIndex: null,\n        typeToFindInput: \"\",\n        typeToFindTimer: null,\n        dropdownOpenDirection: \"below\",\n        parsedPlaceholder: this.inputOptions.placeholder,\n        searchQuery: \"\"\n      };\n    },\n    computed: {\n      activeCountry() {\n        return this.findCountry(this.activeCountryCode);\n      },\n      parsedMode() {\n        return this.mode === \"auto\" ? !this.phone || this.phone[0] !== \"+\" ? \"national\" : \"international\" : [\"international\", \"national\"].includes(this.mode) ? this.mode : (console.error('Invalid value of prop \"mode\"'), \"international\");\n      },\n      filteredCountries() {\n        return this.onlyCountries.length ? this.allCountries.filter(({\n          iso2: e\n        }) => this.onlyCountries.some(d => d.toUpperCase() === e)) : this.ignoredCountries.length ? this.allCountries.filter(({\n          iso2: e\n        }) => !this.ignoredCountries.includes(e.toUpperCase()) && !this.ignoredCountries.includes(e.toLowerCase())) : this.allCountries;\n      },\n      sortedCountries() {\n        const d = [...this.getCountries(this.preferredCountries).map(t => ({\n          ...t,\n          preferred: !0\n        })), ...this.filteredCountries];\n        return this.dropdownOptions.showSearchBox ? d.filter(t => new RegExp(this.searchQuery, \"i\").test(t.name) || new RegExp(this.searchQuery, \"i\").test(t.iso2) || new RegExp(this.searchQuery, \"i\").test(t.dialCode)) : d;\n      },\n      phoneObject() {\n        var i, a, $;\n        let e;\n        ((i = this.phone) == null ? void 0 : i[0]) === \"+\" ? e = B(this.phone) || {} : e = B(this.phone, this.activeCountryCode) || {};\n        const {\n          metadata: d,\n          ...t\n        } = e;\n        let n = (a = e.isValid) == null ? void 0 : a.call(e),\n          r = this.phone;\n        return n && (r = ($ = e.format) == null ? void 0 : $.call(e, this.parsedMode.toUpperCase())), e.country && (this.ignoredCountries.length || this.onlyCountries.length) && (this.findCountry(e.country) || (n = !1, Object.assign(e, {\n          country: null\n        }))), Object.assign(t, {\n          countryCode: e.country,\n          valid: n,\n          country: this.activeCountry,\n          formatted: r\n        }), t;\n      }\n    },\n    watch: {\n      activeCountry(e, d) {\n        if (!e && d != null && d.iso2) {\n          this.activeCountryCode = d.iso2;\n          return;\n        }\n        e != null && e.iso2 && this.$emit(\"country-changed\", e);\n      },\n      \"phoneObject.countryCode\": function (e) {\n        this.activeCountryCode = e || \"\";\n      },\n      \"phoneObject.valid\": function () {\n        this.$emit(\"validate\", this.phoneObject);\n      },\n      \"phoneObject.formatted\": function (e) {\n        !this.autoFormat || this.customValidate || (this.emitInput(e), this.$nextTick(() => {\n          e && !this.modelValue && (this.phone = e);\n        }));\n      },\n      // finishMounted() {\n      //   this.resetPlaceholder();\n      // },\n      \"inputOptions.placeholder\": function () {\n        this.resetPlaceholder();\n      },\n      modelValue(e, d) {\n        this.testCharacters() ? this.phone = e : this.$nextTick(() => {\n          this.phone = d, this.onInput();\n        });\n      },\n      open(e) {\n        e ? (this.setDropdownPosition(), this.$emit(\"open\")) : this.$emit(\"close\");\n      }\n    },\n    mounted() {\n      this.modelValue && (this.phone = this.modelValue.trim()), this.cleanInvalidCharacters(), this.initializeCountry().then(() => {\n        var e;\n        !this.phone && (e = this.inputOptions) != null && e.showDialCode && this.activeCountryCode && (this.phone = `+${this.activeCountryCode}`), this.$emit(\"validate\", this.phoneObject);\n      }).catch(console.error).then(() => {\n        this.finishMounted = !0;\n      });\n    },\n    methods: {\n      resetPlaceholder() {\n        this.parsedPlaceholder = this.inputOptions.placeholder;\n      },\n      initializeCountry() {\n        return new Promise(e => {\n          var t;\n          if (((t = this.phone) == null ? void 0 : t[0]) === \"+\") {\n            e();\n            return;\n          }\n          if (this.defaultCountry) {\n            if (typeof this.defaultCountry == \"string\") {\n              this.choose(this.defaultCountry), e();\n              return;\n            }\n            if (typeof this.defaultCountry == \"number\") {\n              const n = this.findCountryByDialCode(this.defaultCountry);\n              if (n) {\n                this.choose(n.iso2), e();\n                return;\n              }\n            }\n          }\n          const d = this.preferredCountries[0] || this.filteredCountries[0];\n          this.autoDefaultCountry ? Ke().then(n => {\n            this.choose(n || this.activeCountryCode);\n          }).catch(n => {\n            console.warn(n), this.choose(d);\n          }).then(() => {\n            e();\n          }) : (this.choose(d), e());\n        });\n      },\n      /**\n       * Get the list of countries from the list of iso2 code\n       */\n      getCountries(e = []) {\n        return e.map(d => this.findCountry(d)).filter(Boolean);\n      },\n      findCountry(e = \"\") {\n        return this.filteredCountries.find(d => d.iso2 === e.toUpperCase());\n      },\n      findCountryByDialCode(e) {\n        return this.filteredCountries.find(d => Number(d.dialCode) === e);\n      },\n      getItemClass(e, d) {\n        const t = this.selectedIndex === e,\n          n = e === this.preferredCountries.length - 1,\n          r = this.preferredCountries.some(i => i.toUpperCase() === d);\n        return {\n          highlighted: t,\n          \"last-preferred\": n,\n          preferred: r\n        };\n      },\n      choose(e) {\n        var t, n;\n        let d = e;\n        if (typeof d == \"string\" && (d = this.findCountry(d)), !!d) {\n          if (((t = this.phone) == null ? void 0 : t[0]) === \"+\" && d.iso2 && this.phoneObject.nationalNumber) {\n            this.activeCountryCode = d.iso2, this.phone = B(this.phoneObject.nationalNumber, d.iso2).formatInternational();\n            return;\n          }\n          if ((n = this.inputOptions) != null && n.showDialCode && d) {\n            this.phone = `+${d.dialCode}`, this.activeCountryCode = d.iso2 || \"\";\n            return;\n          }\n          this.activeCountryCode = d.iso2 || \"\", this.emitInput(this.phone);\n        }\n      },\n      cleanInvalidCharacters() {\n        const e = this.phone;\n        if (this.validCharactersOnly) {\n          const d = this.phone.match(/[()\\-+0-9\\s]*/g);\n          this.phone = d.join(\"\");\n        }\n        if (this.customValidate && this.customValidate instanceof RegExp) {\n          const d = this.phone.match(this.customValidate);\n          this.phone = d.join(\"\");\n        }\n        e !== this.phone && this.emitInput(this.phone);\n      },\n      testCharacters() {\n        return this.validCharactersOnly && !/^[()\\-+0-9\\s]*$/.test(this.phone) ? !1 : this.customValidate ? this.testCustomValidate() : !0;\n      },\n      testCustomValidate() {\n        return this.customValidate instanceof RegExp ? this.customValidate.test(this.phone) : !1;\n      },\n      onInput() {\n        this.$refs.input.setCustomValidity(this.phoneObject.valid ? \"\" : this.invalidMsg), this.emitInput(this.phone);\n      },\n      emitInput(e) {\n        this.$emit(\"update:modelValue\", e), this.$emit(\"on-input\", e, this.phoneObject, this.$refs.input);\n      },\n      onBlur() {\n        this.$emit(\"blur\");\n      },\n      onFocus() {\n        We(this.$refs.input, this.phone.length), this.$emit(\"focus\");\n      },\n      onEnter() {\n        this.$emit(\"enter\");\n      },\n      onSpace() {\n        this.$emit(\"space\");\n      },\n      focus() {\n        this.$refs.input.focus();\n      },\n      toggleDropdown() {\n        this.disabled || this.dropdownOptions.disabled || (this.searchQuery = \"\", this.open = !this.open);\n      },\n      clickedOutside() {\n        this.open = !1;\n      },\n      keyboardNav(e) {\n        if (e.keyCode === 40) {\n          e.preventDefault(), this.open = !0, this.selectedIndex === null ? this.selectedIndex = 0 : this.selectedIndex = Math.min(this.sortedCountries.length - 1, this.selectedIndex + 1);\n          const d = this.$refs.list.children[this.selectedIndex];\n          d.focus(), d.offsetTop + d.clientHeight > this.$refs.list.scrollTop + this.$refs.list.clientHeight && (this.$refs.list.scrollTop = d.offsetTop - this.$refs.list.clientHeight + d.clientHeight);\n        } else if (e.keyCode === 38) {\n          e.preventDefault(), this.open = !0, this.selectedIndex === null ? this.selectedIndex = this.sortedCountries.length - 1 : this.selectedIndex = Math.max(0, this.selectedIndex - 1);\n          const d = this.$refs.list.children[this.selectedIndex];\n          d.focus(), d.offsetTop < this.$refs.list.scrollTop && (this.$refs.list.scrollTop = d.offsetTop);\n        } else if (e.keyCode === 13) this.selectedIndex !== null && this.choose(this.sortedCountries[this.selectedIndex]), this.open = !this.open;else {\n          this.typeToFindInput += e.key, clearTimeout(this.typeToFindTimer), this.typeToFindTimer = setTimeout(() => {\n            this.typeToFindInput = \"\";\n          }, 700);\n          const d = this.sortedCountries.slice(this.preferredCountries.length).findIndex(t => t.name.toLowerCase().startsWith(this.typeToFindInput));\n          if (d >= 0) {\n            this.selectedIndex = this.preferredCountries.length + d;\n            const t = this.$refs.list.children[this.selectedIndex],\n              n = t.offsetTop < this.$refs.list.scrollTop,\n              r = t.offsetTop + t.clientHeight > this.$refs.list.scrollTop + this.$refs.list.clientHeight;\n            (n || r) && (this.$refs.list.scrollTop = t.offsetTop - this.$refs.list.clientHeight / 2);\n          }\n        }\n      },\n      reset() {\n        this.selectedIndex = this.sortedCountries.map(e => e.iso2).indexOf(this.activeCountryCode), this.open = !1;\n      },\n      setDropdownPosition() {\n        window.innerHeight - this.$el.getBoundingClientRect().bottom > 200 ? this.dropdownOpenDirection = \"below\" : this.dropdownOpenDirection = \"above\";\n      }\n    }\n  },\n  Wt = [\"aria-expanded\", \"tabindex\"],\n  zt = {\n    class: \"vti__selection\"\n  },\n  Xt = {\n    key: 1,\n    class: \"vti__country-code\"\n  },\n  Yt = {\n    class: \"vti__dropdown-arrow\"\n  },\n  Zt = [\"placeholder\"],\n  Jt = [\"onClick\", \"onMousemove\", \"aria-selected\"],\n  qt = {\n    key: 1\n  },\n  Qt = [\"type\", \"autocomplete\", \"autofocus\", \"disabled\", \"id\", \"maxlength\", \"name\", \"placeholder\", \"readonly\", \"required\", \"tabindex\", \"value\", \"aria-describedby\"];\nfunction e1(e, d, t, n, r, i) {\n  const a = Le(\"click-outside\");\n  return h(), p(\"div\", {\n    class: b([\"vue-tel-input\", t.styleClasses, {\n      disabled: t.disabled\n    }])\n  }, [R((h(), p(\"div\", {\n    \"aria-label\": \"Country Code Selector\",\n    \"aria-haspopup\": \"listbox\",\n    \"aria-expanded\": r.open,\n    role: \"button\",\n    class: b([\"vti__dropdown\", {\n      open: r.open,\n      disabled: t.dropdownOptions.disabled\n    }]),\n    tabindex: t.dropdownOptions.tabindex,\n    onKeydown: [d[2] || (d[2] = (...$) => i.keyboardNav && i.keyboardNav(...$)), d[4] || (d[4] = N((...$) => i.toggleDropdown && i.toggleDropdown(...$), [\"space\"])), d[5] || (d[5] = N((...$) => i.reset && i.reset(...$), [\"esc\"])), d[6] || (d[6] = N((...$) => i.reset && i.reset(...$), [\"tab\"]))],\n    onClick: d[3] || (d[3] = (...$) => i.toggleDropdown && i.toggleDropdown(...$))\n  }, [E(\"span\", zt, [t.dropdownOptions.showFlags ? (h(), p(\"span\", {\n    key: 0,\n    class: b([\"vti__flag\", r.activeCountryCode.toLowerCase()])\n  }, null, 2)) : C(\"\", !0), t.dropdownOptions.showDialCodeInSelection ? (h(), p(\"span\", Xt, \" +\" + S(i.activeCountry && i.activeCountry.dialCode), 1)) : C(\"\", !0), Z(e.$slots, \"arrow-icon\", {\n    open: r.open\n  }, () => [E(\"span\", Yt, S(r.open ? \"▲\" : \"▼\"), 1)])]), r.open ? (h(), p(\"ul\", {\n    key: 0,\n    ref: \"list\",\n    class: b([\"vti__dropdown-list\", r.dropdownOpenDirection]),\n    role: \"listbox\"\n  }, [t.dropdownOptions.showSearchBox ? R((h(), p(\"input\", {\n    key: 0,\n    class: \"vti__input vti__search_box\",\n    \"aria-label\": \"Search by country name or country code\",\n    placeholder: i.sortedCountries.length ? i.sortedCountries[0].name : \"\",\n    type: \"text\",\n    \"onUpdate:modelValue\": d[0] || (d[0] = $ => r.searchQuery = $),\n    onClick: d[1] || (d[1] = ke(() => {}, [\"stop\"]))\n  }, null, 8, Zt)), [[Be, r.searchQuery]]) : C(\"\", !0), (h(!0), p(Ge, null, je(i.sortedCountries, ($, u) => (h(), p(\"li\", {\n    role: \"option\",\n    class: b([\"vti__dropdown-item\", i.getItemClass(u, $.iso2)]),\n    key: $.iso2 + ($.preferred ? \"-preferred\" : \"\"),\n    tabindex: \"-1\",\n    onClick: o => i.choose($),\n    onMousemove: o => r.selectedIndex = u,\n    \"aria-selected\": r.activeCountryCode === $.iso2 && !$.preferred\n  }, [t.dropdownOptions.showFlags ? (h(), p(\"span\", {\n    key: 0,\n    class: b([\"vti__flag\", $.iso2.toLowerCase()])\n  }, null, 2)) : C(\"\", !0), E(\"strong\", null, S($.name), 1), t.dropdownOptions.showDialCodeInList ? (h(), p(\"span\", qt, \" +\" + S($.dialCode), 1)) : C(\"\", !0)], 42, Jt))), 128))], 2)) : C(\"\", !0)], 42, Wt)), [[a, i.clickedOutside]]), R(E(\"input\", {\n    \"onUpdate:modelValue\": d[7] || (d[7] = $ => r.phone = $),\n    ref: \"input\",\n    type: t.inputOptions.type,\n    autocomplete: t.inputOptions.autocomplete,\n    autofocus: t.inputOptions.autofocus,\n    class: b([\"vti__input\", t.inputOptions.styleClasses]),\n    disabled: t.disabled,\n    id: t.inputOptions.id,\n    maxlength: t.inputOptions.maxlength,\n    name: t.inputOptions.name,\n    placeholder: r.parsedPlaceholder,\n    readonly: t.inputOptions.readonly,\n    required: t.inputOptions.required,\n    tabindex: t.inputOptions.tabindex,\n    value: t.modelValue,\n    \"aria-describedby\": t.inputOptions[\"aria-describedby\"],\n    onBlur: d[8] || (d[8] = (...$) => i.onBlur && i.onBlur(...$)),\n    onFocus: d[9] || (d[9] = (...$) => i.onFocus && i.onFocus(...$)),\n    onInput: d[10] || (d[10] = (...$) => i.onInput && i.onInput(...$)),\n    onKeyup: [d[11] || (d[11] = N((...$) => i.onEnter && i.onEnter(...$), [\"enter\"])), d[12] || (d[12] = N((...$) => i.onSpace && i.onSpace(...$), [\"space\"]))]\n  }, null, 42, Qt), [[Ue, r.phone]]), Z(e.$slots, \"icon-right\")], 2);\n}\nconst d1 = /* @__PURE__ */Vt(Kt, [[\"render\", e1]]),\n  n1 = {\n    install(e, d = {}) {\n      const {\n          dropdownOptions: t,\n          inputOptions: n,\n          ...r\n        } = d,\n        {\n          dropdownOptions: i,\n          inputOptions: a,\n          ...$\n        } = Pe;\n      G.options = {\n        inputOptions: {\n          ...a,\n          ...n\n        },\n        dropdownOptions: {\n          ...i,\n          ...t\n        },\n        ...$,\n        ...r\n      }, e.component(\"vue-tel-input\", d1);\n    }\n  };\nexport { d1 as VueTelInput, n1 as default };","map":{"version":3,"names":["resolveDirective","Le","openBlock","h","createElementBlock","p","normalizeClass","b","withDirectives","R","withKeys","N","createElementVNode","E","createCommentVNode","C","toDisplayString","S","renderSlot","Z","withModifiers","ke","vModelText","Be","Fragment","Ge","renderList","je","vModelDynamic","Ue","He","Ve","map","e","d","t","name","iso2","toUpperCase","dialCode","Ke","fetch","then","text","toString","Error","substr","We","setSelectionRange","focus","createTextRange","collapse","moveEnd","moveStart","select","ze","type","Array","default","description","inDemo","Boolean","RegExp","String","Number","Object","options","Pe","reduce","includes","n","split","assign","G","Xe","version","country_calling_codes","countries","AC","AD","AE","AF","AG","AI","AL","AM","AO","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GT","GU","GW","GY","HK","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TA","TC","TD","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XK","YE","YT","ZA","ZM","ZW","nonGeographic","Ye","prototype","slice","call","push","apply","j","Symbol","iterator","constructor","J","length","enumerable","configurable","writable","defineProperty","key","Ze","Je","TypeError","qe","create","value","w","Qe","we","I","r","i","Reflect","construct","arguments","ed","Ne","ReferenceError","U","Map","dd","has","get","set","_","a","$","u","Function","bind","o","sham","Proxy","valueOf","indexOf","setPrototypeOf","__proto__","getPrototypeOf","m","K","td","nd","g","rd","id","$d","ad","od","ud","T","concat","W","q","isNaN","F","A","Q","D","sd","ld","ee","fd","l","yd","metadata","Ie","keys","filter","v1","v2","v3","nonGeographical","getCountryMetadata","getCountryCodesForCallingCode","countryCallingCodes","selectNumberingPlan","test","hasCountry","numberingPlan","de","hasCallingCode","getNumberingPlanMetadata","getCountryCodeForCallingCode","callingCode","IDDPrefix","defaultIDDPrefix","nationalNumberPattern","possibleLengths","formats","nationalPrefixForParsing","nationalPrefixTransformRule","leadingDigits","hasTypes","ext","country_phone_code_to_countries","globalMetadataObject","_getFormats","getDefaultCountryMetadataForRegion","cd","_getNationalPrefixFormattingRule","_nationalPrefixForParsing","nationalPrefix","_getNationalPrefixIsOptionalWhenFormatting","types","te","pd","_format","nationalPrefixFormattingRule","nationalPrefixIsOptionalWhenFormattingInNationalFormat","usesNationalPrefix","hd","format","M","join","md","z","country","countryCallingCode","gd","v4","bd","O","Ee","c","f","v","P","xe","Ae","De","Re","Me","vd","Cd","Od","Pd","Nd","Se","wd","ne","Id","search","match","number","Ed","Sd","_d","next","isArray","Td","done","re","from","ie","Fd","xd","Ad","$e","Dd","sort","X","_e","Rd","phone","Te","nationalNumber","isNonGeographicCallingCode","Md","Bd","kd","Fe","Ld","return","Gd","ae","jd","replace","Ud","y","Hd","Vd","oe","Kd","Y","L","pattern","Wd","zd","trim","Xd","Yd","useInternationalFormat","withNationalPrefix","carrierCode","internationalFormat","Zd","Jd","qd","Qd","ue","se","getOwnPropertySymbols","getOwnPropertyDescriptor","le","forEach","et","getOwnPropertyDescriptors","defineProperties","fe","formatExtension","dt","x","k","fromCountry","nt","tt","leadingDigitsPatterns","ce","he","rt","it","pe","$t","at","ot","ut","st","lt","exec","H","ft","ct","ht","pt","yt","mt","ye","gt","bt","vt","Ct","Ot","Pt","Nt","defaultCountry","It","extract","error","St","defaultCallingCode","hasSelectedNumberingPlan","extended","valid","possible","Et","wt","me","ge","_t","Tt","V","be","Ft","xt","At","Lt","Mt","Rt","Dt","ve","kt","Bt","Ce","Oe","Gt","jt","Ut","B","Ht","beforeMount","context","expression","console","warn","clickOutsideEvent","target","contains","document","body","addEventListener","unmounted","removeEventListener","Vt","__vccOpts","s","Kt","directives","clickOutside","props","modelValue","allCountries","autoFormat","customValidate","disabled","autoDefaultCountry","dropdownOptions","ignoredCountries","inputOptions","invalidMsg","mode","onlyCountries","preferredCountries","validCharactersOnly","styleClasses","data","activeCountryCode","open","finishMounted","selectedIndex","typeToFindInput","typeToFindTimer","dropdownOpenDirection","parsedPlaceholder","placeholder","searchQuery","computed","activeCountry","findCountry","parsedMode","filteredCountries","some","toLowerCase","sortedCountries","getCountries","preferred","showSearchBox","phoneObject","isValid","countryCode","formatted","watch","$emit","phoneObject.countryCode","phoneObject.valid","phoneObject.formatted","emitInput","$nextTick","inputOptions.placeholder","resetPlaceholder","testCharacters","onInput","setDropdownPosition","mounted","cleanInvalidCharacters","initializeCountry","showDialCode","catch","methods","Promise","choose","findCountryByDialCode","find","getItemClass","highlighted","formatInternational","testCustomValidate","$refs","input","setCustomValidity","onBlur","onFocus","onEnter","onSpace","toggleDropdown","clickedOutside","keyboardNav","keyCode","preventDefault","Math","min","list","children","offsetTop","clientHeight","scrollTop","max","clearTimeout","setTimeout","findIndex","startsWith","reset","window","innerHeight","$el","getBoundingClientRect","bottom","Wt","zt","class","Xt","Yt","Zt","Jt","qt","Qt","e1","role","tabindex","onKeydown","onClick","showFlags","showDialCodeInSelection","$slots","ref","onMousemove","showDialCodeInList","autocomplete","autofocus","maxlength","readonly","required","onKeyup","d1","n1","install","component","VueTelInput"],"sources":["/Users/air/Documents/crm-front/node_modules/vue-tel-input/dist/vue-tel-input.js"],"sourcesContent":["import { resolveDirective as Le, openBlock as h, createElementBlock as p, normalizeClass as b, withDirectives as R, withKeys as N, createElementVNode as E, createCommentVNode as C, toDisplayString as S, renderSlot as Z, withModifiers as ke, vModelText as Be, Fragment as Ge, renderList as je, vModelDynamic as Ue } from \"vue\";\nconst He = [\n  [\n    \"Afghanistan (‫افغانستان‬‎)\",\n    \"af\",\n    \"93\"\n  ],\n  [\n    \"Albania (Shqipëri)\",\n    \"al\",\n    \"355\"\n  ],\n  [\n    \"Algeria (‫الجزائر‬‎)\",\n    \"dz\",\n    \"213\"\n  ],\n  [\n    \"American Samoa\",\n    \"as\",\n    \"1684\"\n  ],\n  [\n    \"Andorra\",\n    \"ad\",\n    \"376\"\n  ],\n  [\n    \"Angola\",\n    \"ao\",\n    \"244\"\n  ],\n  [\n    \"Anguilla\",\n    \"ai\",\n    \"1264\"\n  ],\n  [\n    \"Antigua and Barbuda\",\n    \"ag\",\n    \"1268\"\n  ],\n  [\n    \"Argentina\",\n    \"ar\",\n    \"54\"\n  ],\n  [\n    \"Armenia (Հայաստան)\",\n    \"am\",\n    \"374\"\n  ],\n  [\n    \"Aruba\",\n    \"aw\",\n    \"297\"\n  ],\n  [\n    \"Australia\",\n    \"au\",\n    \"61\"\n  ],\n  [\n    \"Austria (Österreich)\",\n    \"at\",\n    \"43\"\n  ],\n  [\n    \"Azerbaijan (Azərbaycan)\",\n    \"az\",\n    \"994\"\n  ],\n  [\n    \"Bahamas\",\n    \"bs\",\n    \"1242\"\n  ],\n  [\n    \"Bahrain (‫البحرين‬‎)\",\n    \"bh\",\n    \"973\"\n  ],\n  [\n    \"Bangladesh (বাংলাদেশ)\",\n    \"bd\",\n    \"880\"\n  ],\n  [\n    \"Barbados\",\n    \"bb\",\n    \"1246\"\n  ],\n  [\n    \"Belarus (Беларусь)\",\n    \"by\",\n    \"375\"\n  ],\n  [\n    \"Belgium (België)\",\n    \"be\",\n    \"32\"\n  ],\n  [\n    \"Belize\",\n    \"bz\",\n    \"501\"\n  ],\n  [\n    \"Benin (Bénin)\",\n    \"bj\",\n    \"229\"\n  ],\n  [\n    \"Bermuda\",\n    \"bm\",\n    \"1441\"\n  ],\n  [\n    \"Bhutan (འབྲུག)\",\n    \"bt\",\n    \"975\"\n  ],\n  [\n    \"Bolivia\",\n    \"bo\",\n    \"591\"\n  ],\n  [\n    \"Bosnia and Herzegovina (Босна и Херцеговина)\",\n    \"ba\",\n    \"387\"\n  ],\n  [\n    \"Botswana\",\n    \"bw\",\n    \"267\"\n  ],\n  [\n    \"Brazil (Brasil)\",\n    \"br\",\n    \"55\"\n  ],\n  [\n    \"British Indian Ocean Territory\",\n    \"io\",\n    \"246\"\n  ],\n  [\n    \"British Virgin Islands\",\n    \"vg\",\n    \"1284\"\n  ],\n  [\n    \"Brunei\",\n    \"bn\",\n    \"673\"\n  ],\n  [\n    \"Bulgaria (България)\",\n    \"bg\",\n    \"359\"\n  ],\n  [\n    \"Burkina Faso\",\n    \"bf\",\n    \"226\"\n  ],\n  [\n    \"Burundi (Uburundi)\",\n    \"bi\",\n    \"257\"\n  ],\n  [\n    \"Cambodia (កម្ពុជា)\",\n    \"kh\",\n    \"855\"\n  ],\n  [\n    \"Cameroon (Cameroun)\",\n    \"cm\",\n    \"237\"\n  ],\n  [\n    \"Canada\",\n    \"ca\",\n    \"1\"\n  ],\n  [\n    \"Cape Verde (Kabu Verdi)\",\n    \"cv\",\n    \"238\"\n  ],\n  [\n    \"Caribbean Netherlands\",\n    \"bq\",\n    \"599\"\n  ],\n  [\n    \"Cayman Islands\",\n    \"ky\",\n    \"1345\"\n  ],\n  [\n    \"Central African Republic (République centrafricaine)\",\n    \"cf\",\n    \"236\"\n  ],\n  [\n    \"Chad (Tchad)\",\n    \"td\",\n    \"235\"\n  ],\n  [\n    \"Chile\",\n    \"cl\",\n    \"56\"\n  ],\n  [\n    \"China (中国)\",\n    \"cn\",\n    \"86\"\n  ],\n  [\n    \"Christmas Island\",\n    \"cx\",\n    \"61\"\n  ],\n  [\n    \"Cocos (Keeling) Islands\",\n    \"cc\",\n    \"61\"\n  ],\n  [\n    \"Colombia\",\n    \"co\",\n    \"57\"\n  ],\n  [\n    \"Comoros (‫جزر القمر‬‎)\",\n    \"km\",\n    \"269\"\n  ],\n  [\n    \"Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)\",\n    \"cd\",\n    \"243\"\n  ],\n  [\n    \"Congo (Republic) (Congo-Brazzaville)\",\n    \"cg\",\n    \"242\"\n  ],\n  [\n    \"Cook Islands\",\n    \"ck\",\n    \"682\"\n  ],\n  [\n    \"Costa Rica\",\n    \"cr\",\n    \"506\"\n  ],\n  [\n    \"Côte d’Ivoire\",\n    \"ci\",\n    \"225\"\n  ],\n  [\n    \"Croatia (Hrvatska)\",\n    \"hr\",\n    \"385\"\n  ],\n  [\n    \"Cuba\",\n    \"cu\",\n    \"53\"\n  ],\n  [\n    \"Curaçao\",\n    \"cw\",\n    \"599\"\n  ],\n  [\n    \"Cyprus (Κύπρος)\",\n    \"cy\",\n    \"357\"\n  ],\n  [\n    \"Czech Republic (Česká republika)\",\n    \"cz\",\n    \"420\"\n  ],\n  [\n    \"Denmark (Danmark)\",\n    \"dk\",\n    \"45\"\n  ],\n  [\n    \"Djibouti\",\n    \"dj\",\n    \"253\"\n  ],\n  [\n    \"Dominica\",\n    \"dm\",\n    \"1767\"\n  ],\n  [\n    \"Dominican Republic (República Dominicana)\",\n    \"do\",\n    \"1\"\n  ],\n  [\n    \"Ecuador\",\n    \"ec\",\n    \"593\"\n  ],\n  [\n    \"Egypt (‫مصر‬‎)\",\n    \"eg\",\n    \"20\"\n  ],\n  [\n    \"El Salvador\",\n    \"sv\",\n    \"503\"\n  ],\n  [\n    \"Equatorial Guinea (Guinea Ecuatorial)\",\n    \"gq\",\n    \"240\"\n  ],\n  [\n    \"Eritrea\",\n    \"er\",\n    \"291\"\n  ],\n  [\n    \"Estonia (Eesti)\",\n    \"ee\",\n    \"372\"\n  ],\n  [\n    \"Ethiopia\",\n    \"et\",\n    \"251\"\n  ],\n  [\n    \"Falkland Islands (Islas Malvinas)\",\n    \"fk\",\n    \"500\"\n  ],\n  [\n    \"Faroe Islands (Føroyar)\",\n    \"fo\",\n    \"298\"\n  ],\n  [\n    \"Fiji\",\n    \"fj\",\n    \"679\"\n  ],\n  [\n    \"Finland (Suomi)\",\n    \"fi\",\n    \"358\"\n  ],\n  [\n    \"France\",\n    \"fr\",\n    \"33\"\n  ],\n  [\n    \"French Guiana (Guyane française)\",\n    \"gf\",\n    \"594\"\n  ],\n  [\n    \"French Polynesia (Polynésie française)\",\n    \"pf\",\n    \"689\"\n  ],\n  [\n    \"Gabon\",\n    \"ga\",\n    \"241\"\n  ],\n  [\n    \"Gambia\",\n    \"gm\",\n    \"220\"\n  ],\n  [\n    \"Georgia (საქართველო)\",\n    \"ge\",\n    \"995\"\n  ],\n  [\n    \"Germany (Deutschland)\",\n    \"de\",\n    \"49\"\n  ],\n  [\n    \"Ghana (Gaana)\",\n    \"gh\",\n    \"233\"\n  ],\n  [\n    \"Gibraltar\",\n    \"gi\",\n    \"350\"\n  ],\n  [\n    \"Greece (Ελλάδα)\",\n    \"gr\",\n    \"30\"\n  ],\n  [\n    \"Greenland (Kalaallit Nunaat)\",\n    \"gl\",\n    \"299\"\n  ],\n  [\n    \"Grenada\",\n    \"gd\",\n    \"1473\"\n  ],\n  [\n    \"Guadeloupe\",\n    \"gp\",\n    \"590\"\n  ],\n  [\n    \"Guam\",\n    \"gu\",\n    \"1671\"\n  ],\n  [\n    \"Guatemala\",\n    \"gt\",\n    \"502\"\n  ],\n  [\n    \"Guernsey\",\n    \"gg\",\n    \"44\",\n    1\n  ],\n  [\n    \"Guinea (Guinée)\",\n    \"gn\",\n    \"224\"\n  ],\n  [\n    \"Guinea-Bissau (Guiné Bissau)\",\n    \"gw\",\n    \"245\"\n  ],\n  [\n    \"Guyana\",\n    \"gy\",\n    \"592\"\n  ],\n  [\n    \"Haiti\",\n    \"ht\",\n    \"509\"\n  ],\n  [\n    \"Honduras\",\n    \"hn\",\n    \"504\"\n  ],\n  [\n    \"Hong Kong (香港)\",\n    \"hk\",\n    \"852\"\n  ],\n  [\n    \"Hungary (Magyarország)\",\n    \"hu\",\n    \"36\"\n  ],\n  [\n    \"Iceland (Ísland)\",\n    \"is\",\n    \"354\"\n  ],\n  [\n    \"India (भारत)\",\n    \"in\",\n    \"91\"\n  ],\n  [\n    \"Indonesia\",\n    \"id\",\n    \"62\"\n  ],\n  [\n    \"Iran (‫ایران‬‎)\",\n    \"ir\",\n    \"98\"\n  ],\n  [\n    \"Iraq (‫العراق‬‎)\",\n    \"iq\",\n    \"964\"\n  ],\n  [\n    \"Ireland\",\n    \"ie\",\n    \"353\"\n  ],\n  [\n    \"Isle of Man\",\n    \"im\",\n    \"44\"\n  ],\n  [\n    \"Israel (‫ישראל‬‎)\",\n    \"il\",\n    \"972\"\n  ],\n  [\n    \"Italy (Italia)\",\n    \"it\",\n    \"39\"\n  ],\n  [\n    \"Jamaica\",\n    \"jm\",\n    \"1876\"\n  ],\n  [\n    \"Japan (日本)\",\n    \"jp\",\n    \"81\"\n  ],\n  [\n    \"Jersey\",\n    \"je\",\n    \"44\"\n  ],\n  [\n    \"Jordan (‫الأردن‬‎)\",\n    \"jo\",\n    \"962\"\n  ],\n  [\n    \"Kazakhstan (Казахстан)\",\n    \"kz\",\n    \"7\"\n  ],\n  [\n    \"Kenya\",\n    \"ke\",\n    \"254\"\n  ],\n  [\n    \"Kiribati\",\n    \"ki\",\n    \"686\"\n  ],\n  [\n    \"Kosovo\",\n    \"xk\",\n    \"383\"\n  ],\n  [\n    \"Kuwait (‫الكويت‬‎)\",\n    \"kw\",\n    \"965\"\n  ],\n  [\n    \"Kyrgyzstan (Кыргызстан)\",\n    \"kg\",\n    \"996\"\n  ],\n  [\n    \"Laos (ລາວ)\",\n    \"la\",\n    \"856\"\n  ],\n  [\n    \"Latvia (Latvija)\",\n    \"lv\",\n    \"371\"\n  ],\n  [\n    \"Lebanon (‫لبنان‬‎)\",\n    \"lb\",\n    \"961\"\n  ],\n  [\n    \"Lesotho\",\n    \"ls\",\n    \"266\"\n  ],\n  [\n    \"Liberia\",\n    \"lr\",\n    \"231\"\n  ],\n  [\n    \"Libya (‫ليبيا‬‎)\",\n    \"ly\",\n    \"218\"\n  ],\n  [\n    \"Liechtenstein\",\n    \"li\",\n    \"423\"\n  ],\n  [\n    \"Lithuania (Lietuva)\",\n    \"lt\",\n    \"370\"\n  ],\n  [\n    \"Luxembourg\",\n    \"lu\",\n    \"352\"\n  ],\n  [\n    \"Macau (澳門)\",\n    \"mo\",\n    \"853\"\n  ],\n  [\n    \"Macedonia (FYROM) (Македонија)\",\n    \"mk\",\n    \"389\"\n  ],\n  [\n    \"Madagascar (Madagasikara)\",\n    \"mg\",\n    \"261\"\n  ],\n  [\n    \"Malawi\",\n    \"mw\",\n    \"265\"\n  ],\n  [\n    \"Malaysia\",\n    \"my\",\n    \"60\"\n  ],\n  [\n    \"Maldives\",\n    \"mv\",\n    \"960\"\n  ],\n  [\n    \"Mali\",\n    \"ml\",\n    \"223\"\n  ],\n  [\n    \"Malta\",\n    \"mt\",\n    \"356\"\n  ],\n  [\n    \"Marshall Islands\",\n    \"mh\",\n    \"692\"\n  ],\n  [\n    \"Martinique\",\n    \"mq\",\n    \"596\"\n  ],\n  [\n    \"Mauritania (‫موريتانيا‬‎)\",\n    \"mr\",\n    \"222\"\n  ],\n  [\n    \"Mauritius (Moris)\",\n    \"mu\",\n    \"230\"\n  ],\n  [\n    \"Mayotte\",\n    \"yt\",\n    \"262\"\n  ],\n  [\n    \"Mexico (México)\",\n    \"mx\",\n    \"52\"\n  ],\n  [\n    \"Micronesia\",\n    \"fm\",\n    \"691\"\n  ],\n  [\n    \"Moldova (Republica Moldova)\",\n    \"md\",\n    \"373\"\n  ],\n  [\n    \"Monaco\",\n    \"mc\",\n    \"377\"\n  ],\n  [\n    \"Mongolia (Монгол)\",\n    \"mn\",\n    \"976\"\n  ],\n  [\n    \"Montenegro (Crna Gora)\",\n    \"me\",\n    \"382\"\n  ],\n  [\n    \"Montserrat\",\n    \"ms\",\n    \"1664\"\n  ],\n  [\n    \"Morocco (‫المغرب‬‎)\",\n    \"ma\",\n    \"212\"\n  ],\n  [\n    \"Mozambique (Moçambique)\",\n    \"mz\",\n    \"258\"\n  ],\n  [\n    \"Myanmar (Burma) (မြန်မာ)\",\n    \"mm\",\n    \"95\"\n  ],\n  [\n    \"Namibia (Namibië)\",\n    \"na\",\n    \"264\"\n  ],\n  [\n    \"Nauru\",\n    \"nr\",\n    \"674\"\n  ],\n  [\n    \"Nepal (नेपाल)\",\n    \"np\",\n    \"977\"\n  ],\n  [\n    \"Netherlands (Nederland)\",\n    \"nl\",\n    \"31\"\n  ],\n  [\n    \"New Caledonia (Nouvelle-Calédonie)\",\n    \"nc\",\n    \"687\"\n  ],\n  [\n    \"New Zealand\",\n    \"nz\",\n    \"64\"\n  ],\n  [\n    \"Nicaragua\",\n    \"ni\",\n    \"505\"\n  ],\n  [\n    \"Niger (Nijar)\",\n    \"ne\",\n    \"227\"\n  ],\n  [\n    \"Nigeria\",\n    \"ng\",\n    \"234\"\n  ],\n  [\n    \"Niue\",\n    \"nu\",\n    \"683\"\n  ],\n  [\n    \"Norfolk Island\",\n    \"nf\",\n    \"672\"\n  ],\n  [\n    \"North Korea (조선 민주주의 인민 공화국)\",\n    \"kp\",\n    \"850\"\n  ],\n  [\n    \"Northern Mariana Islands\",\n    \"mp\",\n    \"1670\"\n  ],\n  [\n    \"Norway (Norge)\",\n    \"no\",\n    \"47\"\n  ],\n  [\n    \"Oman (‫عُمان‬‎)\",\n    \"om\",\n    \"968\"\n  ],\n  [\n    \"Pakistan (‫پاکستان‬‎)\",\n    \"pk\",\n    \"92\"\n  ],\n  [\n    \"Palau\",\n    \"pw\",\n    \"680\"\n  ],\n  [\n    \"Palestine (‫فلسطين‬‎)\",\n    \"ps\",\n    \"970\"\n  ],\n  [\n    \"Panama (Panamá)\",\n    \"pa\",\n    \"507\"\n  ],\n  [\n    \"Papua New Guinea\",\n    \"pg\",\n    \"675\"\n  ],\n  [\n    \"Paraguay\",\n    \"py\",\n    \"595\"\n  ],\n  [\n    \"Peru (Perú)\",\n    \"pe\",\n    \"51\"\n  ],\n  [\n    \"Philippines\",\n    \"ph\",\n    \"63\"\n  ],\n  [\n    \"Poland (Polska)\",\n    \"pl\",\n    \"48\"\n  ],\n  [\n    \"Portugal\",\n    \"pt\",\n    \"351\"\n  ],\n  [\n    \"Puerto Rico\",\n    \"pr\",\n    \"1\"\n  ],\n  [\n    \"Qatar (‫قطر‬‎)\",\n    \"qa\",\n    \"974\"\n  ],\n  [\n    \"Réunion (La Réunion)\",\n    \"re\",\n    \"262\"\n  ],\n  [\n    \"Romania (România)\",\n    \"ro\",\n    \"40\"\n  ],\n  [\n    \"Russia (Россия)\",\n    \"ru\",\n    \"7\"\n  ],\n  [\n    \"Rwanda\",\n    \"rw\",\n    \"250\"\n  ],\n  [\n    \"Saint Barthélemy\",\n    \"bl\",\n    \"590\"\n  ],\n  [\n    \"Saint Helena\",\n    \"sh\",\n    \"290\"\n  ],\n  [\n    \"Saint Kitts and Nevis\",\n    \"kn\",\n    \"1869\"\n  ],\n  [\n    \"Saint Lucia\",\n    \"lc\",\n    \"1758\"\n  ],\n  [\n    \"Saint Martin (Saint-Martin (partie française))\",\n    \"mf\",\n    \"590\"\n  ],\n  [\n    \"Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)\",\n    \"pm\",\n    \"508\"\n  ],\n  [\n    \"Saint Vincent and the Grenadines\",\n    \"vc\",\n    \"1784\"\n  ],\n  [\n    \"Samoa\",\n    \"ws\",\n    \"685\"\n  ],\n  [\n    \"San Marino\",\n    \"sm\",\n    \"378\"\n  ],\n  [\n    \"São Tomé and Príncipe (São Tomé e Príncipe)\",\n    \"st\",\n    \"239\"\n  ],\n  [\n    \"Saudi Arabia (‫المملكة العربية السعودية‬‎)\",\n    \"sa\",\n    \"966\"\n  ],\n  [\n    \"Senegal (Sénégal)\",\n    \"sn\",\n    \"221\"\n  ],\n  [\n    \"Serbia (Србија)\",\n    \"rs\",\n    \"381\"\n  ],\n  [\n    \"Seychelles\",\n    \"sc\",\n    \"248\"\n  ],\n  [\n    \"Sierra Leone\",\n    \"sl\",\n    \"232\"\n  ],\n  [\n    \"Singapore\",\n    \"sg\",\n    \"65\"\n  ],\n  [\n    \"Sint Maarten\",\n    \"sx\",\n    \"1721\"\n  ],\n  [\n    \"Slovakia (Slovensko)\",\n    \"sk\",\n    \"421\"\n  ],\n  [\n    \"Slovenia (Slovenija)\",\n    \"si\",\n    \"386\"\n  ],\n  [\n    \"Solomon Islands\",\n    \"sb\",\n    \"677\"\n  ],\n  [\n    \"Somalia (Soomaaliya)\",\n    \"so\",\n    \"252\"\n  ],\n  [\n    \"South Africa\",\n    \"za\",\n    \"27\"\n  ],\n  [\n    \"South Korea (대한민국)\",\n    \"kr\",\n    \"82\"\n  ],\n  [\n    \"South Sudan (‫جنوب السودان‬‎)\",\n    \"ss\",\n    \"211\"\n  ],\n  [\n    \"Spain (España)\",\n    \"es\",\n    \"34\"\n  ],\n  [\n    \"Sri Lanka (ශ්‍රී ලංකාව)\",\n    \"lk\",\n    \"94\"\n  ],\n  [\n    \"Sudan (‫السودان‬‎)\",\n    \"sd\",\n    \"249\"\n  ],\n  [\n    \"Suriname\",\n    \"sr\",\n    \"597\"\n  ],\n  [\n    \"Svalbard and Jan Mayen\",\n    \"sj\",\n    \"47\"\n  ],\n  [\n    \"Swaziland\",\n    \"sz\",\n    \"268\"\n  ],\n  [\n    \"Sweden (Sverige)\",\n    \"se\",\n    \"46\"\n  ],\n  [\n    \"Switzerland (Schweiz)\",\n    \"ch\",\n    \"41\"\n  ],\n  [\n    \"Syria (‫سوريا‬‎)\",\n    \"sy\",\n    \"963\"\n  ],\n  [\n    \"Taiwan (台灣)\",\n    \"tw\",\n    \"886\"\n  ],\n  [\n    \"Tajikistan\",\n    \"tj\",\n    \"992\"\n  ],\n  [\n    \"Tanzania\",\n    \"tz\",\n    \"255\"\n  ],\n  [\n    \"Thailand (ไทย)\",\n    \"th\",\n    \"66\"\n  ],\n  [\n    \"Timor-Leste\",\n    \"tl\",\n    \"670\"\n  ],\n  [\n    \"Togo\",\n    \"tg\",\n    \"228\"\n  ],\n  [\n    \"Tokelau\",\n    \"tk\",\n    \"690\"\n  ],\n  [\n    \"Tonga\",\n    \"to\",\n    \"676\"\n  ],\n  [\n    \"Trinidad and Tobago\",\n    \"tt\",\n    \"1868\"\n  ],\n  [\n    \"Tunisia (‫تونس‬‎)\",\n    \"tn\",\n    \"216\"\n  ],\n  [\n    \"Turkey (Türkiye)\",\n    \"tr\",\n    \"90\"\n  ],\n  [\n    \"Turkmenistan\",\n    \"tm\",\n    \"993\"\n  ],\n  [\n    \"Turks and Caicos Islands\",\n    \"tc\",\n    \"1649\"\n  ],\n  [\n    \"Tuvalu\",\n    \"tv\",\n    \"688\"\n  ],\n  [\n    \"U.S. Virgin Islands\",\n    \"vi\",\n    \"1340\"\n  ],\n  [\n    \"Uganda\",\n    \"ug\",\n    \"256\"\n  ],\n  [\n    \"Ukraine (Україна)\",\n    \"ua\",\n    \"380\"\n  ],\n  [\n    \"United Arab Emirates (‫الإمارات العربية المتحدة‬‎)\",\n    \"ae\",\n    \"971\"\n  ],\n  [\n    \"United Kingdom\",\n    \"gb\",\n    \"44\"\n  ],\n  [\n    \"United States\",\n    \"us\",\n    \"1\"\n  ],\n  [\n    \"Uruguay\",\n    \"uy\",\n    \"598\"\n  ],\n  [\n    \"Uzbekistan (Oʻzbekiston)\",\n    \"uz\",\n    \"998\"\n  ],\n  [\n    \"Vanuatu\",\n    \"vu\",\n    \"678\"\n  ],\n  [\n    \"Vatican City (Città del Vaticano)\",\n    \"va\",\n    \"39\"\n  ],\n  [\n    \"Venezuela\",\n    \"ve\",\n    \"58\"\n  ],\n  [\n    \"Vietnam (Việt Nam)\",\n    \"vn\",\n    \"84\"\n  ],\n  [\n    \"Wallis and Futuna (Wallis-et-Futuna)\",\n    \"wf\",\n    \"681\"\n  ],\n  [\n    \"Western Sahara (‫الصحراء الغربية‬‎)\",\n    \"eh\",\n    \"212\"\n  ],\n  [\n    \"Yemen (‫اليمن‬‎)\",\n    \"ye\",\n    \"967\"\n  ],\n  [\n    \"Zambia\",\n    \"zm\",\n    \"260\"\n  ],\n  [\n    \"Zimbabwe\",\n    \"zw\",\n    \"263\"\n  ],\n  [\n    \"Åland Islands\",\n    \"ax\",\n    \"358\"\n  ]\n], Ve = He.map(([e, d, t]) => ({\n  name: e,\n  iso2: d.toUpperCase(),\n  dialCode: t\n}));\nfunction Ke() {\n  return fetch(\"https://ip2c.org/s\").then((e) => e.text()).then((e) => {\n    const d = (e || \"\").toString();\n    if (!d || d[0] !== \"1\")\n      throw new Error(\"unable to fetch the country\");\n    return d.substr(2, 2);\n  });\n}\nfunction We(e, d) {\n  if (e.setSelectionRange)\n    e.focus(), e.setSelectionRange(d, d);\n  else if (e.createTextRange) {\n    const t = e.createTextRange();\n    t.collapse(!0), t.moveEnd(\"character\", d), t.moveStart(\"character\", d), t.select();\n  }\n}\nconst ze = [\n  {\n    name: \"allCountries\",\n    type: Array,\n    default: Ve,\n    description: \"All countries that are used in <code>libphonenumber-js</code>, can be overridden by this prop\",\n    inDemo: !1\n  },\n  {\n    name: \"autoFormat\",\n    type: Boolean,\n    default: !0,\n    description: \"Auto update the input to the formatted phone number when it's valid\",\n    inDemo: !0\n  },\n  {\n    name: \"customValidate\",\n    type: [Boolean, RegExp],\n    default: !1,\n    description: \"Custom validation RegExp for input\",\n    inDemo: !1\n  },\n  {\n    name: \"defaultCountry\",\n    default: \"\",\n    type: [String, Number],\n    description: \"Default country (by iso2 or dialCode), will override the country fetched from IP address of user\",\n    inDemo: !1\n  },\n  {\n    name: \"disabled\",\n    default: !1,\n    type: Boolean,\n    description: \"Disable <code>vue-tel-input</code>, including the input & flag dropdown\",\n    inDemo: !1\n  },\n  {\n    name: \"autoDefaultCountry\",\n    default: !0,\n    type: Boolean,\n    description: \"To fetch default country based on IP address of user\",\n    inDemo: !1\n  },\n  {\n    name: \"dropdownOptions\",\n    type: Object,\n    description: \"Options for dropdown, see below\",\n    inDemo: !1\n  },\n  {\n    name: \"dropdownOptions.disabled\",\n    default: !1,\n    type: Boolean,\n    description: \"Disable dropdown\",\n    inDemo: !1\n  },\n  {\n    name: \"dropdownOptions.showDialCodeInList\",\n    default: !0,\n    type: Boolean,\n    description: \"Show dial code in the dropdown list\",\n    inDemo: !0\n  },\n  {\n    name: \"dropdownOptions.showDialCodeInSelection\",\n    default: !1,\n    type: Boolean,\n    description: \"Show dial code in the dropdown selection\",\n    inDemo: !0\n  },\n  {\n    name: \"dropdownOptions.showFlags\",\n    default: !0,\n    type: Boolean,\n    description: \"Show flags in the dropdown selection and list\",\n    inDemo: !0\n  },\n  {\n    name: \"dropdownOptions.showSearchBox\",\n    default: !1,\n    type: Boolean,\n    description: \"Show country search box\",\n    inDemo: !0\n  },\n  {\n    name: \"dropdownOptions.tabindex\",\n    default: 0,\n    type: Number,\n    description: \"Native dropdown <code>tabindex</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"ignoredCountries\",\n    default: [],\n    type: Array,\n    description: \"List of countries will NOT be shown on the dropdown\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions\",\n    type: Object,\n    description: \"Options for input, see below\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.autocomplete\",\n    type: String,\n    default: \"on\",\n    description: \"Native input <code>autocomplete</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.autofocus\",\n    type: Boolean,\n    default: !1,\n    description: \"Native input <code>autofocus</code> attribute\",\n    inDemo: !1\n  },\n  // {\n  //   name: 'inputOptions.dynamicPlaceholder',\n  //   default: false,\n  //   type: Boolean,\n  //   description: 'Placeholder as a sample phone number in the current country',\n  //   inDemo: false,\n  // },\n  {\n    name: \"inputOptions.aria-describedby\",\n    default: \"\",\n    type: String,\n    description: \"Native input <code>aria-describedby</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.id\",\n    default: \"\",\n    type: String,\n    description: \"Native input <code>id</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.maxlength\",\n    default: 25,\n    type: Number,\n    description: \"Native input <code>maxlength</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.name\",\n    default: \"telephone\",\n    type: String,\n    description: \"Native input <code>name</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.showDialCode\",\n    default: !1,\n    type: Boolean,\n    description: \"Show dial code in input\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.placeholder\",\n    default: \"Enter a phone number\",\n    type: String,\n    description: \"Placeholder for the input\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.readonly\",\n    default: !1,\n    type: Boolean,\n    description: \"Native input <code>readonly</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.required\",\n    default: !1,\n    type: Boolean,\n    description: \"Native input <code>required</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.tabindex\",\n    default: 0,\n    type: Number,\n    description: \"Native input <code>tabindex</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.type\",\n    default: \"tel\",\n    type: String,\n    description: \"Native input <code>type</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.styleClasses\",\n    default: \"\",\n    type: [String, Array, Object],\n    description: \"Custom classes for the <code>input</code>\",\n    inDemo: !1\n  },\n  {\n    name: \"invalidMsg\",\n    default: \"\",\n    type: String,\n    description: \"\",\n    inDemo: !1\n  },\n  {\n    name: \"mode\",\n    default: \"auto\",\n    type: String,\n    description: \"Allowed values: <code>'auto'</code> (Default set by phone),  <code>'international'</code> (Format number with the dial code i.e. + 61), <code>'national'</code> (Format number without dial code i.e. 0321232)\",\n    inDemo: !0,\n    options: [\"auto\", \"national\", \"international\"]\n  },\n  {\n    name: \"onlyCountries\",\n    default: [],\n    type: Array,\n    description: \"List of countries will be shown on the dropdown\",\n    inDemo: !1\n  },\n  {\n    name: \"preferredCountries\",\n    default: [],\n    type: Array,\n    description: \"Preferred countries list, will be on top of the dropdown\",\n    inDemo: !1\n  },\n  {\n    name: \"styleClasses\",\n    default: \"\",\n    type: [String, Array, Object],\n    description: \"Custom classes for the wrapper\",\n    inDemo: !1\n  },\n  {\n    name: \"validCharactersOnly\",\n    default: !1,\n    type: Boolean,\n    description: \"Only allow valid characters in a phone number (will also verify in <code>mounted</code>, so phone number with invalid characters will be shown as an empty string)\",\n    inDemo: !1\n  }\n], Pe = [...ze].reduce((e, d) => {\n  if (d.name.includes(\".\")) {\n    const [t, n] = d.name.split(\".\");\n    e[t] ? Object.assign(e[t], { [n]: d.default }) : Object.assign(e, { [t]: { [n]: d.default } });\n  } else\n    Object.assign(e, { [d.name]: d.default });\n  return e;\n}, {}), G = {\n  options: { ...Pe }\n}, Xe = { version: 4, country_calling_codes: { 1: [\"US\", \"AG\", \"AI\", \"AS\", \"BB\", \"BM\", \"BS\", \"CA\", \"DM\", \"DO\", \"GD\", \"GU\", \"JM\", \"KN\", \"KY\", \"LC\", \"MP\", \"MS\", \"PR\", \"SX\", \"TC\", \"TT\", \"VC\", \"VG\", \"VI\"], 7: [\"RU\", \"KZ\"], 20: [\"EG\"], 27: [\"ZA\"], 30: [\"GR\"], 31: [\"NL\"], 32: [\"BE\"], 33: [\"FR\"], 34: [\"ES\"], 36: [\"HU\"], 39: [\"IT\", \"VA\"], 40: [\"RO\"], 41: [\"CH\"], 43: [\"AT\"], 44: [\"GB\", \"GG\", \"IM\", \"JE\"], 45: [\"DK\"], 46: [\"SE\"], 47: [\"NO\", \"SJ\"], 48: [\"PL\"], 49: [\"DE\"], 51: [\"PE\"], 52: [\"MX\"], 53: [\"CU\"], 54: [\"AR\"], 55: [\"BR\"], 56: [\"CL\"], 57: [\"CO\"], 58: [\"VE\"], 60: [\"MY\"], 61: [\"AU\", \"CC\", \"CX\"], 62: [\"ID\"], 63: [\"PH\"], 64: [\"NZ\"], 65: [\"SG\"], 66: [\"TH\"], 81: [\"JP\"], 82: [\"KR\"], 84: [\"VN\"], 86: [\"CN\"], 90: [\"TR\"], 91: [\"IN\"], 92: [\"PK\"], 93: [\"AF\"], 94: [\"LK\"], 95: [\"MM\"], 98: [\"IR\"], 211: [\"SS\"], 212: [\"MA\", \"EH\"], 213: [\"DZ\"], 216: [\"TN\"], 218: [\"LY\"], 220: [\"GM\"], 221: [\"SN\"], 222: [\"MR\"], 223: [\"ML\"], 224: [\"GN\"], 225: [\"CI\"], 226: [\"BF\"], 227: [\"NE\"], 228: [\"TG\"], 229: [\"BJ\"], 230: [\"MU\"], 231: [\"LR\"], 232: [\"SL\"], 233: [\"GH\"], 234: [\"NG\"], 235: [\"TD\"], 236: [\"CF\"], 237: [\"CM\"], 238: [\"CV\"], 239: [\"ST\"], 240: [\"GQ\"], 241: [\"GA\"], 242: [\"CG\"], 243: [\"CD\"], 244: [\"AO\"], 245: [\"GW\"], 246: [\"IO\"], 247: [\"AC\"], 248: [\"SC\"], 249: [\"SD\"], 250: [\"RW\"], 251: [\"ET\"], 252: [\"SO\"], 253: [\"DJ\"], 254: [\"KE\"], 255: [\"TZ\"], 256: [\"UG\"], 257: [\"BI\"], 258: [\"MZ\"], 260: [\"ZM\"], 261: [\"MG\"], 262: [\"RE\", \"YT\"], 263: [\"ZW\"], 264: [\"NA\"], 265: [\"MW\"], 266: [\"LS\"], 267: [\"BW\"], 268: [\"SZ\"], 269: [\"KM\"], 290: [\"SH\", \"TA\"], 291: [\"ER\"], 297: [\"AW\"], 298: [\"FO\"], 299: [\"GL\"], 350: [\"GI\"], 351: [\"PT\"], 352: [\"LU\"], 353: [\"IE\"], 354: [\"IS\"], 355: [\"AL\"], 356: [\"MT\"], 357: [\"CY\"], 358: [\"FI\", \"AX\"], 359: [\"BG\"], 370: [\"LT\"], 371: [\"LV\"], 372: [\"EE\"], 373: [\"MD\"], 374: [\"AM\"], 375: [\"BY\"], 376: [\"AD\"], 377: [\"MC\"], 378: [\"SM\"], 380: [\"UA\"], 381: [\"RS\"], 382: [\"ME\"], 383: [\"XK\"], 385: [\"HR\"], 386: [\"SI\"], 387: [\"BA\"], 389: [\"MK\"], 420: [\"CZ\"], 421: [\"SK\"], 423: [\"LI\"], 500: [\"FK\"], 501: [\"BZ\"], 502: [\"GT\"], 503: [\"SV\"], 504: [\"HN\"], 505: [\"NI\"], 506: [\"CR\"], 507: [\"PA\"], 508: [\"PM\"], 509: [\"HT\"], 590: [\"GP\", \"BL\", \"MF\"], 591: [\"BO\"], 592: [\"GY\"], 593: [\"EC\"], 594: [\"GF\"], 595: [\"PY\"], 596: [\"MQ\"], 597: [\"SR\"], 598: [\"UY\"], 599: [\"CW\", \"BQ\"], 670: [\"TL\"], 672: [\"NF\"], 673: [\"BN\"], 674: [\"NR\"], 675: [\"PG\"], 676: [\"TO\"], 677: [\"SB\"], 678: [\"VU\"], 679: [\"FJ\"], 680: [\"PW\"], 681: [\"WF\"], 682: [\"CK\"], 683: [\"NU\"], 685: [\"WS\"], 686: [\"KI\"], 687: [\"NC\"], 688: [\"TV\"], 689: [\"PF\"], 690: [\"TK\"], 691: [\"FM\"], 692: [\"MH\"], 850: [\"KP\"], 852: [\"HK\"], 853: [\"MO\"], 855: [\"KH\"], 856: [\"LA\"], 880: [\"BD\"], 886: [\"TW\"], 960: [\"MV\"], 961: [\"LB\"], 962: [\"JO\"], 963: [\"SY\"], 964: [\"IQ\"], 965: [\"KW\"], 966: [\"SA\"], 967: [\"YE\"], 968: [\"OM\"], 970: [\"PS\"], 971: [\"AE\"], 972: [\"IL\"], 973: [\"BH\"], 974: [\"QA\"], 975: [\"BT\"], 976: [\"MN\"], 977: [\"NP\"], 992: [\"TJ\"], 993: [\"TM\"], 994: [\"AZ\"], 995: [\"GE\"], 996: [\"KG\"], 998: [\"UZ\"] }, countries: { AC: [\"247\", \"00\", \"(?:[01589]\\\\d|[46])\\\\d{4}\", [5, 6]], AD: [\"376\", \"00\", \"(?:1|6\\\\d)\\\\d{7}|[135-9]\\\\d{5}\", [6, 8, 9], [[\"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"[135-9]\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"1\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"]]]], AE: [\"971\", \"00\", \"(?:[4-7]\\\\d|9[0-689])\\\\d{7}|800\\\\d{2,9}|[2-4679]\\\\d{7}\", [5, 6, 7, 8, 9, 10, 11, 12], [[\"(\\\\d{3})(\\\\d{2,9})\", \"$1 $2\", [\"60|8\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[236]|[479][2-8]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d)(\\\\d{5})\", \"$1 $2 $3\", [\"[479]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"]], \"0\"], AF: [\"93\", \"00\", \"[2-7]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-7]\"], \"0$1\"]], \"0\"], AG: [\"1\", \"011\", \"(?:268|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([457]\\\\d{6})$\", \"268$1\", 0, \"268\"], AI: [\"1\", \"011\", \"(?:264|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2457]\\\\d{6})$\", \"264$1\", 0, \"264\"], AL: [\"355\", \"00\", \"(?:700\\\\d\\\\d|900)\\\\d{3}|8\\\\d{5,7}|(?:[2-5]|6\\\\d)\\\\d{7}\", [6, 7, 8, 9], [[\"(\\\\d{3})(\\\\d{3,4})\", \"$1 $2\", [\"80|9\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"4[2-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2358][2-5]|4\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[23578]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"6\"], \"0$1\"]], \"0\"], AM: [\"374\", \"00\", \"(?:[1-489]\\\\d|55|60|77)\\\\d{6}\", [8], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]0\"], \"0 $1\"], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"2|3[12]\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"1|47\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[3-9]\"], \"0$1\"]], \"0\"], AO: [\"244\", \"00\", \"[29]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[29]\"]]]], AR: [\"54\", \"00\", \"(?:11|[89]\\\\d\\\\d)\\\\d{8}|[2368]\\\\d{9}\", [10, 11], [[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2-$3\", [\"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\", \"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)\", \"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\", \"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"], \"0$1\", 1], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"1\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[68]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[23]\"], \"0$1\", 1], [\"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$2 15-$3-$4\", [\"9(?:2[2-469]|3[3-578])\", \"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\", \"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)\", \"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\", \"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"], \"0$1\", 0, \"$1 $2 $3-$4\"], [\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$2 15-$3-$4\", [\"91\"], \"0$1\", 0, \"$1 $2 $3-$4\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1-$2-$3\", [\"8\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$2 15-$3-$4\", [\"9\"], \"0$1\", 0, \"$1 $2 $3-$4\"]], \"0\", 0, \"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?\", \"9$1\"], AS: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|684|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([267]\\\\d{6})$\", \"684$1\", 0, \"684\"], AT: [\"43\", \"00\", \"1\\\\d{3,12}|2\\\\d{6,12}|43(?:(?:0\\\\d|5[02-9])\\\\d{3,9}|2\\\\d{4,5}|[3467]\\\\d{4}|8\\\\d{4,6}|9\\\\d{4,7})|5\\\\d{4,12}|8\\\\d{7,12}|9\\\\d{8,12}|(?:[367]\\\\d|4[0-24-9])\\\\d{4,11}\", [4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [[\"(\\\\d)(\\\\d{3,12})\", \"$1 $2\", [\"1(?:11|[2-9])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})\", \"$1 $2\", [\"517\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3,5})\", \"$1 $2\", [\"5[079]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3,10})\", \"$1 $2\", [\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3,9})\", \"$1 $2\", [\"[2-467]|5[2-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\", \"$1 $2 $3\", [\"5\"], \"0$1\"]], \"0\"], AU: [\"61\", \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"1(?:[0-79]\\\\d{7}(?:\\\\d(?:\\\\d{2})?)?|8[0-24-9]\\\\d{7})|[2-478]\\\\d{8}|1\\\\d{4,7}\", [5, 6, 7, 8, 9, 10, 12], [[\"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"16\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"16\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"14|4\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[2378]\"], \"(0$1)\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:30|[89])\"]]], \"0\", 0, \"0|(183[12])\", 0, 0, 0, [[\"(?:(?:2(?:[0-26-9]\\\\d|3[0-8]|4[02-9]|5[0135-9])|3(?:[0-3589]\\\\d|4[0-578]|6[1-9]|7[0-35-9])|7(?:[013-57-9]\\\\d|2[0-8]))\\\\d{3}|8(?:51(?:0(?:0[03-9]|[12479]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\\\d|7[89]|9[0-4]))|(?:6[0-8]|[78]\\\\d)\\\\d{3}|9(?:[02-9]\\\\d{3}|1(?:(?:[0-58]\\\\d|6[0135-9])\\\\d|7(?:0[0-24-9]|[1-9]\\\\d)|9(?:[0-46-9]\\\\d|5[0-79])))))\\\\d{3}\", [9]], [\"4(?:83[0-38]|93[0-6])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[06-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\\\d{6}\", [9]], [\"180(?:0\\\\d{3}|2)\\\\d{3}\", [7, 10]], [\"190[0-26]\\\\d{6}\", [10]], 0, 0, 0, [\"163\\\\d{2,6}\", [5, 6, 7, 8, 9]], [\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\", [9]], [\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\", [6, 8, 10, 12]]], \"0011\"], AW: [\"297\", \"00\", \"(?:[25-79]\\\\d\\\\d|800)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[25-9]\"]]]], AX: [\"358\", \"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\", \"2\\\\d{4,9}|35\\\\d{4,5}|(?:60\\\\d\\\\d|800)\\\\d{4,6}|7\\\\d{5,11}|(?:[14]\\\\d|3[0-46-9]|50)\\\\d{4,8}\", [5, 6, 7, 8, 9, 10, 11, 12], 0, \"0\", 0, 0, 0, 0, \"18\", 0, \"00\"], AZ: [\"994\", \"00\", \"365\\\\d{6}|(?:[124579]\\\\d|60|88)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"90\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[28]|2|365|46\", \"1[28]|2|365[45]|46\", \"1[28]|2|365(?:4|5[02])|46\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[13-9]\"], \"0$1\"]], \"0\"], BA: [\"387\", \"00\", \"6\\\\d{8}|(?:[35689]\\\\d|49|70)\\\\d{6}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[1-3]|[7-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2-$3\", [\"[3-5]|6[56]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"6\"], \"0$1\"]], \"0\"], BB: [\"1\", \"011\", \"(?:246|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-9]\\\\d{6})$\", \"246$1\", 0, \"246\"], BD: [\"880\", \"00\", \"[1-469]\\\\d{9}|8[0-79]\\\\d{7,8}|[2-79]\\\\d{8}|[2-9]\\\\d{7}|[3-9]\\\\d{6}|[57-9]\\\\d{5}\", [6, 7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{4,6})\", \"$1-$2\", [\"31[5-8]|[459]1\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3,7})\", \"$1-$2\", [\"3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:28|4[14]|5)|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3,6})\", \"$1-$2\", [\"[13-9]|22\"], \"0$1\"], [\"(\\\\d)(\\\\d{7,8})\", \"$1-$2\", [\"2\"], \"0$1\"]], \"0\"], BE: [\"32\", \"00\", \"4\\\\d{8}|[1-9]\\\\d{7}\", [8, 9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:80|9)0\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[239]|4[23]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[15-8]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"4\"], \"0$1\"]], \"0\"], BF: [\"226\", \"00\", \"[025-7]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[025-7]\"]]]], BG: [\"359\", \"00\", \"[2-7]\\\\d{6,7}|[89]\\\\d{6,8}|2\\\\d{5}\", [6, 7, 8, 9], [[\"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"2\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"43[1-6]|70[1-9]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:70|8)0\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"43[1-7]|7\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[48]|9[08]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], \"0\"], BH: [\"973\", \"00\", \"[136-9]\\\\d{7}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[13679]|8[047]\"]]]], BI: [\"257\", \"00\", \"(?:[267]\\\\d|31)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2367]\"]]]], BJ: [\"229\", \"00\", \"(?:[25689]\\\\d|40)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24-689]\"]]]], BL: [\"590\", \"00\", \"(?:590|(?:69|80)\\\\d|976)\\\\d{6}\", [9], 0, \"0\", 0, 0, 0, 0, 0, [[\"590(?:2[7-9]|5[12]|87)\\\\d{4}\"], [\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"], [\"80[0-5]\\\\d{6}\"], 0, 0, 0, 0, 0, [\"976[01]\\\\d{5}\"]]], BM: [\"1\", \"011\", \"(?:441|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-8]\\\\d{6})$\", \"441$1\", 0, \"441\"], BN: [\"673\", \"00\", \"[2-578]\\\\d{6}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-578]\"]]]], BO: [\"591\", \"00(?:1\\\\d)?\", \"(?:[2-467]\\\\d\\\\d|8001)\\\\d{5}\", [8, 9], [[\"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"[23]|4[46]\"]], [\"(\\\\d{8})\", \"$1\", [\"[67]\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]], \"0\", 0, \"0(1\\\\d)?\"], BQ: [\"599\", \"00\", \"(?:[34]1|7\\\\d)\\\\d{5}\", [7], 0, 0, 0, 0, 0, 0, \"[347]\"], BR: [\"55\", \"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\", \"(?:[1-46-9]\\\\d\\\\d|5(?:[0-46-9]\\\\d|5[0-46-9]))\\\\d{8}|[1-9]\\\\d{9}|[3589]\\\\d{8}|[34]\\\\d{7}\", [8, 9, 10, 11], [[\"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"300|4(?:0[02]|37)\", \"4(?:02|37)0|[34]00\"]], [\"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\", \"$1 $2 $3\", [\"(?:[358]|90)0\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]\"], \"($1)\"], [\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1 $2-$3\", [\"[16][1-9]|[2-57-9]\"], \"($1)\"]], \"0\", 0, \"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\", \"$2\"], BS: [\"1\", \"011\", \"(?:242|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([3-8]\\\\d{6})$\", \"242$1\", 0, \"242\"], BT: [\"975\", \"00\", \"[17]\\\\d{7}|[2-8]\\\\d{6}\", [7, 8], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-68]|7[246]\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[67]|7\"]]]], BW: [\"267\", \"00\", \"(?:0800|(?:[37]|800)\\\\d)\\\\d{6}|(?:[2-6]\\\\d|90)\\\\d{5}\", [7, 8, 10], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"90\"]], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[24-6]|3[15-79]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[37]\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"0\"]], [\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]]]], BY: [\"375\", \"810\", \"(?:[12]\\\\d|33|44|902)\\\\d{7}|8(?:0[0-79]\\\\d{5,7}|[1-7]\\\\d{9})|8(?:1[0-489]|[5-79]\\\\d)\\\\d{7}|8[1-79]\\\\d{6,7}|8[0-79]\\\\d{5}|8\\\\d{5}\", [6, 7, 8, 9, 10, 11], [[\"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"800\"], \"8 $1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2,4})\", \"$1 $2 $3\", [\"800\"], \"8 $1\"], [\"(\\\\d{4})(\\\\d{2})(\\\\d{3})\", \"$1 $2-$3\", [\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\", \"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"], \"8 0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"1(?:[56]|7[467])|2[1-3]\"], \"8 0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[1-4]\"], \"8 0$1\"], [\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"8 $1\"]], \"8\", 0, \"0|80?\", 0, 0, 0, 0, \"8~10\"], BZ: [\"501\", \"00\", \"(?:0800\\\\d|[2-8])\\\\d{6}\", [7, 11], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-8]\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1-$2-$3-$4\", [\"0\"]]]], CA: [\"1\", \"011\", \"(?:[2-8]\\\\d|90)\\\\d{8}|3\\\\d{6}\", [7, 10], 0, \"1\", 0, 0, 0, 0, 0, [[\"(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|6[578])|4(?:03|1[68]|3[178]|50|68|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|13|39|47|72)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\", [10]], [\"\", [10]], [\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", [10]], [\"900[2-9]\\\\d{6}\", [10]], [\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|(?:5(?:00|2[125-7]|33|44|66|77|88)|622)[2-9]\\\\d{6}\", [10]], 0, [\"310\\\\d{4}\", [7]], 0, [\"600[2-9]\\\\d{6}\", [10]]]], CC: [\"61\", \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\", [6, 7, 8, 9, 10, 12], 0, \"0\", 0, \"0|([59]\\\\d{7})$\", \"8$1\", 0, 0, [[\"8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}\", [9]], [\"4(?:83[0-38]|93[0-6])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[06-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\\\d{6}\", [9]], [\"180(?:0\\\\d{3}|2)\\\\d{3}\", [7, 10]], [\"190[0-26]\\\\d{6}\", [10]], 0, 0, 0, 0, [\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\", [9]], [\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\", [6, 8, 10, 12]]], \"0011\"], CD: [\"243\", \"00\", \"[189]\\\\d{8}|[1-68]\\\\d{6}\", [7, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"88\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[1-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]], \"0\"], CF: [\"236\", \"00\", \"(?:[27]\\\\d{3}|8776)\\\\d{4}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[278]\"]]]], CG: [\"242\", \"00\", \"222\\\\d{6}|(?:0\\\\d|80)\\\\d{7}\", [9], [[\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[02]\"]]]], CH: [\"41\", \"00\", \"8\\\\d{11}|[2-9]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8[047]|90\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-79]|81\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"8\"], \"0$1\"]], \"0\"], CI: [\"225\", \"00\", \"[02]\\\\d{9}\", [10], [[\"(\\\\d{2})(\\\\d{2})(\\\\d)(\\\\d{5})\", \"$1 $2 $3 $4\", [\"2\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"0\"]]]], CK: [\"682\", \"00\", \"[2-578]\\\\d{4}\", [5], [[\"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"[2-578]\"]]]], CL: [\"56\", \"(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0\", \"12300\\\\d{6}|6\\\\d{9,10}|[2-9]\\\\d{8}\", [9, 10, 11], [[\"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"219\", \"2196\"], \"($1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"44\"]], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[1-36]\"], \"($1)\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"9[2-9]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"], \"($1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"60|8\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"60\"]]]], CM: [\"237\", \"00\", \"[26]\\\\d{8}|88\\\\d{6,7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"88\"]], [\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[26]|88\"]]]], CN: [\"86\", \"00|1(?:[12]\\\\d|79)\\\\d\\\\d00\", \"1[127]\\\\d{8,9}|2\\\\d{9}(?:\\\\d{2})?|[12]\\\\d{6,7}|86\\\\d{6}|(?:1[03-689]\\\\d|6)\\\\d{7,9}|(?:[3-579]\\\\d|8[0-57-9])\\\\d{6,9}\", [7, 8, 9, 10, 11, 12], [[\"(\\\\d{2})(\\\\d{5,6})\", \"$1 $2\", [\"(?:10|2[0-57-9])[19]\", \"(?:10|2[0-57-9])(?:10|9[56])\", \"(?:10|2[0-57-9])(?:100|9[56])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]\", \"(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]\", \"85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])\", \"85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"(?:4|80)0\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"10|2(?:[02-57-9]|1[1-9])\", \"10|2(?:[02-57-9]|1[1-9])\", \"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"9\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"80\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-578]\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"1[3-9]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"[12]\"], \"0$1\", 1]], \"0\", 0, \"0|(1(?:[12]\\\\d|79)\\\\d\\\\d)\", 0, 0, 0, 0, \"00\"], CO: [\"57\", \"00(?:4(?:[14]4|56)|[579])\", \"(?:60\\\\d\\\\d|9101)\\\\d{6}|(?:1\\\\d|3)\\\\d{9}\", [10, 11], [[\"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"6\"], \"($1)\"], [\"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"[39]\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{7})\", \"$1-$2-$3\", [\"1\"], \"0$1\", 0, \"$1 $2 $3\"]], \"0\", 0, \"0(4(?:[14]4|56)|[579])?\"], CR: [\"506\", \"00\", \"(?:8\\\\d|90)\\\\d{8}|(?:[24-8]\\\\d{3}|3005)\\\\d{4}\", [8, 10], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]|8[3-9]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[89]\"]]], 0, 0, \"(19(?:0[0-2468]|1[09]|20|66|77|99))\"], CU: [\"53\", \"119\", \"[27]\\\\d{6,7}|[34]\\\\d{5,7}|(?:5|8\\\\d\\\\d)\\\\d{7}\", [6, 7, 8, 10], [[\"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"2[1-4]|[34]\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{6,7})\", \"$1 $2\", [\"7\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"5\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"8\"], \"0$1\"]], \"0\"], CV: [\"238\", \"0\", \"(?:[2-59]\\\\d\\\\d|800)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[2-589]\"]]]], CW: [\"599\", \"00\", \"(?:[34]1|60|(?:7|9\\\\d)\\\\d)\\\\d{5}\", [7, 8], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[3467]\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9[4-8]\"]]], 0, 0, 0, 0, 0, \"[69]\"], CX: [\"61\", \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\", [6, 7, 8, 9, 10, 12], 0, \"0\", 0, \"0|([59]\\\\d{7})$\", \"8$1\", 0, 0, [[\"8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}\", [9]], [\"4(?:83[0-38]|93[0-6])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[06-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\\\d{6}\", [9]], [\"180(?:0\\\\d{3}|2)\\\\d{3}\", [7, 10]], [\"190[0-26]\\\\d{6}\", [10]], 0, 0, 0, 0, [\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\", [9]], [\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\", [6, 8, 10, 12]]], \"0011\"], CY: [\"357\", \"00\", \"(?:[279]\\\\d|[58]0)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[257-9]\"]]]], CZ: [\"420\", \"00\", \"(?:[2-578]\\\\d|60)\\\\d{7}|9\\\\d{8,11}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-8]|9[015-7]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"96\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]]]], DE: [\"49\", \"00\", \"[2579]\\\\d{5,14}|49(?:[34]0|69|8\\\\d)\\\\d\\\\d?|49(?:37|49|60|7[089]|9\\\\d)\\\\d{1,3}|49(?:2[02-9]|3[2-689]|7[1-7])\\\\d{1,8}|(?:1|[368]\\\\d|4[0-8])\\\\d{3,13}|49(?:[015]\\\\d|[23]1|[46][1-8])\\\\d{1,9}\", [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [[\"(\\\\d{2})(\\\\d{3,13})\", \"$1 $2\", [\"3[02]|40|[68]9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3,12})\", \"$1 $2\", [\"2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\", \"2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{2,11})\", \"$1 $2\", [\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]\", \"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"138\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{2,10})\", \"$1 $2\", [\"3\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5,11})\", \"$1 $2\", [\"181\"], \"0$1\"], [\"(\\\\d{3})(\\\\d)(\\\\d{4,10})\", \"$1 $2 $3\", [\"1(?:3|80)|9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"1[67]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{7,12})\", \"$1 $2\", [\"8\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{6})\", \"$1 $2\", [\"185\", \"1850\", \"18500\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{7})\", \"$1 $2\", [\"18[68]\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{6})\", \"$1 $2\", [\"15[0568]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{7})\", \"$1 $2\", [\"15[1279]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{8})\", \"$1 $2\", [\"18\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{7,8})\", \"$1 $2 $3\", [\"1(?:6[023]|7)\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{2})(\\\\d{7})\", \"$1 $2 $3\", [\"15[279]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{8})\", \"$1 $2 $3\", [\"15\"], \"0$1\"]], \"0\"], DJ: [\"253\", \"00\", \"(?:2\\\\d|77)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[27]\"]]]], DK: [\"45\", \"00\", \"[2-9]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-9]\"]]]], DM: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|767|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-7]\\\\d{6})$\", \"767$1\", 0, \"767\"], DO: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, 0, 0, 0, \"8001|8[024]9\"], DZ: [\"213\", \"00\", \"(?:[1-4]|[5-79]\\\\d|80)\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[1-4]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-8]\"], \"0$1\"]], \"0\"], EC: [\"593\", \"00\", \"1\\\\d{9,10}|(?:[2-7]|9\\\\d)\\\\d{7}\", [8, 9, 10, 11], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[2-7]\"], \"(0$1)\", 0, \"$1-$2-$3\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1\"]]], \"0\"], EE: [\"372\", \"00\", \"8\\\\d{9}|[4578]\\\\d{7}|(?:[3-8]\\\\d|90)\\\\d{5}\", [7, 8, 10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88\", \"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88\"]], [\"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"[45]|8(?:00|[1-49])\", \"[45]|8(?:00[1-9]|[1-49])\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]]]], EG: [\"20\", \"00\", \"[189]\\\\d{8,9}|[24-6]\\\\d{8}|[135]\\\\d{7}\", [8, 9, 10], [[\"(\\\\d)(\\\\d{7,8})\", \"$1 $2\", [\"[23]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{6,7})\", \"$1 $2\", [\"1[35]|[4-6]|8[2468]|9[235-7]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[189]\"], \"0$1\"]], \"0\"], EH: [\"212\", \"00\", \"[5-8]\\\\d{8}\", [9], 0, \"0\", 0, 0, 0, 0, \"528[89]\"], ER: [\"291\", \"00\", \"[178]\\\\d{6}\", [7], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[178]\"], \"0$1\"]], \"0\"], ES: [\"34\", \"00\", \"[5-9]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]00\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-9]\"]]]], ET: [\"251\", \"00\", \"(?:11|[2-579]\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-579]\"], \"0$1\"]], \"0\"], FI: [\"358\", \"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\", \"[1-35689]\\\\d{4}|7\\\\d{10,11}|(?:[124-7]\\\\d|3[0-46-9])\\\\d{8}|[1-9]\\\\d{5,8}\", [5, 6, 7, 8, 9, 10, 11, 12], [[\"(\\\\d)(\\\\d{4,9})\", \"$1 $2\", [\"[2568][1-8]|3(?:0[1-9]|[1-9])|9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"[12]00|[368]|70[07-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4,8})\", \"$1 $2\", [\"[1245]|7[135]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{6,10})\", \"$1 $2\", [\"7\"], \"0$1\"]], \"0\", 0, 0, 0, 0, \"1[03-79]|[2-9]\", 0, \"00\"], FJ: [\"679\", \"0(?:0|52)\", \"45\\\\d{5}|(?:0800\\\\d|[235-9])\\\\d{6}\", [7, 11], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[235-9]|45\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], FK: [\"500\", \"00\", \"[2-7]\\\\d{4}\", [5]], FM: [\"691\", \"00\", \"(?:[39]\\\\d\\\\d|820)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[389]\"]]]], FO: [\"298\", \"00\", \"[2-9]\\\\d{5}\", [6], [[\"(\\\\d{6})\", \"$1\", [\"[2-9]\"]]], 0, 0, \"(10(?:01|[12]0|88))\"], FR: [\"33\", \"00\", \"[1-9]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0 $1\"], [\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[1-79]\"], \"0$1\"]], \"0\"], GA: [\"241\", \"00\", \"(?:[067]\\\\d|11)\\\\d{6}|[2-7]\\\\d{6}\", [7, 8], [[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-7]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"0\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"11|[67]\"], \"0$1\"]], 0, 0, \"0(11\\\\d{6}|60\\\\d{6}|61\\\\d{6}|6[256]\\\\d{6}|7[467]\\\\d{6})\", \"$1\"], GB: [\"44\", \"00\", \"[1-357-9]\\\\d{9}|[18]\\\\d{8}|8\\\\d{6}\", [7, 9, 10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"800\", \"8001\", \"80011\", \"800111\", \"8001111\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"845\", \"8454\", \"84546\", \"845464\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"800\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{4,5})\", \"$1 $2\", [\"1(?:38|5[23]|69|76|94)\", \"1(?:(?:38|69)7|5(?:24|39)|768|946)\", \"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5,6})\", \"$1 $2\", [\"1(?:[2-69][02-9]|[78])\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[25]|7(?:0|6[02-9])\", \"[25]|7(?:0|6(?:[03-9]|2[356]))\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"7\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1389]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, [[\"(?:1(?:1(?:3(?:[0-58]\\\\d\\\\d|73[0235])|4(?:[0-5]\\\\d\\\\d|69[7-9]|70[01359])|(?:5[0-26-9]|[78][0-49])\\\\d\\\\d|6(?:[0-4]\\\\d\\\\d|50[0-79]))|2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)\\\\d\\\\d|1(?:[0-7]\\\\d\\\\d|8(?:[02]\\\\d|1[0-26-9])))|(?:3(?:0\\\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\\\d\\\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{3})\\\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\\\d)|76\\\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[5-7]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}\", [9, 10]], [\"7(?:457[0-57-9]|700[01]|911[028])\\\\d{5}|7(?:[1-3]\\\\d\\\\d|4(?:[0-46-9]\\\\d|5[0-689])|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[024-9]\\\\d|1[02-9]|3[0-689]))\\\\d{6}\", [10]], [\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"], [\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[2-49]))\\\\d{7}|845464\\\\d\", [7, 10]], [\"70\\\\d{8}\", [10]], 0, [\"(?:3[0347]|55)\\\\d{8}\", [10]], [\"76(?:464|652)\\\\d{5}|76(?:0[0-2]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\", [10]], [\"56\\\\d{8}\", [10]]], 0, \" x\"], GD: [\"1\", \"011\", \"(?:473|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-9]\\\\d{6})$\", \"473$1\", 0, \"473\"], GE: [\"995\", \"00\", \"(?:[3-57]\\\\d\\\\d|800)\\\\d{6}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"70\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"32\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[57]\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[348]\"], \"0$1\"]], \"0\"], GF: [\"594\", \"00\", \"(?:[56]94|80\\\\d|976)\\\\d{6}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[569]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\"], GG: [\"44\", \"00\", \"(?:1481|[357-9]\\\\d{3})\\\\d{6}|8\\\\d{6}(?:\\\\d{2})?\", [7, 9, 10], 0, \"0\", 0, \"0|([25-9]\\\\d{5})$\", \"1481$1\", 0, 0, [[\"1481[25-9]\\\\d{5}\", [10]], [\"7(?:(?:781|839)\\\\d|911[17])\\\\d{5}\", [10]], [\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"], [\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[0-3]))\\\\d{7}|845464\\\\d\", [7, 10]], [\"70\\\\d{8}\", [10]], 0, [\"(?:3[0347]|55)\\\\d{8}\", [10]], [\"76(?:464|652)\\\\d{5}|76(?:0[0-2]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\", [10]], [\"56\\\\d{8}\", [10]]]], GH: [\"233\", \"00\", \"(?:[235]\\\\d{3}|800)\\\\d{5}\", [8, 9], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"8\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[235]\"], \"0$1\"]], \"0\"], GI: [\"350\", \"00\", \"(?:[25]\\\\d\\\\d|606)\\\\d{5}\", [8], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"2\"]]]], GL: [\"299\", \"00\", \"(?:19|[2-689]\\\\d|70)\\\\d{4}\", [6], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"19|[2-9]\"]]]], GM: [\"220\", \"00\", \"[2-9]\\\\d{6}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]]]], GN: [\"224\", \"00\", \"722\\\\d{6}|(?:3|6\\\\d)\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"3\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[67]\"]]]], GP: [\"590\", \"00\", \"(?:590|(?:69|80)\\\\d|976)\\\\d{6}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[569]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, [[\"590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1289]|5[3-579]|6[0-289]|7[08]|8[0-689]|9\\\\d)\\\\d{4}\"], [\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"], [\"80[0-5]\\\\d{6}\"], 0, 0, 0, 0, 0, [\"976[01]\\\\d{5}\"]]], GQ: [\"240\", \"00\", \"222\\\\d{6}|(?:3\\\\d|55|[89]0)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[235]\"]], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[89]\"]]]], GR: [\"30\", \"00\", \"5005000\\\\d{3}|8\\\\d{9,11}|(?:[269]\\\\d|70)\\\\d{8}\", [10, 11, 12], [[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"21|7\"]], [\"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2689]\"]], [\"(\\\\d{3})(\\\\d{3,4})(\\\\d{5})\", \"$1 $2 $3\", [\"8\"]]]], GT: [\"502\", \"00\", \"(?:1\\\\d{3}|[2-7])\\\\d{7}\", [8, 11], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]]]], GU: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|671|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([3-9]\\\\d{6})$\", \"671$1\", 0, \"671\"], GW: [\"245\", \"00\", \"[49]\\\\d{8}|4\\\\d{6}\", [7, 9], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"40\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[49]\"]]]], GY: [\"592\", \"001\", \"9008\\\\d{3}|(?:[2-467]\\\\d\\\\d|862)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-46-9]\"]]]], HK: [\"852\", \"00(?:30|5[09]|[126-9]?)\", \"8[0-46-9]\\\\d{6,7}|9\\\\d{4,7}|(?:[2-7]|9\\\\d{3})\\\\d{7}\", [5, 6, 7, 8, 9, 11], [[\"(\\\\d{3})(\\\\d{2,5})\", \"$1 $2\", [\"900\", \"9003\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]|8[1-4]|9(?:0[1-9]|[1-8])\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], HN: [\"504\", \"00\", \"8\\\\d{10}|[237-9]\\\\d{7}\", [8, 11], [[\"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[237-9]\"]]]], HR: [\"385\", \"00\", \"(?:[24-69]\\\\d|3[0-79])\\\\d{7}|80\\\\d{5,7}|[1-79]\\\\d{7}|6\\\\d{5,6}\", [6, 7, 8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"6[01]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[67]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-5]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]], \"0\"], HT: [\"509\", \"00\", \"[2-489]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-489]\"]]]], HU: [\"36\", \"00\", \"[235-7]\\\\d{8}|[1-9]\\\\d{7}\", [8, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"(06 $1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]\"], \"(06 $1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-9]\"], \"06 $1\"]], \"06\"], ID: [\"62\", \"00[89]\", \"(?:(?:00[1-9]|8\\\\d)\\\\d{4}|[1-36])\\\\d{6}|00\\\\d{10}|[1-9]\\\\d{8,10}|[2-9]\\\\d{7}\", [7, 8, 9, 10, 11, 12, 13], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"15\"]], [\"(\\\\d{2})(\\\\d{5,9})\", \"$1 $2\", [\"2[124]|[36]1\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{5,7})\", \"$1 $2\", [\"800\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5,8})\", \"$1 $2\", [\"[2-79]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\", \"$1-$2-$3\", [\"8[1-35-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6,8})\", \"$1 $2\", [\"1\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"804\"], \"0$1\"], [\"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"80\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1-$2-$3\", [\"8\"], \"0$1\"]], \"0\"], IE: [\"353\", \"00\", \"(?:1\\\\d|[2569])\\\\d{6,8}|4\\\\d{6,9}|7\\\\d{8}|8\\\\d{8,9}\", [7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"2[24-9]|47|58|6[237-9]|9[35-9]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[45]0\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2569]|4[1-69]|7[14]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"70\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"81\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"4\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\"], IL: [\"972\", \"0(?:0|1[2-9])\", \"1\\\\d{6}(?:\\\\d{3,5})?|[57]\\\\d{8}|[1-489]\\\\d{7}\", [7, 8, 9, 10, 11, 12], [[\"(\\\\d{4})(\\\\d{3})\", \"$1-$2\", [\"125\"]], [\"(\\\\d{4})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"121\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2-489]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"12\"]], [\"(\\\\d{4})(\\\\d{6})\", \"$1-$2\", [\"159\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3-$4\", [\"1[7-9]\"]], [\"(\\\\d{3})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3-$4\", [\"15\"]]], \"0\"], IM: [\"44\", \"00\", \"1624\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\", [10], 0, \"0\", 0, \"0|([25-8]\\\\d{5})$\", \"1624$1\", 0, \"74576|(?:16|7[56])24\"], IN: [\"91\", \"00\", \"(?:000800|[2-9]\\\\d\\\\d)\\\\d{7}|1\\\\d{7,12}\", [8, 9, 10, 11, 12, 13], [[\"(\\\\d{8})\", \"$1\", [\"5(?:0|2[23]|3[03]|[67]1|88)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"], 0, 1], [\"(\\\\d{4})(\\\\d{4,5})\", \"$1 $2\", [\"180\", \"1800\"], 0, 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"140\"], 0, 1], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\", \"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\", \"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]\", \"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]\", \"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]\"], \"0$1\", 1], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\", \"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\", \"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\\\d|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]\"], \"0$1\", 1], [\"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"[6-9]\"], \"0$1\", 1], [\"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:6|8[06])\", \"1(?:6|8[06]0)\"], 0, 1], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"18\"], 0, 1]], \"0\"], IO: [\"246\", \"00\", \"3\\\\d{6}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"3\"]]]], IQ: [\"964\", \"00\", \"(?:1|7\\\\d\\\\d)\\\\d{7}|[2-6]\\\\d{7,8}\", [8, 9, 10], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-6]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], \"0\"], IR: [\"98\", \"00\", \"[1-9]\\\\d{9}|(?:[1-8]\\\\d\\\\d|9)\\\\d{3,4}\", [4, 5, 6, 7, 10], [[\"(\\\\d{4,5})\", \"$1\", [\"96\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4,5})\", \"$1 $2\", [\"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-8]\"], \"0$1\"]], \"0\"], IS: [\"354\", \"00|1(?:0(?:01|[12]0)|100)\", \"(?:38\\\\d|[4-9])\\\\d{6}\", [7, 9], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[4-9]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"3\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], IT: [\"39\", \"00\", \"0\\\\d{5,10}|1\\\\d{8,10}|3(?:[0-8]\\\\d{7,10}|9\\\\d{7,8})|(?:55|70)\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?\", [6, 7, 8, 9, 10, 11], [[\"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"0[26]\"]], [\"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"0[13-57-9][0159]|8(?:03|4[17]|9[2-5])\", \"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))\"]], [\"(\\\\d{4})(\\\\d{2,6})\", \"$1 $2\", [\"0(?:[13-579][2-46-8]|8[236-8])\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"894\"]], [\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[26]|5\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1(?:44|[679])|[378]\"]], [\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[13-57-9][0159]|14\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{5})\", \"$1 $2 $3\", [\"0[26]\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"3\"]]], 0, 0, 0, 0, 0, 0, [[\"0669[0-79]\\\\d{1,6}|0(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\\\d\\\\d|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\\\d|6[0-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7}\"], [\"3[1-9]\\\\d{8}|3[2-9]\\\\d{7}\", [9, 10]], [\"80(?:0\\\\d{3}|3)\\\\d{3}\", [6, 9]], [\"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\", [6, 8, 9, 10]], [\"1(?:78\\\\d|99)\\\\d{6}\", [9, 10]], 0, 0, 0, [\"55\\\\d{8}\", [10]], [\"84(?:[08]\\\\d{3}|[17])\\\\d{3}\", [6, 9]]]], JE: [\"44\", \"00\", \"1534\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\", [10], 0, \"0\", 0, \"0|([0-24-8]\\\\d{5})$\", \"1534$1\", 0, 0, [[\"1534[0-24-8]\\\\d{5}\"], [\"7(?:(?:(?:50|82)9|937)\\\\d|7(?:00[378]|97[7-9]))\\\\d{5}\"], [\"80(?:07(?:35|81)|8901)\\\\d{4}\"], [\"(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\"], [\"701511\\\\d{4}\"], 0, [\"(?:3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\\\d{4})\\\\d{4}\"], [\"76(?:464|652)\\\\d{5}|76(?:0[0-2]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\"], [\"56\\\\d{8}\"]]], JM: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|658|900)\\\\d{7}\", [10], 0, \"1\", 0, 0, 0, 0, \"658|876\"], JO: [\"962\", \"00\", \"(?:(?:[2689]|7\\\\d)\\\\d|32|53)\\\\d{6}\", [8, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2356]|87\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"70\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], \"0\"], JP: [\"81\", \"010\", \"00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\", [8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"(?:12|57|99)0\"], \"0$1\"], [\"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:80|9[16])\", \"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9]|636)|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\", \"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9]|636[457-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"60\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[36]|4(?:2[09]|7[01])\", \"[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[27-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9])|5(?:2|3[045]|4[0-369]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|49|51|6(?:[0-24]|36|5[0-3589]|72|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:49|55|83)[29]|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|7[015-9]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17|3[015-9]))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9(?:[019]|4[1-3]|6(?:[0-47-9]|5[01346-9])))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|829(?:2|66)|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"[14]|[289][2-9]|5[3-9]|7[2-4679]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"800\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[257-9]\"], \"0$1\"]], \"0\"], KE: [\"254\", \"000\", \"(?:[17]\\\\d\\\\d|900)\\\\d{6}|(?:2|80)0\\\\d{6,7}|[4-6]\\\\d{6,8}\", [7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{5,7})\", \"$1 $2\", [\"[24-6]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[17]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]], \"0\"], KG: [\"996\", \"00\", \"8\\\\d{9}|(?:[235-8]\\\\d|99)\\\\d{7}\", [9, 10], [[\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"3(?:1[346]|[24-79])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[235-79]|88\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{2,3})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\"], KH: [\"855\", \"00[14-9]\", \"1\\\\d{9}|[1-9]\\\\d{7,8}\", [8, 9, 10], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-9]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]], \"0\"], KI: [\"686\", \"00\", \"(?:[37]\\\\d|6[0-79])\\\\d{6}|(?:[2-48]\\\\d|50)\\\\d{3}\", [5, 8], 0, \"0\"], KM: [\"269\", \"00\", \"[3478]\\\\d{6}\", [7], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[3478]\"]]]], KN: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-7]\\\\d{6})$\", \"869$1\", 0, \"869\"], KP: [\"850\", \"00|99\", \"85\\\\d{6}|(?:19\\\\d|[2-7])\\\\d{7}\", [8, 10], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-7]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"]], \"0\"], KR: [\"82\", \"00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))\", \"00[1-9]\\\\d{8,11}|(?:[12]|5\\\\d{3})\\\\d{7}|[13-6]\\\\d{9}|(?:[1-6]\\\\d|80)\\\\d{7}|[3-6]\\\\d{4,5}|(?:00|7)0\\\\d{8}\", [5, 6, 8, 9, 10, 11, 12, 13, 14], [[\"(\\\\d{2})(\\\\d{3,4})\", \"$1-$2\", [\"(?:3[1-3]|[46][1-4]|5[1-5])1\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"1\"]], [\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"60|8\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"[1346]|5[1-5]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1-$2-$3\", [\"5\"], \"0$1\"]], \"0\", 0, \"0(8(?:[1-46-8]|5\\\\d\\\\d))?\"], KW: [\"965\", \"00\", \"18\\\\d{5}|(?:[2569]\\\\d|41)\\\\d{6}\", [7, 8], [[\"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"[169]|2(?:[235]|4[1-35-9])|52\"]], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[245]\"]]]], KY: [\"1\", \"011\", \"(?:345|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-9]\\\\d{6})$\", \"345$1\", 0, \"345\"], KZ: [\"7\", \"810\", \"(?:33622|8\\\\d{8})\\\\d{5}|[78]\\\\d{9}\", [10, 14], 0, \"8\", 0, 0, 0, 0, \"33|7\", 0, \"8~10\"], LA: [\"856\", \"00\", \"[23]\\\\d{9}|3\\\\d{8}|(?:[235-8]\\\\d|41)\\\\d{6}\", [8, 9, 10], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2[13]|3[14]|[4-8]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"30[013-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[23]\"], \"0$1\"]], \"0\"], LB: [\"961\", \"00\", \"[27-9]\\\\d{7}|[13-9]\\\\d{6}\", [7, 8], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[27-9]\"]]], \"0\"], LC: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|758|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-8]\\\\d{6})$\", \"758$1\", 0, \"758\"], LI: [\"423\", \"00\", \"[68]\\\\d{8}|(?:[2378]\\\\d|90)\\\\d{5}\", [7, 9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[2379]|8(?:0[09]|7)\", \"[2379]|8(?:0(?:02|9)|7)\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"69\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"]]], \"0\", 0, \"0|(1001)\"], LK: [\"94\", \"00\", \"[1-9]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[1-689]\"], \"0$1\"]], \"0\"], LR: [\"231\", \"00\", \"(?:2|33|5\\\\d|77|88)\\\\d{7}|[4-6]\\\\d{6}\", [7, 8, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[4-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3578]\"], \"0$1\"]], \"0\"], LS: [\"266\", \"00\", \"(?:[256]\\\\d\\\\d|800)\\\\d{5}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2568]\"]]]], LT: [\"370\", \"00\", \"(?:[3469]\\\\d|52|[78]0)\\\\d{6}\", [8], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"52[0-7]\"], \"(8-$1)\", 1], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"], \"8 $1\", 1], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"37|4(?:[15]|6[1-8])\"], \"(8-$1)\", 1], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[3-6]\"], \"(8-$1)\", 1]], \"8\", 0, \"[08]\"], LU: [\"352\", \"00\", \"35[013-9]\\\\d{4,8}|6\\\\d{8}|35\\\\d{2,4}|(?:[2457-9]\\\\d|3[0-46-9])\\\\d{2,9}\", [4, 5, 6, 7, 8, 9, 10, 11], [[\"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"20[2-689]\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\", \"$1 $2 $3 $4\", [\"2(?:[0367]|4[3-8])\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"80[01]|90[015]\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"20\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\", \"$1 $2 $3 $4 $5\", [\"2(?:[0367]|4[3-8])\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,5})\", \"$1 $2 $3 $4\", [\"[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]\"]]], 0, 0, \"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\\\d)\"], LV: [\"371\", \"00\", \"(?:[268]\\\\d|90)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[269]|8[01]\"]]]], LY: [\"218\", \"00\", \"[2-9]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{7})\", \"$1-$2\", [\"[2-9]\"], \"0$1\"]], \"0\"], MA: [\"212\", \"00\", \"[5-8]\\\\d{8}\", [9], [[\"(\\\\d{5})(\\\\d{4})\", \"$1-$2\", [\"5(?:29|38)\", \"5(?:29[89]|389)\", \"5(?:29[89]|389)0\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5[45]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5})\", \"$1-$2\", [\"5(?:2[2-489]|3[5-9]|9)|892\", \"5(?:2(?:[2-49]|8[235-9])|3[5-9]|9)|892\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1-$2\", [\"8\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6})\", \"$1-$2\", [\"[5-7]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, [[\"5(?:29(?:[189][05]|2[29]|3[01])|389[05])\\\\d{4}|5(?:2(?:[0-25-7]\\\\d|3[1-578]|4[02-46-8]|8[0235-7]|90)|3(?:[0-47]\\\\d|5[02-9]|6[02-8]|8[08]|9[3-9])|(?:4[067]|5[03])\\\\d)\\\\d{5}\"], [\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[017]\\\\d|2[0-2]|6[0-8]))\\\\d{6}\"], [\"80\\\\d{7}\"], [\"89\\\\d{7}\"], 0, 0, 0, 0, [\"592(?:4[0-2]|93)\\\\d{4}\"]]], MC: [\"377\", \"00\", \"(?:[3489]|6\\\\d)\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"4\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[389]\"]], [\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"6\"], \"0$1\"]], \"0\"], MD: [\"373\", \"00\", \"(?:[235-7]\\\\d|[89]0)\\\\d{6}\", [8], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"22|3\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[25-7]\"], \"0$1\"]], \"0\"], ME: [\"382\", \"00\", \"(?:20|[3-79]\\\\d)\\\\d{6}|80\\\\d{6,7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-9]\"], \"0$1\"]], \"0\"], MF: [\"590\", \"00\", \"(?:590|(?:69|80)\\\\d|976)\\\\d{6}\", [9], 0, \"0\", 0, 0, 0, 0, 0, [[\"590(?:0[079]|[14]3|[27][79]|30|5[0-268]|87)\\\\d{4}\"], [\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"], [\"80[0-5]\\\\d{6}\"], 0, 0, 0, 0, 0, [\"976[01]\\\\d{5}\"]]], MG: [\"261\", \"00\", \"[23]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[23]\"], \"0$1\"]], \"0\", 0, \"0|([24-9]\\\\d{6})$\", \"20$1\"], MH: [\"692\", \"011\", \"329\\\\d{4}|(?:[256]\\\\d|45)\\\\d{5}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-6]\"]]], \"1\"], MK: [\"389\", \"00\", \"[2-578]\\\\d{7}\", [8], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2|34[47]|4(?:[37]7|5[47]|64)\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[347]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[58]\"], \"0$1\"]], \"0\"], ML: [\"223\", \"00\", \"[24-9]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24-9]\"]]]], MM: [\"95\", \"00\", \"1\\\\d{5,7}|95\\\\d{6}|(?:[4-7]|9[0-46-9])\\\\d{6,8}|(?:2|8\\\\d)\\\\d{5,8}\", [6, 7, 8, 9, 10], [[\"(\\\\d)(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"16|2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[12]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[4-7]|8[1-35]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{4,6})\", \"$1 $2 $3\", [\"9(?:2[0-4]|[35-9]|4[137-9])\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"92\"], \"0$1\"], [\"(\\\\d)(\\\\d{5})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], \"0\"], MN: [\"976\", \"001\", \"[12]\\\\d{7,9}|[5-9]\\\\d{7}\", [8, 9, 10], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[12]1\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[5-9]\"]], [\"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[12]2[1-3]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5,6})\", \"$1 $2\", [\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])\", \"[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{4,5})\", \"$1 $2\", [\"[12]\"], \"0$1\"]], \"0\"], MO: [\"853\", \"00\", \"0800\\\\d{3}|(?:28|[68]\\\\d)\\\\d{6}\", [7, 8], [[\"(\\\\d{4})(\\\\d{3})\", \"$1 $2\", [\"0\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[268]\"]]]], MP: [\"1\", \"011\", \"[58]\\\\d{9}|(?:67|90)0\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-9]\\\\d{6})$\", \"670$1\", 0, \"670\"], MQ: [\"596\", \"00\", \"(?:69|80)\\\\d{7}|(?:59|97)6\\\\d{6}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[569]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\"], MR: [\"222\", \"00\", \"(?:[2-4]\\\\d\\\\d|800)\\\\d{5}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-48]\"]]]], MS: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|664|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([34]\\\\d{6})$\", \"664$1\", 0, \"664\"], MT: [\"356\", \"00\", \"3550\\\\d{4}|(?:[2579]\\\\d\\\\d|800)\\\\d{5}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2357-9]\"]]]], MU: [\"230\", \"0(?:0|[24-7]0|3[03])\", \"(?:5|8\\\\d\\\\d)\\\\d{7}|[2-468]\\\\d{6}\", [7, 8, 10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-46]|8[013]\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"5\"]], [\"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"8\"]]], 0, 0, 0, 0, 0, 0, 0, \"020\"], MV: [\"960\", \"0(?:0|19)\", \"(?:800|9[0-57-9]\\\\d)\\\\d{7}|[34679]\\\\d{6}\", [7, 10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[3467]|9[13-9]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], MW: [\"265\", \"00\", \"(?:[129]\\\\d|31|77|88)\\\\d{7}|1\\\\d{6}\", [7, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[2-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[137-9]\"], \"0$1\"]], \"0\"], MX: [\"52\", \"0[09]\", \"1(?:(?:44|99)[1-9]|65[0-689])\\\\d{7}|(?:1(?:[017]\\\\d|[235][1-9]|4[0-35-9]|6[0-46-9]|8[1-79]|9[1-8])|[2-9]\\\\d)\\\\d{8}\", [10, 11], [[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"33|5[56]|81\"], 0, 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-9]\"], 0, 1], [\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$2 $3 $4\", [\"1(?:33|5[56]|81)\"], 0, 1], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$2 $3 $4\", [\"1\"], 0, 1]], \"01\", 0, \"0(?:[12]|4[45])|1\", 0, 0, 0, 0, \"00\"], MY: [\"60\", \"00\", \"1\\\\d{8,9}|(?:3\\\\d|[4-9])\\\\d{7}\", [8, 9, 10], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"[4-79]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1-$2 $3\", [\"1(?:[02469]|[378][1-9]|53)|8\", \"1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2 $3\", [\"3\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3-$4\", [\"1(?:[367]|80)\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"15\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2 $3\", [\"1\"], \"0$1\"]], \"0\"], MZ: [\"258\", \"00\", \"(?:2|8\\\\d)\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2|8[2-79]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]]]], NA: [\"264\", \"00\", \"[68]\\\\d{7,8}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"88\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"6\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"87\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]], \"0\"], NC: [\"687\", \"00\", \"(?:050|[2-57-9]\\\\d\\\\d)\\\\d{3}\", [6], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1.$2.$3\", [\"[02-57-9]\"]]]], NE: [\"227\", \"00\", \"[027-9]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"08\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[089]|2[013]|7[04]\"]]]], NF: [\"672\", \"00\", \"[13]\\\\d{5}\", [6], [[\"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"1[0-3]\"]], [\"(\\\\d)(\\\\d{5})\", \"$1 $2\", [\"[13]\"]]], 0, 0, \"([0-258]\\\\d{4})$\", \"3$1\"], NG: [\"234\", \"009\", \"(?:[124-7]|9\\\\d{3})\\\\d{6}|[1-9]\\\\d{7}|[78]\\\\d{9,13}\", [7, 8, 10, 11, 12, 13, 14], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"78\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[12]|9(?:0[3-9]|[1-9])\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-7]|8[2-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[7-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5})(\\\\d{5,6})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"]], \"0\"], NI: [\"505\", \"00\", \"(?:1800|[25-8]\\\\d{3})\\\\d{4}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[125-8]\"]]]], NL: [\"31\", \"00\", \"(?:[124-7]\\\\d\\\\d|3(?:[02-9]\\\\d|1[0-8]))\\\\d{6}|8\\\\d{6,9}|9\\\\d{6,10}|1\\\\d{4,5}\", [5, 6, 7, 8, 9, 10, 11], [[\"(\\\\d{3})(\\\\d{4,7})\", \"$1 $2\", [\"[89]0\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"66\"], \"0$1\"], [\"(\\\\d)(\\\\d{8})\", \"$1 $2\", [\"6\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-578]|91\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], \"0\"], NO: [\"47\", \"00\", \"(?:0|[2-9]\\\\d{3})\\\\d{4}\", [5, 8], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[489]|59\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[235-7]\"]]], 0, 0, 0, 0, 0, \"[02-689]|7[0-8]\"], NP: [\"977\", \"00\", \"(?:1\\\\d|9)\\\\d{9}|[1-9]\\\\d{7}\", [8, 10, 11], [[\"(\\\\d)(\\\\d{7})\", \"$1-$2\", [\"1[2-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1-$2\", [\"1[01]|[2-8]|9(?:[1-59]|[67][2-6])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{7})\", \"$1-$2\", [\"9\"]]], \"0\"], NR: [\"674\", \"00\", \"(?:444|(?:55|8\\\\d)\\\\d|666)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[4-68]\"]]]], NU: [\"683\", \"00\", \"(?:[47]|888\\\\d)\\\\d{3}\", [4, 7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"8\"]]]], NZ: [\"64\", \"0(?:0|161)\", \"[29]\\\\d{7,9}|50\\\\d{5}(?:\\\\d{2,3})?|6[0-35-9]\\\\d{6}|7\\\\d{7,8}|8\\\\d{4,9}|(?:11\\\\d|[34])\\\\d{7}\", [5, 6, 7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{3,8})\", \"$1 $2\", [\"8[1-579]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"50[036-8]|[89]0\", \"50(?:[0367]|88)|[89]0\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"24|[346]|7[2-57-9]|9[2-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2(?:10|74)|[59]|80\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1|2[028]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\", \"$1 $2 $3\", [\"2(?:[169]|7[0-35-9])|7|86\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, 0, \"00\"], OM: [\"968\", \"00\", \"(?:1505|[279]\\\\d{3}|500)\\\\d{4}|800\\\\d{5,6}\", [7, 8, 9], [[\"(\\\\d{3})(\\\\d{4,6})\", \"$1 $2\", [\"[58]\"]], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"2\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[179]\"]]]], PA: [\"507\", \"00\", \"(?:00800|8\\\\d{3})\\\\d{6}|[68]\\\\d{7}|[1-57-9]\\\\d{6}\", [7, 8, 10, 11], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[1-57-9]\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[68]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]]], PE: [\"51\", \"00|19(?:1[124]|77|90)00\", \"(?:[14-8]|9\\\\d)\\\\d{7}\", [8, 9], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"80\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"1\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[4-8]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"]]], \"0\", 0, 0, 0, 0, 0, 0, \"00\", \" Anexo \"], PF: [\"689\", \"00\", \"4\\\\d{5}(?:\\\\d{2})?|8\\\\d{7,8}\", [6, 8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"44\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"4|8[7-9]\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]]]], PG: [\"675\", \"00|140[1-3]\", \"(?:180|[78]\\\\d{3})\\\\d{4}|(?:[2-589]\\\\d|64)\\\\d{5}\", [7, 8], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"18|[2-69]|85\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[78]\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], PH: [\"63\", \"00\", \"(?:[2-7]|9\\\\d)\\\\d{8}|2\\\\d{5}|(?:1800|8)\\\\d{7,9}\", [6, 8, 9, 10, 11, 12, 13], [[\"(\\\\d)(\\\\d{5})\", \"$1 $2\", [\"2\"], \"(0$1)\"], [\"(\\\\d{4})(\\\\d{4,6})\", \"$1 $2\", [\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2\", \"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"], \"(0$1)\"], [\"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"346|4(?:27|9[35])|883\", \"3469|4(?:279|9(?:30|56))|8834\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-7]|8[2-8]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [\"(\\\\d{4})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"1\"]]], \"0\"], PK: [\"92\", \"00\", \"122\\\\d{6}|[24-8]\\\\d{10,11}|9(?:[013-9]\\\\d{8,10}|2(?:[01]\\\\d\\\\d|2(?:[06-8]\\\\d|1[01]))\\\\d{7})|(?:[2-8]\\\\d{3}|92(?:[0-7]\\\\d|8[1-9]))\\\\d{6}|[24-9]\\\\d{8}|[89]\\\\d{7}\", [8, 9, 10, 11, 12], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,7})\", \"$1 $2 $3\", [\"[89]0\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"1\"]], [\"(\\\\d{3})(\\\\d{6,7})\", \"$1 $2\", [\"2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])\", \"9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{7,8})\", \"$1 $2\", [\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"], \"(0$1)\"], [\"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"58\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[24-9]\"], \"(0$1)\"]], \"0\"], PL: [\"48\", \"00\", \"6\\\\d{5}(?:\\\\d{2})?|8\\\\d{9}|[1-9]\\\\d{6}(?:\\\\d{2})?\", [6, 7, 8, 9, 10], [[\"(\\\\d{5})\", \"$1\", [\"19\"]], [\"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"11|64\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1\", \"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"64\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[2-8]|[2-7]|8[1-79]|9[145]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"8\"]]]], PM: [\"508\", \"00\", \"(?:[45]|80\\\\d\\\\d)\\\\d{5}\", [6, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[45]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\"], PR: [\"1\", \"011\", \"(?:[589]\\\\d\\\\d|787)\\\\d{7}\", [10], 0, \"1\", 0, 0, 0, 0, \"787|939\"], PS: [\"970\", \"00\", \"[2489]2\\\\d{6}|(?:1\\\\d|5)\\\\d{8}\", [8, 9, 10], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2489]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]], \"0\"], PT: [\"351\", \"00\", \"1693\\\\d{5}|(?:[26-9]\\\\d|30)\\\\d{7}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2[12]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"16|[236-9]\"]]]], PW: [\"680\", \"01[12]\", \"(?:[24-8]\\\\d\\\\d|345|900)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]]]], PY: [\"595\", \"00\", \"59\\\\d{4,6}|9\\\\d{5,10}|(?:[2-46-8]\\\\d|5[0-8])\\\\d{4,7}\", [6, 7, 8, 9, 10, 11], [[\"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"[2-9]0\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{4,5})\", \"$1 $2\", [\"2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"87\"]], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"9(?:[5-79]|8[1-6])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-8]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"]]], \"0\"], QA: [\"974\", \"00\", \"[2-7]\\\\d{7}|800\\\\d{4}(?:\\\\d{2})?|2\\\\d{6}\", [7, 8, 9], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"2[126]|8\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]\"]]]], RE: [\"262\", \"00\", \"976\\\\d{6}|(?:26|[68]\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2689]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, \"26[23]|69|[89]\"], RO: [\"40\", \"00\", \"(?:[2378]\\\\d|90)\\\\d{7}|[23]\\\\d{5}\", [6, 9], [[\"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"2[3-6]\", \"2[3-6]\\\\d9\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"219|31\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[23]1\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[237-9]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, 0, 0, \" int \"], RS: [\"381\", \"00\", \"38[02-9]\\\\d{6,9}|6\\\\d{7,9}|90\\\\d{4,8}|38\\\\d{5,6}|(?:7\\\\d\\\\d|800)\\\\d{3,9}|(?:[12]\\\\d|3[0-79])\\\\d{5,10}\", [6, 7, 8, 9, 10, 11, 12], [[\"(\\\\d{3})(\\\\d{3,9})\", \"$1 $2\", [\"(?:2[389]|39)0|[7-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{5,10})\", \"$1 $2\", [\"[1-36]\"], \"0$1\"]], \"0\"], RU: [\"7\", \"810\", \"8\\\\d{13}|[347-9]\\\\d{9}\", [10, 14], [[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"7(?:1[0-8]|2[1-9])\", \"7(?:1(?:[0-6]2|7|8[27])|2(?:1[23]|[2-9]2))\", \"7(?:1(?:[0-6]2|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2\"], \"8 ($1)\", 1], [\"(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"7(?:1[0-68]|2[1-9])\", \"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))\", \"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]\"], \"8 ($1)\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"8 ($1)\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[349]|8(?:[02-7]|1[1-8])\"], \"8 ($1)\", 1], [\"(\\\\d{4})(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"8\"], \"8 ($1)\"]], \"8\", 0, 0, 0, 0, \"3[04-689]|[489]\", 0, \"8~10\"], RW: [\"250\", \"00\", \"(?:06|[27]\\\\d\\\\d|[89]00)\\\\d{6}\", [8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"0\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"]]], \"0\"], SA: [\"966\", \"00\", \"92\\\\d{7}|(?:[15]|8\\\\d)\\\\d{8}\", [9, 10], [[\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"9\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"81\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]], \"0\"], SB: [\"677\", \"0[01]\", \"(?:[1-6]|[7-9]\\\\d\\\\d)\\\\d{4}\", [5, 7], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"7|8[4-9]|9(?:[1-8]|9[0-8])\"]]]], SC: [\"248\", \"010|0[0-2]\", \"800\\\\d{4}|(?:[249]\\\\d|64)\\\\d{5}\", [7], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[246]|9[57]\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], SD: [\"249\", \"00\", \"[19]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[19]\"], \"0$1\"]], \"0\"], SE: [\"46\", \"00\", \"(?:[26]\\\\d\\\\d|9)\\\\d{9}|[1-9]\\\\d{8}|[1-689]\\\\d{7}|[1-4689]\\\\d{6}|2\\\\d{5}\", [6, 7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3\", [\"20\"], \"0$1\", 0, \"$1 $2 $3\"], [\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"9(?:00|39|44|9)\"], \"0$1\", 0, \"$1 $2\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})\", \"$1-$2 $3\", [\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"], \"0$1\", 0, \"$1 $2 $3\"], [\"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"8\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3\", [\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"], \"0$1\", 0, \"$1 $2 $3\"], [\"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\", \"$1-$2 $3\", [\"9(?:00|39|44)\"], \"0$1\", 0, \"$1 $2 $3\"], [\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"10|7\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"8\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1-$2 $3 $4\", [\"9\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4 $5\", [\"[26]\"], \"0$1\", 0, \"$1 $2 $3 $4 $5\"]], \"0\"], SG: [\"65\", \"0[0-3]\\\\d\", \"(?:(?:1\\\\d|8)\\\\d\\\\d|7000)\\\\d{7}|[3689]\\\\d{7}\", [8, 10, 11], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[369]|8(?:0[1-5]|[1-9])\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]], [\"(\\\\d{4})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]]]], SH: [\"290\", \"00\", \"(?:[256]\\\\d|8)\\\\d{3}\", [4, 5], 0, 0, 0, 0, 0, 0, \"[256]\"], SI: [\"386\", \"00|10(?:22|66|88|99)\", \"[1-7]\\\\d{7}|8\\\\d{4,7}|90\\\\d{4,6}\", [5, 6, 7, 8], [[\"(\\\\d{2})(\\\\d{3,6})\", \"$1 $2\", [\"8[09]|9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"59|8\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[37][01]|4[0139]|51|6\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[1-57]\"], \"(0$1)\"]], \"0\", 0, 0, 0, 0, 0, 0, \"00\"], SJ: [\"47\", \"00\", \"0\\\\d{4}|(?:[489]\\\\d|[57]9)\\\\d{6}\", [5, 8], 0, 0, 0, 0, 0, 0, \"79\"], SK: [\"421\", \"00\", \"[2-689]\\\\d{8}|[2-59]\\\\d{6}|[2-5]\\\\d{5}\", [6, 7, 9], [[\"(\\\\d)(\\\\d{2})(\\\\d{3,4})\", \"$1 $2 $3\", [\"21\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-5][1-8]1\", \"[3-5][1-8]1[67]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"2\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[689]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"[3-5]\"], \"0$1\"]], \"0\"], SL: [\"232\", \"00\", \"(?:[237-9]\\\\d|66)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[236-9]\"], \"(0$1)\"]], \"0\"], SM: [\"378\", \"00\", \"(?:0549|[5-7]\\\\d)\\\\d{6}\", [8, 10], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-7]\"]], [\"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"0\"]]], 0, 0, \"([89]\\\\d{5})$\", \"0549$1\"], SN: [\"221\", \"00\", \"(?:[378]\\\\d|93)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[379]\"]]]], SO: [\"252\", \"00\", \"[346-9]\\\\d{8}|[12679]\\\\d{7}|[1-5]\\\\d{6}|[1348]\\\\d{5}\", [6, 7, 8, 9], [[\"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"8[125]\"]], [\"(\\\\d{6})\", \"$1\", [\"[134]\"]], [\"(\\\\d)(\\\\d{6})\", \"$1 $2\", [\"[15]|2[0-79]|3[0-46-8]|4[0-7]\"]], [\"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"24|[67]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[3478]|64|90\"]], [\"(\\\\d{2})(\\\\d{5,7})\", \"$1 $2\", [\"1|28|6(?:0[5-7]|[1-35-9])|9[2-9]\"]]], \"0\"], SR: [\"597\", \"00\", \"(?:[2-5]|68|[78]\\\\d)\\\\d{5}\", [6, 7], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"56\"]], [\"(\\\\d{3})(\\\\d{3})\", \"$1-$2\", [\"[2-5]\"]], [\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[6-8]\"]]]], SS: [\"211\", \"00\", \"[19]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[19]\"], \"0$1\"]], \"0\"], ST: [\"239\", \"00\", \"(?:22|9\\\\d)\\\\d{5}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[29]\"]]]], SV: [\"503\", \"00\", \"[267]\\\\d{7}|[89]00\\\\d{4}(?:\\\\d{4})?\", [7, 8, 11], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[89]\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[267]\"]], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"]]]], SX: [\"1\", \"011\", \"7215\\\\d{6}|(?:[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|(5\\\\d{6})$\", \"721$1\", 0, \"721\"], SY: [\"963\", \"00\", \"[1-39]\\\\d{8}|[1-5]\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-5]\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\", 1]], \"0\"], SZ: [\"268\", \"00\", \"0800\\\\d{4}|(?:[237]\\\\d|900)\\\\d{6}\", [8, 9], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[0237]\"]], [\"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"9\"]]]], TA: [\"290\", \"00\", \"8\\\\d{3}\", [4], 0, 0, 0, 0, 0, 0, \"8\"], TC: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|649|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-479]\\\\d{6})$\", \"649$1\", 0, \"649\"], TD: [\"235\", \"00|16\", \"(?:22|[69]\\\\d|77)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2679]\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], TG: [\"228\", \"00\", \"[279]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[279]\"]]]], TH: [\"66\", \"00[1-9]\", \"(?:001800|[2-57]|[689]\\\\d)\\\\d{7}|1\\\\d{7,9}\", [8, 9, 10, 13], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[13-9]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]], \"0\"], TJ: [\"992\", \"810\", \"(?:00|[1-57-9]\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{6})(\\\\d)(\\\\d{2})\", \"$1 $2 $3\", [\"331\", \"3317\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[34]7|91[78]\"]], [\"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1 $2 $3\", [\"3[1-5]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[0-57-9]\"]]], 0, 0, 0, 0, 0, 0, 0, \"8~10\"], TK: [\"690\", \"00\", \"[2-47]\\\\d{3,6}\", [4, 5, 6, 7]], TL: [\"670\", \"00\", \"7\\\\d{7}|(?:[2-47]\\\\d|[89]0)\\\\d{5}\", [7, 8], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-489]|70\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"7\"]]]], TM: [\"993\", \"810\", \"[1-6]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"12\"], \"(8 $1)\"], [\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[1-5]\"], \"(8 $1)\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"6\"], \"8 $1\"]], \"8\", 0, 0, 0, 0, 0, 0, \"8~10\"], TN: [\"216\", \"00\", \"[2-57-9]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-57-9]\"]]]], TO: [\"676\", \"00\", \"(?:0800|(?:[5-8]\\\\d\\\\d|999)\\\\d)\\\\d{3}|[2-8]\\\\d{4}\", [5, 7], [[\"(\\\\d{2})(\\\\d{3})\", \"$1-$2\", [\"[2-4]|50|6[09]|7[0-24-69]|8[05]\"]], [\"(\\\\d{4})(\\\\d{3})\", \"$1 $2\", [\"0\"]], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[5-9]\"]]]], TR: [\"90\", \"00\", \"4\\\\d{6}|8\\\\d{11,12}|(?:[2-58]\\\\d\\\\d|900)\\\\d{7}\", [7, 10, 12, 13], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"512|8[01589]|90\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5(?:[0-59]|61)\", \"5(?:[0-59]|616)\", \"5(?:[0-59]|6161)\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24][1-8]|3[1-9]\"], \"(0$1)\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{6,7})\", \"$1 $2 $3\", [\"80\"], \"0$1\", 1]], \"0\"], TT: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-46-8]\\\\d{6})$\", \"868$1\", 0, \"868\"], TV: [\"688\", \"00\", \"(?:2|7\\\\d\\\\d|90)\\\\d{4}\", [5, 6, 7], [[\"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"2\"]], [\"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"90\"]], [\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"7\"]]]], TW: [\"886\", \"0(?:0[25-79]|19)\", \"[2-689]\\\\d{8}|7\\\\d{9,10}|[2-8]\\\\d{7}|2\\\\d{6}\", [7, 8, 9, 10, 11], [[\"(\\\\d{2})(\\\\d)(\\\\d{4})\", \"$1 $2 $3\", [\"202\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[258]0\"], \"0$1\"], [\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]\", \"[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[49]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, 0, 0, \"#\"], TZ: [\"255\", \"00[056]\", \"(?:[26-8]\\\\d|41|90)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[24]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[67]\"], \"0$1\"]], \"0\"], UA: [\"380\", \"00\", \"[89]\\\\d{9}|[3-9]\\\\d{8}\", [9, 10], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]\", \"6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])\", \"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-7]|89|9[1-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, 0, \"0~0\"], UG: [\"256\", \"00[057]\", \"800\\\\d{6}|(?:[29]0|[347]\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"202\", \"2024\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[27-9]|4(?:6[45]|[7-9])\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"[34]\"], \"0$1\"]], \"0\"], US: [\"1\", \"011\", \"[2-9]\\\\d{9}|3\\\\d{6}\", [10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"310\"], 0, 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"($1) $2-$3\", [\"[2-9]\"], 0, 1, \"$1-$2-$3\"]], \"1\", 0, 0, 0, 0, 0, [[\"5(?:05(?:[2-57-9]\\\\d\\\\d|6(?:[0-35-9]\\\\d|44))|82(?:2(?:0[0-3]|[268]2)|3(?:0[02]|22|33)|4(?:00|4[24]|65|82)|5(?:00|29|58|83)|6(?:00|66|82)|7(?:58|77)|8(?:00|42|5[25]|88)|9(?:00|9[89])))\\\\d{4}|(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[01356]|3[0-24679]|4[167]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[0-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-289]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\"], [\"\"], [\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"], [\"900[2-9]\\\\d{6}\"], [\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\\\d{6}\"]]], UY: [\"598\", \"0(?:0|1[3-9]\\\\d)\", \"4\\\\d{9}|[1249]\\\\d{7}|(?:[49]\\\\d|80)\\\\d{5}\", [7, 8, 10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"405|8|90\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[124]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"4\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, 0, \"00\", \" int. \"], UZ: [\"998\", \"810\", \"(?:33|55|[679]\\\\d|88)\\\\d{7}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[35-9]\"], \"8 $1\"]], \"8\", 0, 0, 0, 0, 0, 0, \"8~10\"], VA: [\"39\", \"00\", \"0\\\\d{5,10}|3[0-8]\\\\d{7,10}|55\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?|(?:1\\\\d|39)\\\\d{7,8}\", [6, 7, 8, 9, 10, 11], 0, 0, 0, 0, 0, 0, \"06698\"], VC: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|784|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-7]\\\\d{6})$\", \"784$1\", 0, \"784\"], VE: [\"58\", \"00\", \"[68]00\\\\d{7}|(?:[24]\\\\d|[59]0)\\\\d{8}\", [10], [[\"(\\\\d{3})(\\\\d{7})\", \"$1-$2\", [\"[24-689]\"], \"0$1\"]], \"0\"], VG: [\"1\", \"011\", \"(?:284|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-578]\\\\d{6})$\", \"284$1\", 0, \"284\"], VI: [\"1\", \"011\", \"[58]\\\\d{9}|(?:34|90)0\\\\d{7}\", [10], 0, \"1\", 0, \"1|([2-9]\\\\d{6})$\", \"340$1\", 0, \"340\"], VN: [\"84\", \"00\", \"[12]\\\\d{9}|[135-9]\\\\d{8}|[16]\\\\d{7}|[16-8]\\\\d{6}\", [7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"80\"], \"0$1\", 1], [\"(\\\\d{4})(\\\\d{4,6})\", \"$1 $2\", [\"1\"], 0, 1], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[69]\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[3578]\"], \"0$1\", 1], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[48]\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\", 1]], \"0\"], VU: [\"678\", \"00\", \"[57-9]\\\\d{6}|(?:[238]\\\\d|48)\\\\d{3}\", [5, 7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[57-9]\"]]]], WF: [\"681\", \"00\", \"(?:40|72)\\\\d{4}|8\\\\d{5}(?:\\\\d{3})?\", [6, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[478]\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]]]], WS: [\"685\", \"0\", \"(?:[2-6]|8\\\\d{5})\\\\d{4}|[78]\\\\d{6}|[68]\\\\d{5}\", [5, 6, 7, 10], [[\"(\\\\d{5})\", \"$1\", [\"[2-5]|6[1-9]\"]], [\"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"[68]\"]], [\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"7\"]]]], XK: [\"383\", \"00\", \"[23]\\\\d{7,8}|(?:4\\\\d\\\\d|[89]00)\\\\d{5}\", [8, 9], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-4]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[23]\"], \"0$1\"]], \"0\"], YE: [\"967\", \"00\", \"(?:1|7\\\\d)\\\\d{7}|[1-7]\\\\d{6}\", [7, 8, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-6]|7[24-68]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], \"0\"], YT: [\"262\", \"00\", \"80\\\\d{7}|(?:26|63)9\\\\d{6}\", [9], 0, \"0\", 0, 0, 0, 0, \"269|63\"], ZA: [\"27\", \"00\", \"[1-79]\\\\d{8}|8\\\\d{4,9}\", [5, 6, 7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"8[1-4]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"8[1-4]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"860\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]], \"0\"], ZM: [\"260\", \"00\", \"800\\\\d{6}|(?:21|63|[79]\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[28]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"[79]\"], \"0$1\"]], \"0\"], ZW: [\"263\", \"00\", \"2(?:[0-57-9]\\\\d{6,8}|6[0-24-9]\\\\d{6,7})|[38]\\\\d{9}|[35-8]\\\\d{8}|[3-6]\\\\d{7}|[1-689]\\\\d{6}|[1-3569]\\\\d{5}|[1356]\\\\d{4}\", [5, 6, 7, 8, 9, 10], [[\"(\\\\d{3})(\\\\d{3,5})\", \"$1 $2\", [\"2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"[49]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"80\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2\", \"2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)\", \"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"8\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3,5})\", \"$1 $2\", [\"1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"29[013-9]|39|54\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3,5})\", \"$1 $2\", [\"(?:25|54)8\", \"258|5483\"], \"0$1\"]], \"0\"] }, nonGeographic: { 800: [\"800\", 0, \"(?:00|[1-9]\\\\d)\\\\d{6}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"\\\\d\"]]], 0, 0, 0, 0, 0, 0, [0, 0, [\"(?:00|[1-9]\\\\d)\\\\d{6}\"]]], 808: [\"808\", 0, \"[1-9]\\\\d{7}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[1-9]\"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, 0, [\"[1-9]\\\\d{7}\"]]], 870: [\"870\", 0, \"7\\\\d{11}|[35-7]\\\\d{8}\", [9, 12], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[35-7]\"]]], 0, 0, 0, 0, 0, 0, [0, [\"(?:[356]|774[45])\\\\d{8}|7[6-8]\\\\d{7}\"]]], 878: [\"878\", 0, \"10\\\\d{10}\", [12], [[\"(\\\\d{2})(\\\\d{5})(\\\\d{5})\", \"$1 $2 $3\", [\"1\"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, [\"10\\\\d{10}\"]]], 881: [\"881\", 0, \"[0-36-9]\\\\d{8}\", [9], [[\"(\\\\d)(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\", [\"[0-36-9]\"]]], 0, 0, 0, 0, 0, 0, [0, [\"[0-36-9]\\\\d{8}\"]]], 882: [\"882\", 0, \"[13]\\\\d{6}(?:\\\\d{2,5})?|285\\\\d{9}|(?:[19]\\\\d|49)\\\\d{6}\", [7, 8, 9, 10, 11, 12], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"16|342\"]], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"4\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[19]\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"3[23]\"]], [\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"34[57]\"]], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"34\"]], [\"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\", \"$1 $2 $3\", [\"[1-3]\"]]], 0, 0, 0, 0, 0, 0, [0, [\"342\\\\d{4}|(?:337|49)\\\\d{6}|3(?:2|47|7\\\\d{3})\\\\d{7}\", [7, 8, 9, 10, 12]], 0, 0, 0, 0, 0, 0, [\"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\\\d{4}|6\\\\d{5,10})|(?:(?:285\\\\d\\\\d|3(?:45|[69]\\\\d{3}))\\\\d|9[89])\\\\d{6}\"]]], 883: [\"883\", 0, \"(?:210|370\\\\d\\\\d)\\\\d{7}|51\\\\d{7}(?:\\\\d{3})?\", [9, 10, 12], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"510\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"]], [\"(\\\\d{4})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"51[13]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[35]\"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, [\"(?:210|(?:370[1-9]|51[013]0)\\\\d)\\\\d{7}|5100\\\\d{5}\"]]], 888: [\"888\", 0, \"\\\\d{11}\", [11], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\"]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, [\"\\\\d{11}\"]]], 979: [\"979\", 0, \"[1359]\\\\d{8}\", [9], [[\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[1359]\"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, [\"[1359]\\\\d{8}\"]]] } };\nfunction Ye(e, d) {\n  var t = Array.prototype.slice.call(d);\n  return t.push(Xe), e.apply(this, t);\n}\nfunction j(e) {\n  return j = typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\" ? function(d) {\n    return typeof d;\n  } : function(d) {\n    return d && typeof Symbol == \"function\" && d.constructor === Symbol && d !== Symbol.prototype ? \"symbol\" : typeof d;\n  }, j(e);\n}\nfunction J(e, d) {\n  for (var t = 0; t < d.length; t++) {\n    var n = d[t];\n    n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n  }\n}\nfunction Ze(e, d, t) {\n  return d && J(e.prototype, d), t && J(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e;\n}\nfunction Je(e, d) {\n  if (!(e instanceof d))\n    throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction qe(e, d) {\n  if (typeof d != \"function\" && d !== null)\n    throw new TypeError(\"Super expression must either be null or a function\");\n  e.prototype = Object.create(d && d.prototype, { constructor: { value: e, writable: !0, configurable: !0 } }), Object.defineProperty(e, \"prototype\", { writable: !1 }), d && w(e, d);\n}\nfunction Qe(e) {\n  var d = we();\n  return function() {\n    var n = I(e), r;\n    if (d) {\n      var i = I(this).constructor;\n      r = Reflect.construct(n, arguments, i);\n    } else\n      r = n.apply(this, arguments);\n    return ed(this, r);\n  };\n}\nfunction ed(e, d) {\n  if (d && (j(d) === \"object\" || typeof d == \"function\"))\n    return d;\n  if (d !== void 0)\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return Ne(e);\n}\nfunction Ne(e) {\n  if (e === void 0)\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nfunction U(e) {\n  var d = typeof Map == \"function\" ? /* @__PURE__ */ new Map() : void 0;\n  return U = function(n) {\n    if (n === null || !dd(n))\n      return n;\n    if (typeof n != \"function\")\n      throw new TypeError(\"Super expression must either be null or a function\");\n    if (typeof d < \"u\") {\n      if (d.has(n))\n        return d.get(n);\n      d.set(n, r);\n    }\n    function r() {\n      return _(n, arguments, I(this).constructor);\n    }\n    return r.prototype = Object.create(n.prototype, { constructor: { value: r, enumerable: !1, writable: !0, configurable: !0 } }), w(r, n);\n  }, U(e);\n}\nfunction _(e, d, t) {\n  return we() ? _ = Reflect.construct : _ = function(r, i, a) {\n    var $ = [null];\n    $.push.apply($, i);\n    var u = Function.bind.apply(r, $), o = new u();\n    return a && w(o, a.prototype), o;\n  }, _.apply(null, arguments);\n}\nfunction we() {\n  if (typeof Reflect > \"u\" || !Reflect.construct || Reflect.construct.sham)\n    return !1;\n  if (typeof Proxy == \"function\")\n    return !0;\n  try {\n    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {\n    })), !0;\n  } catch {\n    return !1;\n  }\n}\nfunction dd(e) {\n  return Function.toString.call(e).indexOf(\"[native code]\") !== -1;\n}\nfunction w(e, d) {\n  return w = Object.setPrototypeOf || function(n, r) {\n    return n.__proto__ = r, n;\n  }, w(e, d);\n}\nfunction I(e) {\n  return I = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, I(e);\n}\nvar m = /* @__PURE__ */ function(e) {\n  qe(t, e);\n  var d = Qe(t);\n  function t(n) {\n    var r;\n    return Je(this, t), r = d.call(this, n), Object.setPrototypeOf(Ne(r), t.prototype), r.name = r.constructor.name, r;\n  }\n  return Ze(t);\n}(/* @__PURE__ */ U(Error)), K = 2, td = 17, nd = 3, g = \"0-9０-９٠-٩۰-۹\", rd = \"-‐-―−ー－\", id = \"／/\", $d = \"．.\", ad = \"  ­​⁠　\", od = \"()（）［］\\\\[\\\\]\", ud = \"~⁓∼～\", T = \"\".concat(rd).concat(id).concat($d).concat(ad).concat(od).concat(ud), W = \"+＋\";\nfunction q(e, d) {\n  e = e.split(\"-\"), d = d.split(\"-\");\n  for (var t = e[0].split(\".\"), n = d[0].split(\".\"), r = 0; r < 3; r++) {\n    var i = Number(t[r]), a = Number(n[r]);\n    if (i > a)\n      return 1;\n    if (a > i)\n      return -1;\n    if (!isNaN(i) && isNaN(a))\n      return 1;\n    if (isNaN(i) && !isNaN(a))\n      return -1;\n  }\n  return e[1] && d[1] ? e[1] > d[1] ? 1 : e[1] < d[1] ? -1 : 0 : !e[1] && d[1] ? 1 : e[1] && !d[1] ? -1 : 0;\n}\nfunction F(e) {\n  return F = typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\" ? function(d) {\n    return typeof d;\n  } : function(d) {\n    return d && typeof Symbol == \"function\" && d.constructor === Symbol && d !== Symbol.prototype ? \"symbol\" : typeof d;\n  }, F(e);\n}\nfunction A(e, d) {\n  if (!(e instanceof d))\n    throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction Q(e, d) {\n  for (var t = 0; t < d.length; t++) {\n    var n = d[t];\n    n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n  }\n}\nfunction D(e, d, t) {\n  return d && Q(e.prototype, d), t && Q(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e;\n}\nvar sd = \"1.2.0\", ld = \"1.7.35\", ee = \" ext. \", fd = /^\\d+$/, l = /* @__PURE__ */ function() {\n  function e(d) {\n    A(this, e), yd(d), this.metadata = d, Ie.call(this, d);\n  }\n  return D(e, [{\n    key: \"getCountries\",\n    value: function() {\n      return Object.keys(this.metadata.countries).filter(function(t) {\n        return t !== \"001\";\n      });\n    }\n  }, {\n    key: \"getCountryMetadata\",\n    value: function(t) {\n      return this.metadata.countries[t];\n    }\n  }, {\n    key: \"nonGeographic\",\n    value: function() {\n      if (!(this.v1 || this.v2 || this.v3))\n        return this.metadata.nonGeographic || this.metadata.nonGeographical;\n    }\n  }, {\n    key: \"hasCountry\",\n    value: function(t) {\n      return this.getCountryMetadata(t) !== void 0;\n    }\n  }, {\n    key: \"hasCallingCode\",\n    value: function(t) {\n      if (this.getCountryCodesForCallingCode(t))\n        return !0;\n      if (this.nonGeographic()) {\n        if (this.nonGeographic()[t])\n          return !0;\n      } else {\n        var n = this.countryCallingCodes()[t];\n        if (n && n.length === 1 && n[0] === \"001\")\n          return !0;\n      }\n    }\n  }, {\n    key: \"isNonGeographicCallingCode\",\n    value: function(t) {\n      return this.nonGeographic() ? !!this.nonGeographic()[t] : !this.getCountryCodesForCallingCode(t);\n    }\n    // Deprecated.\n  }, {\n    key: \"country\",\n    value: function(t) {\n      return this.selectNumberingPlan(t);\n    }\n  }, {\n    key: \"selectNumberingPlan\",\n    value: function(t, n) {\n      if (t && fd.test(t) && (n = t, t = null), t && t !== \"001\") {\n        if (!this.hasCountry(t))\n          throw new Error(\"Unknown country: \".concat(t));\n        this.numberingPlan = new de(this.getCountryMetadata(t), this);\n      } else if (n) {\n        if (!this.hasCallingCode(n))\n          throw new Error(\"Unknown calling code: \".concat(n));\n        this.numberingPlan = new de(this.getNumberingPlanMetadata(n), this);\n      } else\n        this.numberingPlan = void 0;\n      return this;\n    }\n  }, {\n    key: \"getCountryCodesForCallingCode\",\n    value: function(t) {\n      var n = this.countryCallingCodes()[t];\n      if (n)\n        return n.length === 1 && n[0].length === 3 ? void 0 : n;\n    }\n  }, {\n    key: \"getCountryCodeForCallingCode\",\n    value: function(t) {\n      var n = this.getCountryCodesForCallingCode(t);\n      if (n)\n        return n[0];\n    }\n  }, {\n    key: \"getNumberingPlanMetadata\",\n    value: function(t) {\n      var n = this.getCountryCodeForCallingCode(t);\n      if (n)\n        return this.getCountryMetadata(n);\n      if (this.nonGeographic()) {\n        var r = this.nonGeographic()[t];\n        if (r)\n          return r;\n      } else {\n        var i = this.countryCallingCodes()[t];\n        if (i && i.length === 1 && i[0] === \"001\")\n          return this.metadata.countries[\"001\"];\n      }\n    }\n    // Deprecated.\n  }, {\n    key: \"countryCallingCode\",\n    value: function() {\n      return this.numberingPlan.callingCode();\n    }\n    // Deprecated.\n  }, {\n    key: \"IDDPrefix\",\n    value: function() {\n      return this.numberingPlan.IDDPrefix();\n    }\n    // Deprecated.\n  }, {\n    key: \"defaultIDDPrefix\",\n    value: function() {\n      return this.numberingPlan.defaultIDDPrefix();\n    }\n    // Deprecated.\n  }, {\n    key: \"nationalNumberPattern\",\n    value: function() {\n      return this.numberingPlan.nationalNumberPattern();\n    }\n    // Deprecated.\n  }, {\n    key: \"possibleLengths\",\n    value: function() {\n      return this.numberingPlan.possibleLengths();\n    }\n    // Deprecated.\n  }, {\n    key: \"formats\",\n    value: function() {\n      return this.numberingPlan.formats();\n    }\n    // Deprecated.\n  }, {\n    key: \"nationalPrefixForParsing\",\n    value: function() {\n      return this.numberingPlan.nationalPrefixForParsing();\n    }\n    // Deprecated.\n  }, {\n    key: \"nationalPrefixTransformRule\",\n    value: function() {\n      return this.numberingPlan.nationalPrefixTransformRule();\n    }\n    // Deprecated.\n  }, {\n    key: \"leadingDigits\",\n    value: function() {\n      return this.numberingPlan.leadingDigits();\n    }\n    // Deprecated.\n  }, {\n    key: \"hasTypes\",\n    value: function() {\n      return this.numberingPlan.hasTypes();\n    }\n    // Deprecated.\n  }, {\n    key: \"type\",\n    value: function(t) {\n      return this.numberingPlan.type(t);\n    }\n    // Deprecated.\n  }, {\n    key: \"ext\",\n    value: function() {\n      return this.numberingPlan.ext();\n    }\n  }, {\n    key: \"countryCallingCodes\",\n    value: function() {\n      return this.v1 ? this.metadata.country_phone_code_to_countries : this.metadata.country_calling_codes;\n    }\n    // Deprecated.\n  }, {\n    key: \"chooseCountryByCountryCallingCode\",\n    value: function(t) {\n      return this.selectNumberingPlan(t);\n    }\n  }, {\n    key: \"hasSelectedNumberingPlan\",\n    value: function() {\n      return this.numberingPlan !== void 0;\n    }\n  }]), e;\n}(), de = /* @__PURE__ */ function() {\n  function e(d, t) {\n    A(this, e), this.globalMetadataObject = t, this.metadata = d, Ie.call(this, t.metadata);\n  }\n  return D(e, [{\n    key: \"callingCode\",\n    value: function() {\n      return this.metadata[0];\n    }\n    // Formatting information for regions which share\n    // a country calling code is contained by only one region\n    // for performance reasons. For example, for NANPA region\n    // (\"North American Numbering Plan Administration\",\n    //  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n    // it will be contained in the metadata for `US`.\n  }, {\n    key: \"getDefaultCountryMetadataForRegion\",\n    value: function() {\n      return this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode());\n    }\n    // Is always present.\n  }, {\n    key: \"IDDPrefix\",\n    value: function() {\n      if (!(this.v1 || this.v2))\n        return this.metadata[1];\n    }\n    // Is only present when a country supports multiple IDD prefixes.\n  }, {\n    key: \"defaultIDDPrefix\",\n    value: function() {\n      if (!(this.v1 || this.v2))\n        return this.metadata[12];\n    }\n  }, {\n    key: \"nationalNumberPattern\",\n    value: function() {\n      return this.v1 || this.v2 ? this.metadata[1] : this.metadata[2];\n    }\n    // \"possible length\" data is always present in Google's metadata.\n  }, {\n    key: \"possibleLengths\",\n    value: function() {\n      if (!this.v1)\n        return this.metadata[this.v2 ? 2 : 3];\n    }\n  }, {\n    key: \"_getFormats\",\n    value: function(t) {\n      return t[this.v1 ? 2 : this.v2 ? 3 : 4];\n    }\n    // For countries of the same region (e.g. NANPA)\n    // formats are all stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n  }, {\n    key: \"formats\",\n    value: function() {\n      var t = this, n = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || [];\n      return n.map(function(r) {\n        return new cd(r, t);\n      });\n    }\n  }, {\n    key: \"nationalPrefix\",\n    value: function() {\n      return this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5];\n    }\n  }, {\n    key: \"_getNationalPrefixFormattingRule\",\n    value: function(t) {\n      return t[this.v1 ? 4 : this.v2 ? 5 : 6];\n    }\n    // For countries of the same region (e.g. NANPA)\n    // national prefix formatting rule is stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n  }, {\n    key: \"nationalPrefixFormattingRule\",\n    value: function() {\n      return this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion());\n    }\n  }, {\n    key: \"_nationalPrefixForParsing\",\n    value: function() {\n      return this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7];\n    }\n  }, {\n    key: \"nationalPrefixForParsing\",\n    value: function() {\n      return this._nationalPrefixForParsing() || this.nationalPrefix();\n    }\n  }, {\n    key: \"nationalPrefixTransformRule\",\n    value: function() {\n      return this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8];\n    }\n  }, {\n    key: \"_getNationalPrefixIsOptionalWhenFormatting\",\n    value: function() {\n      return !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9];\n    }\n    // For countries of the same region (e.g. NANPA)\n    // \"national prefix is optional when formatting\" flag is\n    // stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n  }, {\n    key: \"nationalPrefixIsOptionalWhenFormattingInNationalFormat\",\n    value: function() {\n      return this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) || this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion());\n    }\n  }, {\n    key: \"leadingDigits\",\n    value: function() {\n      return this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10];\n    }\n  }, {\n    key: \"types\",\n    value: function() {\n      return this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11];\n    }\n  }, {\n    key: \"hasTypes\",\n    value: function() {\n      return this.types() && this.types().length === 0 ? !1 : !!this.types();\n    }\n  }, {\n    key: \"type\",\n    value: function(t) {\n      if (this.hasTypes() && te(this.types(), t))\n        return new pd(te(this.types(), t), this);\n    }\n  }, {\n    key: \"ext\",\n    value: function() {\n      return this.v1 || this.v2 ? ee : this.metadata[13] || ee;\n    }\n  }]), e;\n}(), cd = /* @__PURE__ */ function() {\n  function e(d, t) {\n    A(this, e), this._format = d, this.metadata = t;\n  }\n  return D(e, [{\n    key: \"pattern\",\n    value: function() {\n      return this._format[0];\n    }\n  }, {\n    key: \"format\",\n    value: function() {\n      return this._format[1];\n    }\n  }, {\n    key: \"leadingDigitsPatterns\",\n    value: function() {\n      return this._format[2] || [];\n    }\n  }, {\n    key: \"nationalPrefixFormattingRule\",\n    value: function() {\n      return this._format[3] || this.metadata.nationalPrefixFormattingRule();\n    }\n  }, {\n    key: \"nationalPrefixIsOptionalWhenFormattingInNationalFormat\",\n    value: function() {\n      return !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat();\n    }\n  }, {\n    key: \"nationalPrefixIsMandatoryWhenFormattingInNationalFormat\",\n    value: function() {\n      return this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat();\n    }\n    // Checks whether national prefix formatting rule contains national prefix.\n  }, {\n    key: \"usesNationalPrefix\",\n    value: function() {\n      return !!(this.nationalPrefixFormattingRule() && // Check that national prefix formatting rule is not a \"dummy\" one.\n      !hd.test(this.nationalPrefixFormattingRule()));\n    }\n  }, {\n    key: \"internationalFormat\",\n    value: function() {\n      return this._format[5] || this.format();\n    }\n  }]), e;\n}(), hd = /^\\(?\\$1\\)?$/, pd = /* @__PURE__ */ function() {\n  function e(d, t) {\n    A(this, e), this.type = d, this.metadata = t;\n  }\n  return D(e, [{\n    key: \"pattern\",\n    value: function() {\n      return this.metadata.v1 ? this.type : this.type[0];\n    }\n  }, {\n    key: \"possibleLengths\",\n    value: function() {\n      if (!this.metadata.v1)\n        return this.type[1] || this.metadata.possibleLengths();\n    }\n  }]), e;\n}();\nfunction te(e, d) {\n  switch (d) {\n    case \"FIXED_LINE\":\n      return e[0];\n    case \"MOBILE\":\n      return e[1];\n    case \"TOLL_FREE\":\n      return e[2];\n    case \"PREMIUM_RATE\":\n      return e[3];\n    case \"PERSONAL_NUMBER\":\n      return e[4];\n    case \"VOICEMAIL\":\n      return e[5];\n    case \"UAN\":\n      return e[6];\n    case \"PAGER\":\n      return e[7];\n    case \"VOIP\":\n      return e[8];\n    case \"SHARED_COST\":\n      return e[9];\n  }\n}\nfunction yd(e) {\n  if (!e)\n    throw new Error(\"[libphonenumber-js] `metadata` argument not passed. Check your arguments.\");\n  if (!M(e) || !M(e.countries))\n    throw new Error(\"[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` child object property. Got \".concat(M(e) ? \"an object of shape: { \" + Object.keys(e).join(\", \") + \" }\" : \"a \" + md(e) + \": \" + e, \".\"));\n}\nvar M = function(d) {\n  return F(d) === \"object\";\n}, md = function(d) {\n  return F(d);\n};\nfunction z(e, d) {\n  if (d = new l(d), d.hasCountry(e))\n    return d.country(e).countryCallingCode();\n  throw new Error(\"Unknown country: \".concat(e));\n}\nfunction gd(e, d) {\n  return d.countries[e] !== void 0;\n}\nfunction Ie(e) {\n  var d = e.version;\n  typeof d == \"number\" ? (this.v1 = d === 1, this.v2 = d === 2, this.v3 = d === 3, this.v4 = d === 4) : d ? q(d, sd) === -1 ? this.v2 = !0 : q(d, ld) === -1 ? this.v3 = !0 : this.v4 = !0 : this.v1 = !0;\n}\nvar bd = \";ext=\", O = function(d) {\n  return \"([\".concat(g, \"]{1,\").concat(d, \"})\");\n};\nfunction Ee(e) {\n  var d = \"20\", t = \"15\", n = \"9\", r = \"6\", i = \"[  \\\\t,]*\", a = \"[:\\\\.．]?[  \\\\t,-]*\", $ = \"#?\", u = \"(?:e?xt(?:ensi(?:ó?|ó))?n?|ｅ?ｘｔｎ?|доб|anexo)\", o = \"(?:[xｘ#＃~～]|int|ｉｎｔ)\", c = \"[- ]+\", f = \"[  \\\\t]*\", v = \"(?:,{2}|;)\", P = bd + O(d), xe = i + u + a + O(d) + $, Ae = i + o + a + O(n) + $, De = c + O(r) + \"#\", Re = f + v + a + O(t) + $, Me = f + \"(?:,)+\" + a + O(n) + $;\n  return P + \"|\" + xe + \"|\" + Ae + \"|\" + De + \"|\" + Re + \"|\" + Me;\n}\nvar vd = \"[\" + g + \"]{\" + K + \"}\", Cd = \"[\" + W + \"]{0,1}(?:[\" + T + \"]*[\" + g + \"]){3,}[\" + T + g + \"]*\", Od = new RegExp(\"^[\" + W + \"]{0,1}(?:[\" + T + \"]*[\" + g + \"]){1,2}$\", \"i\"), Pd = Cd + // Phone number extensions\n\"(?:\" + Ee() + \")?\", Nd = new RegExp(\n  // Either a short two-digit-only phone number\n  \"^\" + vd + \"$|^\" + Pd + \"$\",\n  \"i\"\n);\nfunction Se(e) {\n  return e.length >= K && Nd.test(e);\n}\nfunction wd(e) {\n  return Od.test(e);\n}\nvar ne = new RegExp(\"(?:\" + Ee() + \")$\", \"i\");\nfunction Id(e) {\n  var d = e.search(ne);\n  if (d < 0)\n    return {};\n  for (var t = e.slice(0, d), n = e.match(ne), r = 1; r < n.length; ) {\n    if (n[r])\n      return {\n        number: t,\n        ext: n[r]\n      };\n    r++;\n  }\n}\nvar Ed = {\n  0: \"0\",\n  1: \"1\",\n  2: \"2\",\n  3: \"3\",\n  4: \"4\",\n  5: \"5\",\n  6: \"6\",\n  7: \"7\",\n  8: \"8\",\n  9: \"9\",\n  \"０\": \"0\",\n  // Fullwidth digit 0\n  \"１\": \"1\",\n  // Fullwidth digit 1\n  \"２\": \"2\",\n  // Fullwidth digit 2\n  \"３\": \"3\",\n  // Fullwidth digit 3\n  \"４\": \"4\",\n  // Fullwidth digit 4\n  \"５\": \"5\",\n  // Fullwidth digit 5\n  \"６\": \"6\",\n  // Fullwidth digit 6\n  \"７\": \"7\",\n  // Fullwidth digit 7\n  \"８\": \"8\",\n  // Fullwidth digit 8\n  \"９\": \"9\",\n  // Fullwidth digit 9\n  \"٠\": \"0\",\n  // Arabic-indic digit 0\n  \"١\": \"1\",\n  // Arabic-indic digit 1\n  \"٢\": \"2\",\n  // Arabic-indic digit 2\n  \"٣\": \"3\",\n  // Arabic-indic digit 3\n  \"٤\": \"4\",\n  // Arabic-indic digit 4\n  \"٥\": \"5\",\n  // Arabic-indic digit 5\n  \"٦\": \"6\",\n  // Arabic-indic digit 6\n  \"٧\": \"7\",\n  // Arabic-indic digit 7\n  \"٨\": \"8\",\n  // Arabic-indic digit 8\n  \"٩\": \"9\",\n  // Arabic-indic digit 9\n  \"۰\": \"0\",\n  // Eastern-Arabic digit 0\n  \"۱\": \"1\",\n  // Eastern-Arabic digit 1\n  \"۲\": \"2\",\n  // Eastern-Arabic digit 2\n  \"۳\": \"3\",\n  // Eastern-Arabic digit 3\n  \"۴\": \"4\",\n  // Eastern-Arabic digit 4\n  \"۵\": \"5\",\n  // Eastern-Arabic digit 5\n  \"۶\": \"6\",\n  // Eastern-Arabic digit 6\n  \"۷\": \"7\",\n  // Eastern-Arabic digit 7\n  \"۸\": \"8\",\n  // Eastern-Arabic digit 8\n  \"۹\": \"9\"\n  // Eastern-Arabic digit 9\n};\nfunction Sd(e) {\n  return Ed[e];\n}\nfunction _d(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t)\n    return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = Td(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function() {\n      return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction Td(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return re(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return re(e, d);\n  }\n}\nfunction re(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nfunction ie(e) {\n  for (var d = \"\", t = _d(e.split(\"\")), n; !(n = t()).done; ) {\n    var r = n.value;\n    d += Fd(r, d) || \"\";\n  }\n  return d;\n}\nfunction Fd(e, d) {\n  return e === \"+\" ? d ? void 0 : \"+\" : Sd(e);\n}\nfunction xd(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t)\n    return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = Ad(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function() {\n      return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction Ad(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return $e(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return $e(e, d);\n  }\n}\nfunction $e(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nfunction Dd(e, d) {\n  for (var t = e.slice(), n = xd(d), r; !(r = n()).done; ) {\n    var i = r.value;\n    e.indexOf(i) < 0 && t.push(i);\n  }\n  return t.sort(function(a, $) {\n    return a - $;\n  });\n}\nfunction X(e, d) {\n  return _e(e, void 0, d);\n}\nfunction _e(e, d, t) {\n  var n = t.type(d), r = n && n.possibleLengths() || t.possibleLengths();\n  if (!r)\n    return \"IS_POSSIBLE\";\n  if (d === \"FIXED_LINE_OR_MOBILE\") {\n    if (!t.type(\"FIXED_LINE\"))\n      return _e(e, \"MOBILE\", t);\n    var i = t.type(\"MOBILE\");\n    i && (r = Dd(r, i.possibleLengths()));\n  } else if (d && !n)\n    return \"INVALID_LENGTH\";\n  var a = e.length, $ = r[0];\n  return $ === a ? \"IS_POSSIBLE\" : $ > a ? \"TOO_SHORT\" : r[r.length - 1] < a ? \"TOO_LONG\" : r.indexOf(a, 1) >= 0 ? \"IS_POSSIBLE\" : \"INVALID_LENGTH\";\n}\nfunction Rd(e, d, t) {\n  if (d === void 0 && (d = {}), t = new l(t), d.v2) {\n    if (!e.countryCallingCode)\n      throw new Error(\"Invalid phone number object passed\");\n    t.selectNumberingPlan(e.countryCallingCode);\n  } else {\n    if (!e.phone)\n      return !1;\n    if (e.country) {\n      if (!t.hasCountry(e.country))\n        throw new Error(\"Unknown country: \".concat(e.country));\n      t.country(e.country);\n    } else {\n      if (!e.countryCallingCode)\n        throw new Error(\"Invalid phone number object passed\");\n      t.selectNumberingPlan(e.countryCallingCode);\n    }\n  }\n  if (t.possibleLengths())\n    return Te(e.phone || e.nationalNumber, t);\n  if (e.countryCallingCode && t.isNonGeographicCallingCode(e.countryCallingCode))\n    return !0;\n  throw new Error('Missing \"possibleLengths\" in metadata. Perhaps the metadata has been generated before v1.0.18.');\n}\nfunction Te(e, d) {\n  switch (X(e, d)) {\n    case \"IS_POSSIBLE\":\n      return !0;\n    default:\n      return !1;\n  }\n}\nfunction Md(e, d) {\n  return Bd(e) || kd(e, d) || Fe(e, d) || Ld();\n}\nfunction Ld() {\n  throw new TypeError(`Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction kd(e, d) {\n  var t = e == null ? null : typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t != null) {\n    var n = [], r = !0, i = !1, a, $;\n    try {\n      for (t = t.call(e); !(r = (a = t.next()).done) && (n.push(a.value), !(d && n.length === d)); r = !0)\n        ;\n    } catch (u) {\n      i = !0, $ = u;\n    } finally {\n      try {\n        !r && t.return != null && t.return();\n      } finally {\n        if (i)\n          throw $;\n      }\n    }\n    return n;\n  }\n}\nfunction Bd(e) {\n  if (Array.isArray(e))\n    return e;\n}\nfunction Gd(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t)\n    return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = Fe(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function() {\n      return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction Fe(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return ae(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return ae(e, d);\n  }\n}\nfunction ae(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nfunction jd(e) {\n  var d, t;\n  e = e.replace(/^tel:/, \"tel=\");\n  for (var n = Gd(e.split(\";\")), r; !(r = n()).done; ) {\n    var i = r.value, a = i.split(\"=\"), $ = Md(a, 2), u = $[0], o = $[1];\n    switch (u) {\n      case \"tel\":\n        d = o;\n        break;\n      case \"ext\":\n        t = o;\n        break;\n      case \"phone-context\":\n        o[0] === \"+\" && (d = o + d);\n        break;\n    }\n  }\n  if (!Se(d))\n    return {};\n  var c = {\n    number: d\n  };\n  return t && (c.ext = t), c;\n}\nfunction Ud(e) {\n  var d = e.number, t = e.ext;\n  if (!d)\n    return \"\";\n  if (d[0] !== \"+\")\n    throw new Error('\"formatRFC3966()\" expects \"number\" to be in E.164 format.');\n  return \"tel:\".concat(d).concat(t ? \";ext=\" + t : \"\");\n}\nfunction y(e, d) {\n  return e = e || \"\", new RegExp(\"^(?:\" + d + \")$\").test(e);\n}\nfunction Hd(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t)\n    return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = Vd(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function() {\n      return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction Vd(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return oe(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return oe(e, d);\n  }\n}\nfunction oe(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nvar Kd = [\"MOBILE\", \"PREMIUM_RATE\", \"TOLL_FREE\", \"SHARED_COST\", \"VOIP\", \"PERSONAL_NUMBER\", \"PAGER\", \"UAN\", \"VOICEMAIL\"];\nfunction Y(e, d, t) {\n  if (d = d || {}, !!e.country) {\n    t = new l(t), t.selectNumberingPlan(e.country, e.countryCallingCode);\n    var n = d.v2 ? e.nationalNumber : e.phone;\n    if (y(n, t.nationalNumberPattern())) {\n      if (L(n, \"FIXED_LINE\", t))\n        return t.type(\"MOBILE\") && t.type(\"MOBILE\").pattern() === \"\" || !t.type(\"MOBILE\") || L(n, \"MOBILE\", t) ? \"FIXED_LINE_OR_MOBILE\" : \"FIXED_LINE\";\n      for (var r = Hd(Kd), i; !(i = r()).done; ) {\n        var a = i.value;\n        if (L(n, a, t))\n          return a;\n      }\n    }\n  }\n}\nfunction L(e, d, t) {\n  return d = t.type(d), !d || !d.pattern() || d.possibleLengths() && d.possibleLengths().indexOf(e.length) < 0 ? !1 : y(e, d.pattern());\n}\nfunction Wd(e, d, t) {\n  if (d = d || {}, t = new l(t), !e.country)\n    return !1;\n  if (t.selectNumberingPlan(e.country, e.countryCallingCode), t.hasTypes())\n    return Y(e, d, t.metadata) !== void 0;\n  var n = d.v2 ? e.nationalNumber : e.phone;\n  return y(n, t.nationalNumberPattern());\n}\nfunction zd(e) {\n  return e.replace(new RegExp(\"[\".concat(T, \"]+\"), \"g\"), \" \").trim();\n}\nvar Xd = /(\\$\\d)/;\nfunction Yd(e, d, t) {\n  var n = t.useInternationalFormat, r = t.withNationalPrefix;\n  t.carrierCode, t.metadata;\n  var i = e.replace(new RegExp(d.pattern()), n ? d.internationalFormat() : (\n    // This library doesn't use `domestic_carrier_code_formatting_rule`,\n    // because that one is only used when formatting phone numbers\n    // for dialing from a mobile phone, and this is not a dialing library.\n    // carrierCode && format.domesticCarrierCodeFormattingRule()\n    // \t// First, replace the $CC in the formatting rule with the desired carrier code.\n    // \t// Then, replace the $FG in the formatting rule with the first group\n    // \t// and the carrier code combined in the appropriate way.\n    // \t? format.format().replace(FIRST_GROUP_PATTERN, format.domesticCarrierCodeFormattingRule().replace('$CC', carrierCode))\n    // \t: (\n    // \t\twithNationalPrefix && format.nationalPrefixFormattingRule()\n    // \t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\n    // \t\t\t: format.format()\n    // \t)\n    r && d.nationalPrefixFormattingRule() ? d.format().replace(Xd, d.nationalPrefixFormattingRule()) : d.format()\n  ));\n  return n ? zd(i) : i;\n}\nvar Zd = /^[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?$/;\nfunction Jd(e, d, t) {\n  var n = new l(t);\n  if (n.selectNumberingPlan(e, d), n.defaultIDDPrefix())\n    return n.defaultIDDPrefix();\n  if (Zd.test(n.IDDPrefix()))\n    return n.IDDPrefix();\n}\nfunction qd(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t)\n    return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = Qd(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function() {\n      return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction Qd(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return ue(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return ue(e, d);\n  }\n}\nfunction ue(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nfunction se(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function(r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction le(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? se(Object(t), !0).forEach(function(n) {\n      et(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : se(Object(t)).forEach(function(n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction et(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[d] = t, e;\n}\nvar fe = {\n  formatExtension: function(d, t, n) {\n    return \"\".concat(d).concat(n.ext()).concat(t);\n  }\n};\nfunction dt(e, d, t, n) {\n  if (t ? t = le(le({}, fe), t) : t = fe, n = new l(n), e.country && e.country !== \"001\") {\n    if (!n.hasCountry(e.country))\n      throw new Error(\"Unknown country: \".concat(e.country));\n    n.country(e.country);\n  } else if (e.countryCallingCode)\n    n.selectNumberingPlan(e.countryCallingCode);\n  else\n    return e.phone || \"\";\n  var r = n.countryCallingCode(), i = t.v2 ? e.nationalNumber : e.phone, a;\n  switch (d) {\n    case \"NATIONAL\":\n      return i ? (a = x(i, e.carrierCode, \"NATIONAL\", n, t), k(a, e.ext, n, t.formatExtension)) : \"\";\n    case \"INTERNATIONAL\":\n      return i ? (a = x(i, null, \"INTERNATIONAL\", n, t), a = \"+\".concat(r, \" \").concat(a), k(a, e.ext, n, t.formatExtension)) : \"+\".concat(r);\n    case \"E.164\":\n      return \"+\".concat(r).concat(i);\n    case \"RFC3966\":\n      return Ud({\n        number: \"+\".concat(r).concat(i),\n        ext: e.ext\n      });\n    case \"IDD\":\n      if (!t.fromCountry)\n        return;\n      var $ = nt(i, e.carrierCode, r, t.fromCountry, n);\n      return k($, e.ext, n, t.formatExtension);\n    default:\n      throw new Error('Unknown \"format\" argument passed to \"formatNumber()\": \"'.concat(d, '\"'));\n  }\n}\nfunction x(e, d, t, n, r) {\n  var i = tt(n.formats(), e);\n  return i ? Yd(e, i, {\n    useInternationalFormat: t === \"INTERNATIONAL\",\n    withNationalPrefix: !(i.nationalPrefixIsOptionalWhenFormattingInNationalFormat() && r && r.nationalPrefix === !1),\n    carrierCode: d,\n    metadata: n\n  }) : e;\n}\nfunction tt(e, d) {\n  for (var t = qd(e), n; !(n = t()).done; ) {\n    var r = n.value;\n    if (r.leadingDigitsPatterns().length > 0) {\n      var i = r.leadingDigitsPatterns()[r.leadingDigitsPatterns().length - 1];\n      if (d.search(i) !== 0)\n        continue;\n    }\n    if (y(d, r.pattern()))\n      return r;\n  }\n}\nfunction k(e, d, t, n) {\n  return d ? n(e, d, t) : e;\n}\nfunction nt(e, d, t, n, r) {\n  var i = z(n, r.metadata);\n  if (i === t) {\n    var a = x(e, d, \"NATIONAL\", r);\n    return t === \"1\" ? t + \" \" + a : a;\n  }\n  var $ = Jd(n, void 0, r.metadata);\n  if ($)\n    return \"\".concat($, \" \").concat(t, \" \").concat(x(e, null, \"INTERNATIONAL\", r));\n}\nfunction ce(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function(r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction he(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? ce(Object(t), !0).forEach(function(n) {\n      rt(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ce(Object(t)).forEach(function(n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction rt(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[d] = t, e;\n}\nfunction it(e, d) {\n  if (!(e instanceof d))\n    throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction pe(e, d) {\n  for (var t = 0; t < d.length; t++) {\n    var n = d[t];\n    n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n  }\n}\nfunction $t(e, d, t) {\n  return d && pe(e.prototype, d), t && pe(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e;\n}\nvar at = /* @__PURE__ */ function() {\n  function e(d, t, n) {\n    if (it(this, e), !d)\n      throw new TypeError(\"`country` or `countryCallingCode` not passed\");\n    if (!t)\n      throw new TypeError(\"`nationalNumber` not passed\");\n    if (!n)\n      throw new TypeError(\"`metadata` not passed\");\n    var r = new l(n);\n    ot(d) && (this.country = d, r.country(d), d = r.countryCallingCode()), this.countryCallingCode = d, this.nationalNumber = t, this.number = \"+\" + this.countryCallingCode + this.nationalNumber, this.metadata = n;\n  }\n  return $t(e, [{\n    key: \"setExt\",\n    value: function(t) {\n      this.ext = t;\n    }\n  }, {\n    key: \"isPossible\",\n    value: function() {\n      return Rd(this, {\n        v2: !0\n      }, this.metadata);\n    }\n  }, {\n    key: \"isValid\",\n    value: function() {\n      return Wd(this, {\n        v2: !0\n      }, this.metadata);\n    }\n  }, {\n    key: \"isNonGeographic\",\n    value: function() {\n      var t = new l(this.metadata);\n      return t.isNonGeographicCallingCode(this.countryCallingCode);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function(t) {\n      return this.number === t.number && this.ext === t.ext;\n    }\n    // // Is just an alias for `this.isValid() && this.country === country`.\n    // // https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\n    // isValidForRegion(country) {\n    // \treturn isValidNumberForRegion(this, country, { v2: true }, this.metadata)\n    // }\n  }, {\n    key: \"getType\",\n    value: function() {\n      return Y(this, {\n        v2: !0\n      }, this.metadata);\n    }\n  }, {\n    key: \"format\",\n    value: function(t, n) {\n      return dt(this, t, n ? he(he({}, n), {}, {\n        v2: !0\n      }) : {\n        v2: !0\n      }, this.metadata);\n    }\n  }, {\n    key: \"formatNational\",\n    value: function(t) {\n      return this.format(\"NATIONAL\", t);\n    }\n  }, {\n    key: \"formatInternational\",\n    value: function(t) {\n      return this.format(\"INTERNATIONAL\", t);\n    }\n  }, {\n    key: \"getURI\",\n    value: function(t) {\n      return this.format(\"RFC3966\", t);\n    }\n  }]), e;\n}(), ot = function(d) {\n  return /^[A-Z]{2}$/.test(d);\n}, ut = new RegExp(\"([\" + g + \"])\");\nfunction st(e, d, t, n) {\n  if (d) {\n    var r = new l(n);\n    r.selectNumberingPlan(d, t);\n    var i = new RegExp(r.IDDPrefix());\n    if (e.search(i) === 0) {\n      e = e.slice(e.match(i)[0].length);\n      var a = e.match(ut);\n      if (!(a && a[1] != null && a[1].length > 0 && a[1] === \"0\"))\n        return e;\n    }\n  }\n}\nfunction lt(e, d) {\n  if (e && d.numberingPlan.nationalPrefixForParsing()) {\n    var t = new RegExp(\"^(?:\" + d.numberingPlan.nationalPrefixForParsing() + \")\"), n = t.exec(e);\n    if (n) {\n      var r, i, a = n.length - 1, $ = a > 0 && n[a];\n      if (d.nationalPrefixTransformRule() && $)\n        r = e.replace(t, d.nationalPrefixTransformRule()), a > 1 && (i = n[1]);\n      else {\n        var u = n[0];\n        r = e.slice(u.length), $ && (i = n[1]);\n      }\n      var o;\n      if ($) {\n        var c = e.indexOf(n[1]), f = e.slice(0, c);\n        f === d.numberingPlan.nationalPrefix() && (o = d.numberingPlan.nationalPrefix());\n      } else\n        o = n[0];\n      return {\n        nationalNumber: r,\n        nationalPrefix: o,\n        carrierCode: i\n      };\n    }\n  }\n  return {\n    nationalNumber: e\n  };\n}\nfunction H(e, d) {\n  var t = lt(e, d), n = t.carrierCode, r = t.nationalNumber;\n  if (r !== e) {\n    if (!ft(e, r, d))\n      return {\n        nationalNumber: e\n      };\n    if (d.possibleLengths() && !ct(r, d))\n      return {\n        nationalNumber: e\n      };\n  }\n  return {\n    nationalNumber: r,\n    carrierCode: n\n  };\n}\nfunction ft(e, d, t) {\n  return !(y(e, t.nationalNumberPattern()) && !y(d, t.nationalNumberPattern()));\n}\nfunction ct(e, d) {\n  switch (X(e, d)) {\n    case \"TOO_SHORT\":\n    case \"INVALID_LENGTH\":\n      return !1;\n    default:\n      return !0;\n  }\n}\nfunction ht(e, d, t, n) {\n  var r = d ? z(d, n) : t;\n  if (e.indexOf(r) === 0) {\n    n = new l(n), n.selectNumberingPlan(d, t);\n    var i = e.slice(r.length), a = H(i, n), $ = a.nationalNumber, u = H(e, n), o = u.nationalNumber;\n    if (!y(o, n.nationalNumberPattern()) && y($, n.nationalNumberPattern()) || X(o, n) === \"TOO_LONG\")\n      return {\n        countryCallingCode: r,\n        number: i\n      };\n  }\n  return {\n    number: e\n  };\n}\nfunction pt(e, d, t, n) {\n  if (!e)\n    return {};\n  if (e[0] !== \"+\") {\n    var r = st(e, d, t, n);\n    if (r && r !== e)\n      e = \"+\" + r;\n    else {\n      if (d || t) {\n        var i = ht(e, d, t, n), a = i.countryCallingCode, $ = i.number;\n        if (a)\n          return {\n            countryCallingCode: a,\n            number: $\n          };\n      }\n      return {\n        number: e\n      };\n    }\n  }\n  if (e[1] === \"0\")\n    return {};\n  n = new l(n);\n  for (var u = 2; u - 1 <= nd && u <= e.length; ) {\n    var o = e.slice(1, u);\n    if (n.hasCallingCode(o))\n      return n.selectNumberingPlan(o), {\n        countryCallingCode: o,\n        number: e.slice(u)\n      };\n    u++;\n  }\n  return {};\n}\nfunction yt(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t)\n    return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = mt(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function() {\n      return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction mt(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return ye(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return ye(e, d);\n  }\n}\nfunction ye(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nvar gt = !1;\nfunction bt(e, d, t) {\n  if (gt && t.isNonGeographicCallingCode(e))\n    return \"001\";\n  var n = t.getCountryCodesForCallingCode(e);\n  if (n)\n    return n.length === 1 ? n[0] : vt(n, d, t.metadata);\n}\nfunction vt(e, d, t) {\n  t = new l(t);\n  for (var n = yt(e), r; !(r = n()).done; ) {\n    var i = r.value;\n    if (t.country(i), t.leadingDigits()) {\n      if (d && d.search(t.leadingDigits()) === 0)\n        return i;\n    } else if (Y({\n      phone: d,\n      country: i\n    }, void 0, t.metadata))\n      return i;\n  }\n}\nvar Ct = 250, Ot = new RegExp(\"[\" + W + g + \"]\"), Pt = new RegExp(\"[^\" + g + \"#]+$\");\nfunction Nt(e, d, t) {\n  if (d = d || {}, t = new l(t), d.defaultCountry && !t.hasCountry(d.defaultCountry))\n    throw d.v2 ? new m(\"INVALID_COUNTRY\") : new Error(\"Unknown country: \".concat(d.defaultCountry));\n  var n = It(e, d.v2, d.extract), r = n.number, i = n.ext, a = n.error;\n  if (!r) {\n    if (d.v2)\n      throw a === \"TOO_SHORT\" ? new m(\"TOO_SHORT\") : new m(\"NOT_A_NUMBER\");\n    return {};\n  }\n  var $ = St(r, d.defaultCountry, d.defaultCallingCode, t), u = $.country, o = $.nationalNumber, c = $.countryCallingCode, f = $.carrierCode;\n  if (!t.hasSelectedNumberingPlan()) {\n    if (d.v2)\n      throw new m(\"INVALID_COUNTRY\");\n    return {};\n  }\n  if (!o || o.length < K) {\n    if (d.v2)\n      throw new m(\"TOO_SHORT\");\n    return {};\n  }\n  if (o.length > td) {\n    if (d.v2)\n      throw new m(\"TOO_LONG\");\n    return {};\n  }\n  if (d.v2) {\n    var v = new at(c, o, t.metadata);\n    return u && (v.country = u), f && (v.carrierCode = f), i && (v.ext = i), v;\n  }\n  var P = (d.extended ? t.hasSelectedNumberingPlan() : u) ? y(o, t.nationalNumberPattern()) : !1;\n  return d.extended ? {\n    country: u,\n    countryCallingCode: c,\n    carrierCode: f,\n    valid: P,\n    possible: P ? !0 : !!(d.extended === !0 && t.possibleLengths() && Te(o, t)),\n    phone: o,\n    ext: i\n  } : P ? Et(u, o, i) : {};\n}\nfunction wt(e, d, t) {\n  if (e) {\n    if (e.length > Ct) {\n      if (t)\n        throw new m(\"TOO_LONG\");\n      return;\n    }\n    if (d === !1)\n      return e;\n    var n = e.search(Ot);\n    if (!(n < 0))\n      return e.slice(n).replace(Pt, \"\");\n  }\n}\nfunction It(e, d, t) {\n  if (e && e.indexOf(\"tel:\") === 0)\n    return jd(e);\n  var n = wt(e, t, d);\n  if (!n)\n    return {};\n  if (!Se(n))\n    return wd(n) ? {\n      error: \"TOO_SHORT\"\n    } : {};\n  var r = Id(n);\n  return r.ext ? r : {\n    number: n\n  };\n}\nfunction Et(e, d, t) {\n  var n = {\n    country: e,\n    phone: d\n  };\n  return t && (n.ext = t), n;\n}\nfunction St(e, d, t, n) {\n  var r = pt(ie(e), d, t, n.metadata), i = r.countryCallingCode, a = r.number, $;\n  if (i)\n    n.selectNumberingPlan(i);\n  else if (a && (d || t))\n    n.selectNumberingPlan(d, t), d && ($ = d), i = t || z(d, n.metadata);\n  else\n    return {};\n  if (!a)\n    return {\n      countryCallingCode: i\n    };\n  var u = H(ie(a), n), o = u.nationalNumber, c = u.carrierCode, f = bt(i, o, n);\n  return f && ($ = f, f === \"001\" || n.country($)), {\n    country: $,\n    countryCallingCode: i,\n    nationalNumber: o,\n    carrierCode: c\n  };\n}\nfunction me(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function(r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction ge(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? me(Object(t), !0).forEach(function(n) {\n      _t(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : me(Object(t)).forEach(function(n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction _t(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[d] = t, e;\n}\nfunction Tt(e, d, t) {\n  return Nt(e, ge(ge({}, d), {}, {\n    v2: !0\n  }), t);\n}\nfunction V(e) {\n  return V = typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\" ? function(d) {\n    return typeof d;\n  } : function(d) {\n    return d && typeof Symbol == \"function\" && d.constructor === Symbol && d !== Symbol.prototype ? \"symbol\" : typeof d;\n  }, V(e);\n}\nfunction be(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function(r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction Ft(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? be(Object(t), !0).forEach(function(n) {\n      xt(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : be(Object(t)).forEach(function(n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction xt(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[d] = t, e;\n}\nfunction At(e, d) {\n  return Lt(e) || Mt(e, d) || Rt(e, d) || Dt();\n}\nfunction Dt() {\n  throw new TypeError(`Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction Rt(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return ve(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return ve(e, d);\n  }\n}\nfunction ve(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nfunction Mt(e, d) {\n  var t = e == null ? null : typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t != null) {\n    var n = [], r = !0, i = !1, a, $;\n    try {\n      for (t = t.call(e); !(r = (a = t.next()).done) && (n.push(a.value), !(d && n.length === d)); r = !0)\n        ;\n    } catch (u) {\n      i = !0, $ = u;\n    } finally {\n      try {\n        !r && t.return != null && t.return();\n      } finally {\n        if (i)\n          throw $;\n      }\n    }\n    return n;\n  }\n}\nfunction Lt(e) {\n  if (Array.isArray(e))\n    return e;\n}\nfunction kt(e) {\n  var d = Array.prototype.slice.call(e), t = At(d, 4), n = t[0], r = t[1], i = t[2], a = t[3], $, u, o;\n  if (typeof n == \"string\")\n    $ = n;\n  else\n    throw new TypeError(\"A text for parsing must be a string.\");\n  if (!r || typeof r == \"string\")\n    a ? (u = i, o = a) : (u = void 0, o = i), r && (u = Ft({\n      defaultCountry: r\n    }, u));\n  else if (Bt(r))\n    i ? (u = r, o = i) : o = r;\n  else\n    throw new Error(\"Invalid second argument: \".concat(r));\n  return {\n    text: $,\n    options: u,\n    metadata: o\n  };\n}\nvar Bt = function(d) {\n  return V(d) === \"object\";\n};\nfunction Ce(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function(r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction Oe(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? Ce(Object(t), !0).forEach(function(n) {\n      Gt(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : Ce(Object(t)).forEach(function(n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction Gt(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[d] = t, e;\n}\nfunction jt(e, d, t) {\n  d && d.defaultCountry && !gd(d.defaultCountry, t) && (d = Oe(Oe({}, d), {}, {\n    defaultCountry: void 0\n  }));\n  try {\n    return Tt(e, d, t);\n  } catch (n) {\n    if (!(n instanceof m))\n      throw n;\n  }\n}\nfunction Ut() {\n  var e = kt(arguments), d = e.text, t = e.options, n = e.metadata;\n  return jt(d, t, n);\n}\nfunction B() {\n  return Ye(Ut, arguments);\n}\nconst Ht = {\n  beforeMount(e, d, t) {\n    if (typeof d.value != \"function\") {\n      const n = t.context.name;\n      let r = `[Vue-click-outside:] provided expression ${d.expression} is not a function, but has to be`;\n      n && (r += `Found in component ${n}`), console.warn(r);\n    }\n    e.clickOutsideEvent = function(n) {\n      e === n.target || e.contains(n.target) || d.value(n, e);\n    }, document.body.addEventListener(\"click\", e.clickOutsideEvent);\n  },\n  unmounted(e) {\n    document.body.removeEventListener(\"click\", e.clickOutsideEvent);\n  }\n};\nconst Vt = (e, d) => {\n  const t = e.__vccOpts || e;\n  for (const [n, r] of d)\n    t[n] = r;\n  return t;\n};\nfunction s(e) {\n  const d = G.options[e];\n  return typeof d > \"u\" ? G.options[e] : d;\n}\nconst Kt = {\n  name: \"VueTelInput\",\n  directives: {\n    clickOutside: Ht\n  },\n  props: {\n    modelValue: {\n      type: String,\n      default: \"\"\n    },\n    allCountries: {\n      type: Array,\n      default: () => s(\"allCountries\")\n    },\n    autoFormat: {\n      type: Boolean,\n      default: () => s(\"autoFormat\")\n    },\n    customValidate: {\n      type: [Boolean, RegExp],\n      default: () => s(\"customValidate\")\n    },\n    defaultCountry: {\n      // Default country code, ie: 'AU'\n      // Will override the current country of user\n      type: [String, Number],\n      default: () => s(\"defaultCountry\")\n    },\n    disabled: {\n      type: Boolean,\n      default: () => s(\"disabled\")\n    },\n    autoDefaultCountry: {\n      type: Boolean,\n      default: () => s(\"autoDefaultCountry\")\n    },\n    dropdownOptions: {\n      type: Object,\n      default: () => s(\"dropdownOptions\")\n    },\n    ignoredCountries: {\n      type: Array,\n      default: () => s(\"ignoredCountries\")\n    },\n    inputOptions: {\n      type: Object,\n      default: () => s(\"inputOptions\")\n    },\n    invalidMsg: {\n      type: String,\n      default: () => s(\"invalidMsg\")\n    },\n    mode: {\n      type: String,\n      default: () => s(\"mode\")\n    },\n    onlyCountries: {\n      type: Array,\n      default: () => s(\"onlyCountries\")\n    },\n    preferredCountries: {\n      type: Array,\n      default: () => s(\"preferredCountries\")\n    },\n    validCharactersOnly: {\n      type: Boolean,\n      default: () => s(\"validCharactersOnly\")\n    },\n    styleClasses: {\n      type: [String, Array, Object],\n      default: () => s(\"styleClasses\")\n    }\n  },\n  data() {\n    return {\n      phone: \"\",\n      activeCountryCode: \"\",\n      open: !1,\n      finishMounted: !1,\n      selectedIndex: null,\n      typeToFindInput: \"\",\n      typeToFindTimer: null,\n      dropdownOpenDirection: \"below\",\n      parsedPlaceholder: this.inputOptions.placeholder,\n      searchQuery: \"\"\n    };\n  },\n  computed: {\n    activeCountry() {\n      return this.findCountry(this.activeCountryCode);\n    },\n    parsedMode() {\n      return this.mode === \"auto\" ? !this.phone || this.phone[0] !== \"+\" ? \"national\" : \"international\" : [\"international\", \"national\"].includes(this.mode) ? this.mode : (console.error('Invalid value of prop \"mode\"'), \"international\");\n    },\n    filteredCountries() {\n      return this.onlyCountries.length ? this.allCountries.filter(({ iso2: e }) => this.onlyCountries.some((d) => d.toUpperCase() === e)) : this.ignoredCountries.length ? this.allCountries.filter(\n        ({ iso2: e }) => !this.ignoredCountries.includes(e.toUpperCase()) && !this.ignoredCountries.includes(e.toLowerCase())\n      ) : this.allCountries;\n    },\n    sortedCountries() {\n      const d = [...this.getCountries(this.preferredCountries).map((t) => ({ ...t, preferred: !0 })), ...this.filteredCountries];\n      return this.dropdownOptions.showSearchBox ? d.filter(\n        (t) => new RegExp(this.searchQuery, \"i\").test(t.name) || new RegExp(this.searchQuery, \"i\").test(t.iso2) || new RegExp(this.searchQuery, \"i\").test(t.dialCode)\n      ) : d;\n    },\n    phoneObject() {\n      var i, a, $;\n      let e;\n      ((i = this.phone) == null ? void 0 : i[0]) === \"+\" ? e = B(this.phone) || {} : e = B(this.phone, this.activeCountryCode) || {};\n      const {\n        metadata: d,\n        ...t\n      } = e;\n      let n = (a = e.isValid) == null ? void 0 : a.call(e), r = this.phone;\n      return n && (r = ($ = e.format) == null ? void 0 : $.call(e, this.parsedMode.toUpperCase())), e.country && (this.ignoredCountries.length || this.onlyCountries.length) && (this.findCountry(e.country) || (n = !1, Object.assign(e, { country: null }))), Object.assign(t, {\n        countryCode: e.country,\n        valid: n,\n        country: this.activeCountry,\n        formatted: r\n      }), t;\n    }\n  },\n  watch: {\n    activeCountry(e, d) {\n      if (!e && (d != null && d.iso2)) {\n        this.activeCountryCode = d.iso2;\n        return;\n      }\n      e != null && e.iso2 && this.$emit(\"country-changed\", e);\n    },\n    \"phoneObject.countryCode\": function(e) {\n      this.activeCountryCode = e || \"\";\n    },\n    \"phoneObject.valid\": function() {\n      this.$emit(\"validate\", this.phoneObject);\n    },\n    \"phoneObject.formatted\": function(e) {\n      !this.autoFormat || this.customValidate || (this.emitInput(e), this.$nextTick(() => {\n        e && !this.modelValue && (this.phone = e);\n      }));\n    },\n    // finishMounted() {\n    //   this.resetPlaceholder();\n    // },\n    \"inputOptions.placeholder\": function() {\n      this.resetPlaceholder();\n    },\n    modelValue(e, d) {\n      this.testCharacters() ? this.phone = e : this.$nextTick(() => {\n        this.phone = d, this.onInput();\n      });\n    },\n    open(e) {\n      e ? (this.setDropdownPosition(), this.$emit(\"open\")) : this.$emit(\"close\");\n    }\n  },\n  mounted() {\n    this.modelValue && (this.phone = this.modelValue.trim()), this.cleanInvalidCharacters(), this.initializeCountry().then(() => {\n      var e;\n      !this.phone && ((e = this.inputOptions) != null && e.showDialCode) && this.activeCountryCode && (this.phone = `+${this.activeCountryCode}`), this.$emit(\"validate\", this.phoneObject);\n    }).catch(console.error).then(() => {\n      this.finishMounted = !0;\n    });\n  },\n  methods: {\n    resetPlaceholder() {\n      this.parsedPlaceholder = this.inputOptions.placeholder;\n    },\n    initializeCountry() {\n      return new Promise((e) => {\n        var t;\n        if (((t = this.phone) == null ? void 0 : t[0]) === \"+\") {\n          e();\n          return;\n        }\n        if (this.defaultCountry) {\n          if (typeof this.defaultCountry == \"string\") {\n            this.choose(this.defaultCountry), e();\n            return;\n          }\n          if (typeof this.defaultCountry == \"number\") {\n            const n = this.findCountryByDialCode(this.defaultCountry);\n            if (n) {\n              this.choose(n.iso2), e();\n              return;\n            }\n          }\n        }\n        const d = this.preferredCountries[0] || this.filteredCountries[0];\n        this.autoDefaultCountry ? Ke().then((n) => {\n          this.choose(n || this.activeCountryCode);\n        }).catch((n) => {\n          console.warn(n), this.choose(d);\n        }).then(() => {\n          e();\n        }) : (this.choose(d), e());\n      });\n    },\n    /**\n     * Get the list of countries from the list of iso2 code\n     */\n    getCountries(e = []) {\n      return e.map((d) => this.findCountry(d)).filter(Boolean);\n    },\n    findCountry(e = \"\") {\n      return this.filteredCountries.find((d) => d.iso2 === e.toUpperCase());\n    },\n    findCountryByDialCode(e) {\n      return this.filteredCountries.find((d) => Number(d.dialCode) === e);\n    },\n    getItemClass(e, d) {\n      const t = this.selectedIndex === e, n = e === this.preferredCountries.length - 1, r = this.preferredCountries.some((i) => i.toUpperCase() === d);\n      return {\n        highlighted: t,\n        \"last-preferred\": n,\n        preferred: r\n      };\n    },\n    choose(e) {\n      var t, n;\n      let d = e;\n      if (typeof d == \"string\" && (d = this.findCountry(d)), !!d) {\n        if (((t = this.phone) == null ? void 0 : t[0]) === \"+\" && d.iso2 && this.phoneObject.nationalNumber) {\n          this.activeCountryCode = d.iso2, this.phone = B(\n            this.phoneObject.nationalNumber,\n            d.iso2\n          ).formatInternational();\n          return;\n        }\n        if ((n = this.inputOptions) != null && n.showDialCode && d) {\n          this.phone = `+${d.dialCode}`, this.activeCountryCode = d.iso2 || \"\";\n          return;\n        }\n        this.activeCountryCode = d.iso2 || \"\", this.emitInput(this.phone);\n      }\n    },\n    cleanInvalidCharacters() {\n      const e = this.phone;\n      if (this.validCharactersOnly) {\n        const d = this.phone.match(/[()\\-+0-9\\s]*/g);\n        this.phone = d.join(\"\");\n      }\n      if (this.customValidate && this.customValidate instanceof RegExp) {\n        const d = this.phone.match(this.customValidate);\n        this.phone = d.join(\"\");\n      }\n      e !== this.phone && this.emitInput(this.phone);\n    },\n    testCharacters() {\n      return this.validCharactersOnly && !/^[()\\-+0-9\\s]*$/.test(this.phone) ? !1 : this.customValidate ? this.testCustomValidate() : !0;\n    },\n    testCustomValidate() {\n      return this.customValidate instanceof RegExp ? this.customValidate.test(this.phone) : !1;\n    },\n    onInput() {\n      this.$refs.input.setCustomValidity(this.phoneObject.valid ? \"\" : this.invalidMsg), this.emitInput(this.phone);\n    },\n    emitInput(e) {\n      this.$emit(\"update:modelValue\", e), this.$emit(\"on-input\", e, this.phoneObject, this.$refs.input);\n    },\n    onBlur() {\n      this.$emit(\"blur\");\n    },\n    onFocus() {\n      We(this.$refs.input, this.phone.length), this.$emit(\"focus\");\n    },\n    onEnter() {\n      this.$emit(\"enter\");\n    },\n    onSpace() {\n      this.$emit(\"space\");\n    },\n    focus() {\n      this.$refs.input.focus();\n    },\n    toggleDropdown() {\n      this.disabled || this.dropdownOptions.disabled || (this.searchQuery = \"\", this.open = !this.open);\n    },\n    clickedOutside() {\n      this.open = !1;\n    },\n    keyboardNav(e) {\n      if (e.keyCode === 40) {\n        e.preventDefault(), this.open = !0, this.selectedIndex === null ? this.selectedIndex = 0 : this.selectedIndex = Math.min(this.sortedCountries.length - 1, this.selectedIndex + 1);\n        const d = this.$refs.list.children[this.selectedIndex];\n        d.focus(), d.offsetTop + d.clientHeight > this.$refs.list.scrollTop + this.$refs.list.clientHeight && (this.$refs.list.scrollTop = d.offsetTop - this.$refs.list.clientHeight + d.clientHeight);\n      } else if (e.keyCode === 38) {\n        e.preventDefault(), this.open = !0, this.selectedIndex === null ? this.selectedIndex = this.sortedCountries.length - 1 : this.selectedIndex = Math.max(0, this.selectedIndex - 1);\n        const d = this.$refs.list.children[this.selectedIndex];\n        d.focus(), d.offsetTop < this.$refs.list.scrollTop && (this.$refs.list.scrollTop = d.offsetTop);\n      } else if (e.keyCode === 13)\n        this.selectedIndex !== null && this.choose(this.sortedCountries[this.selectedIndex]), this.open = !this.open;\n      else {\n        this.typeToFindInput += e.key, clearTimeout(this.typeToFindTimer), this.typeToFindTimer = setTimeout(() => {\n          this.typeToFindInput = \"\";\n        }, 700);\n        const d = this.sortedCountries.slice(this.preferredCountries.length).findIndex((t) => t.name.toLowerCase().startsWith(this.typeToFindInput));\n        if (d >= 0) {\n          this.selectedIndex = this.preferredCountries.length + d;\n          const t = this.$refs.list.children[this.selectedIndex], n = t.offsetTop < this.$refs.list.scrollTop, r = t.offsetTop + t.clientHeight > this.$refs.list.scrollTop + this.$refs.list.clientHeight;\n          (n || r) && (this.$refs.list.scrollTop = t.offsetTop - this.$refs.list.clientHeight / 2);\n        }\n      }\n    },\n    reset() {\n      this.selectedIndex = this.sortedCountries.map((e) => e.iso2).indexOf(this.activeCountryCode), this.open = !1;\n    },\n    setDropdownPosition() {\n      window.innerHeight - this.$el.getBoundingClientRect().bottom > 200 ? this.dropdownOpenDirection = \"below\" : this.dropdownOpenDirection = \"above\";\n    }\n  }\n}, Wt = [\"aria-expanded\", \"tabindex\"], zt = { class: \"vti__selection\" }, Xt = {\n  key: 1,\n  class: \"vti__country-code\"\n}, Yt = { class: \"vti__dropdown-arrow\" }, Zt = [\"placeholder\"], Jt = [\"onClick\", \"onMousemove\", \"aria-selected\"], qt = { key: 1 }, Qt = [\"type\", \"autocomplete\", \"autofocus\", \"disabled\", \"id\", \"maxlength\", \"name\", \"placeholder\", \"readonly\", \"required\", \"tabindex\", \"value\", \"aria-describedby\"];\nfunction e1(e, d, t, n, r, i) {\n  const a = Le(\"click-outside\");\n  return h(), p(\"div\", {\n    class: b([\"vue-tel-input\", t.styleClasses, { disabled: t.disabled }])\n  }, [\n    R((h(), p(\"div\", {\n      \"aria-label\": \"Country Code Selector\",\n      \"aria-haspopup\": \"listbox\",\n      \"aria-expanded\": r.open,\n      role: \"button\",\n      class: b([\"vti__dropdown\", { open: r.open, disabled: t.dropdownOptions.disabled }]),\n      tabindex: t.dropdownOptions.tabindex,\n      onKeydown: [\n        d[2] || (d[2] = (...$) => i.keyboardNav && i.keyboardNav(...$)),\n        d[4] || (d[4] = N((...$) => i.toggleDropdown && i.toggleDropdown(...$), [\"space\"])),\n        d[5] || (d[5] = N((...$) => i.reset && i.reset(...$), [\"esc\"])),\n        d[6] || (d[6] = N((...$) => i.reset && i.reset(...$), [\"tab\"]))\n      ],\n      onClick: d[3] || (d[3] = (...$) => i.toggleDropdown && i.toggleDropdown(...$))\n    }, [\n      E(\"span\", zt, [\n        t.dropdownOptions.showFlags ? (h(), p(\"span\", {\n          key: 0,\n          class: b([\"vti__flag\", r.activeCountryCode.toLowerCase()])\n        }, null, 2)) : C(\"\", !0),\n        t.dropdownOptions.showDialCodeInSelection ? (h(), p(\"span\", Xt, \" +\" + S(i.activeCountry && i.activeCountry.dialCode), 1)) : C(\"\", !0),\n        Z(e.$slots, \"arrow-icon\", { open: r.open }, () => [\n          E(\"span\", Yt, S(r.open ? \"▲\" : \"▼\"), 1)\n        ])\n      ]),\n      r.open ? (h(), p(\"ul\", {\n        key: 0,\n        ref: \"list\",\n        class: b([\"vti__dropdown-list\", r.dropdownOpenDirection]),\n        role: \"listbox\"\n      }, [\n        t.dropdownOptions.showSearchBox ? R((h(), p(\"input\", {\n          key: 0,\n          class: \"vti__input vti__search_box\",\n          \"aria-label\": \"Search by country name or country code\",\n          placeholder: i.sortedCountries.length ? i.sortedCountries[0].name : \"\",\n          type: \"text\",\n          \"onUpdate:modelValue\": d[0] || (d[0] = ($) => r.searchQuery = $),\n          onClick: d[1] || (d[1] = ke(() => {\n          }, [\"stop\"]))\n        }, null, 8, Zt)), [\n          [Be, r.searchQuery]\n        ]) : C(\"\", !0),\n        (h(!0), p(Ge, null, je(i.sortedCountries, ($, u) => (h(), p(\"li\", {\n          role: \"option\",\n          class: b([\"vti__dropdown-item\", i.getItemClass(u, $.iso2)]),\n          key: $.iso2 + ($.preferred ? \"-preferred\" : \"\"),\n          tabindex: \"-1\",\n          onClick: (o) => i.choose($),\n          onMousemove: (o) => r.selectedIndex = u,\n          \"aria-selected\": r.activeCountryCode === $.iso2 && !$.preferred\n        }, [\n          t.dropdownOptions.showFlags ? (h(), p(\"span\", {\n            key: 0,\n            class: b([\"vti__flag\", $.iso2.toLowerCase()])\n          }, null, 2)) : C(\"\", !0),\n          E(\"strong\", null, S($.name), 1),\n          t.dropdownOptions.showDialCodeInList ? (h(), p(\"span\", qt, \" +\" + S($.dialCode), 1)) : C(\"\", !0)\n        ], 42, Jt))), 128))\n      ], 2)) : C(\"\", !0)\n    ], 42, Wt)), [\n      [a, i.clickedOutside]\n    ]),\n    R(E(\"input\", {\n      \"onUpdate:modelValue\": d[7] || (d[7] = ($) => r.phone = $),\n      ref: \"input\",\n      type: t.inputOptions.type,\n      autocomplete: t.inputOptions.autocomplete,\n      autofocus: t.inputOptions.autofocus,\n      class: b([\"vti__input\", t.inputOptions.styleClasses]),\n      disabled: t.disabled,\n      id: t.inputOptions.id,\n      maxlength: t.inputOptions.maxlength,\n      name: t.inputOptions.name,\n      placeholder: r.parsedPlaceholder,\n      readonly: t.inputOptions.readonly,\n      required: t.inputOptions.required,\n      tabindex: t.inputOptions.tabindex,\n      value: t.modelValue,\n      \"aria-describedby\": t.inputOptions[\"aria-describedby\"],\n      onBlur: d[8] || (d[8] = (...$) => i.onBlur && i.onBlur(...$)),\n      onFocus: d[9] || (d[9] = (...$) => i.onFocus && i.onFocus(...$)),\n      onInput: d[10] || (d[10] = (...$) => i.onInput && i.onInput(...$)),\n      onKeyup: [\n        d[11] || (d[11] = N((...$) => i.onEnter && i.onEnter(...$), [\"enter\"])),\n        d[12] || (d[12] = N((...$) => i.onSpace && i.onSpace(...$), [\"space\"]))\n      ]\n    }, null, 42, Qt), [\n      [Ue, r.phone]\n    ]),\n    Z(e.$slots, \"icon-right\")\n  ], 2);\n}\nconst d1 = /* @__PURE__ */ Vt(Kt, [[\"render\", e1]]), n1 = {\n  install(e, d = {}) {\n    const {\n      dropdownOptions: t,\n      inputOptions: n,\n      ...r\n    } = d, {\n      dropdownOptions: i,\n      inputOptions: a,\n      ...$\n    } = Pe;\n    G.options = {\n      inputOptions: {\n        ...a,\n        ...n\n      },\n      dropdownOptions: {\n        ...i,\n        ...t\n      },\n      ...$,\n      ...r\n    }, e.component(\"vue-tel-input\", d1);\n  }\n};\nexport {\n  d1 as VueTelInput,\n  n1 as default\n};\n"],"mappings":"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hD,IAAI,EACJ,KAAK,CACN,EACD,CACE,sCAAsC,EACtC,IAAI,EACJ,KAAK,CACN,EACD,CACE,cAAc,EACd,IAAI,EACJ,KAAK,CACN,EACD,CACE,YAAY,EACZ,IAAI,EACJ,KAAK,CACN,EACD,CACE,eAAe,EACf,IAAI,EACJ,KAAK,CACN,EACD,CACE,oBAAoB,EACpB,IAAI,EACJ,KAAK,CACN,EACD,CACE,MAAM,EACN,IAAI,EACJ,IAAI,CACL,EACD,CACE,SAAS,EACT,IAAI,EACJ,KAAK,CACN,EACD,CACE,iBAAiB,EACjB,IAAI,EACJ,KAAK,CACN,EACD,CACE,kCAAkC,EAClC,IAAI,EACJ,KAAK,CACN,EACD,CACE,mBAAmB,EACnB,IAAI,EACJ,IAAI,CACL,EACD,CACE,UAAU,EACV,IAAI,EACJ,KAAK,CACN,EACD,CACE,UAAU,EACV,IAAI,EACJ,MAAM,CACP,EACD,CACE,2CAA2C,EAC3C,IAAI,EACJ,GAAG,CACJ,EACD,CACE,SAAS,EACT,IAAI,EACJ,KAAK,CACN,EACD,CACE,gBAAgB,EAChB,IAAI,EACJ,IAAI,CACL,EACD,CACE,aAAa,EACb,IAAI,EACJ,KAAK,CACN,EACD,CACE,uCAAuC,EACvC,IAAI,EACJ,KAAK,CACN,EACD,CACE,SAAS,EACT,IAAI,EACJ,KAAK,CACN,EACD,CACE,iBAAiB,EACjB,IAAI,EACJ,KAAK,CACN,EACD,CACE,UAAU,EACV,IAAI,EACJ,KAAK,CACN,EACD,CACE,mCAAmC,EACnC,IAAI,EACJ,KAAK,CACN,EACD,CACE,yBAAyB,EACzB,IAAI,EACJ,KAAK,CACN,EACD,CACE,MAAM,EACN,IAAI,EACJ,KAAK,CACN,EACD,CACE,iBAAiB,EACjB,IAAI,EACJ,KAAK,CACN,EACD,CACE,QAAQ,EACR,IAAI,EACJ,IAAI,CACL,EACD,CACE,kCAAkC,EAClC,IAAI,EACJ,KAAK,CACN,EACD,CACE,wCAAwC,EACxC,IAAI,EACJ,KAAK,CACN,EACD,CACE,OAAO,EACP,IAAI,EACJ,KAAK,CACN,EACD,CACE,QAAQ,EACR,IAAI,EACJ,KAAK,CACN,EACD,CACE,sBAAsB,EACtB,IAAI,EACJ,KAAK,CACN,EACD,CACE,uBAAuB,EACvB,IAAI,EACJ,IAAI,CACL,EACD,CACE,eAAe,EACf,IAAI,EACJ,KAAK,CACN,EACD,CACE,WAAW,EACX,IAAI,EACJ,KAAK,CACN,EACD,CACE,iBAAiB,EACjB,IAAI,EACJ,IAAI,CACL,EACD,CACE,8BAA8B,EAC9B,IAAI,EACJ,KAAK,CACN,EACD,CACE,SAAS,EACT,IAAI,EACJ,MAAM,CACP,EACD,CACE,YAAY,EACZ,IAAI,EACJ,KAAK,CACN,EACD,CACE,MAAM,EACN,IAAI,EACJ,MAAM,CACP,EACD,CACE,WAAW,EACX,IAAI,EACJ,KAAK,CACN,EACD,CACE,UAAU,EACV,IAAI,EACJ,IAAI,EACJ,CAAC,CACF,EACD,CACE,iBAAiB,EACjB,IAAI,EACJ,KAAK,CACN,EACD,CACE,8BAA8B,EAC9B,IAAI,EACJ,KAAK,CACN,EACD,CACE,QAAQ,EACR,IAAI,EACJ,KAAK,CACN,EACD,CACE,OAAO,EACP,IAAI,EACJ,KAAK,CACN,EACD,CACE,UAAU,EACV,IAAI,EACJ,KAAK,CACN,EACD,CACE,gBAAgB,EAChB,IAAI,EACJ,KAAK,CACN,EACD,CACE,wBAAwB,EACxB,IAAI,EACJ,IAAI,CACL,EACD,CACE,kBAAkB,EAClB,IAAI,EACJ,KAAK,CACN,EACD,CACE,cAAc,EACd,IAAI,EACJ,IAAI,CACL,EACD,CACE,WAAW,EACX,IAAI,EACJ,IAAI,CACL,EACD,CACE,iBAAiB,EACjB,IAAI,EACJ,IAAI,CACL,EACD,CACE,kBAAkB,EAClB,IAAI,EACJ,KAAK,CACN,EACD,CACE,SAAS,EACT,IAAI,EACJ,KAAK,CACN,EACD,CACE,aAAa,EACb,IAAI,EACJ,IAAI,CACL,EACD,CACE,mBAAmB,EACnB,IAAI,EACJ,KAAK,CACN,EACD,CACE,gBAAgB,EAChB,IAAI,EACJ,IAAI,CACL,EACD,CACE,SAAS,EACT,IAAI,EACJ,MAAM,CACP,EACD,C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J,KAAK,CACN,EACD,CACE,WAAW,EACX,IAAI,EACJ,IAAI,CACL,EACD,CACE,cAAc,EACd,IAAI,EACJ,MAAM,CACP,EACD,CACE,sBAAsB,EACtB,IAAI,EACJ,KAAK,CACN,EACD,CACE,sBAAsB,EACtB,IAAI,EACJ,KAAK,CACN,EACD,CACE,iBAAiB,EACjB,IAAI,EACJ,KAAK,CACN,EACD,CACE,sBAAsB,EACtB,IAAI,EACJ,KAAK,CACN,EACD,CACE,cAAc,EACd,IAAI,EACJ,IAAI,CACL,EACD,CACE,oBAAoB,EACpB,IAAI,EACJ,IAAI,CACL,EACD,CACE,+BAA+B,EAC/B,IAAI,EACJ,KAAK,CACN,EACD,CACE,gBAAgB,EAChB,IAAI,EACJ,IAAI,CACL,EACD,CACE,yBAAyB,EACzB,IAAI,EACJ,IAAI,CACL,EACD,CACE,oBAAoB,EACpB,IAAI,EACJ,KAAK,CACN,EACD,CACE,UAAU,EACV,IAAI,EACJ,KAAK,CACN,EACD,CACE,wBAAwB,EACxB,IAAI,EACJ,IAAI,CACL,EACD,CACE,WAAW,EACX,IAAI,EACJ,KAAK,CACN,EACD,CACE,kBAAkB,EAClB,IAAI,EACJ,IAAI,CACL,EACD,CACE,uBAAuB,EACvB,IAAI,EACJ,IAAI,CACL,EACD,CACE,kBAAkB,EAClB,IAAI,EACJ,KAAK,CACN,EACD,CACE,aAAa,EACb,IAAI,EACJ,KAAK,CACN,EACD,CACE,YAAY,EACZ,IAAI,EACJ,KAAK,CACN,EACD,CACE,UAAU,EACV,IAAI,EACJ,KAAK,CACN,EACD,CACE,gBAAgB,EAChB,IAAI,EACJ,IAAI,CACL,EACD,CACE,aAAa,EACb,IAAI,EACJ,KAAK,CACN,EACD,CACE,MAAM,EACN,IAAI,EACJ,KAAK,CACN,EACD,CACE,SAAS,EACT,IAAI,EACJ,KAAK,CACN,EACD,CACE,OAAO,EACP,IAAI,EACJ,KAAK,CACN,EACD,CACE,qBAAqB,EACrB,IAAI,EACJ,MAAM,CACP,EACD,CACE,mBAAmB,EACnB,IAAI,EACJ,KAAK,CACN,EACD,CACE,kBAAkB,EAC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MAAE,EAAE,EAAE,CAAC,IAAI,CAAC;MAAE,EAAE,EAAE,CAAC,IAAI,CAAC;MAAE,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MAAE,EAAE,EAAE,CAAC,IAAI,CAAC;MAAE,EAAE,EAAE,CAAC,IAAI,CAAC;MAAE,EAAE,EAAE,CAAC,IAAI,CAAC;MAAE,EAAE,EAAE,CAAC,IAAI,CAAC;MAAE,EAAE,EAAE,CAAC,IAAI,CAAC;MAAE,EAAE,EAAE,CAAC,IAAI,CAAC;MAAE,EAAE,EAAE,CAAC,IAAI,CAAC;MAAE,EAAE,EAAE,CAAC,IAAI,CAAC;MAAE,EAAE,EAAE,CAAC,IAAI,CAAC;MAAE,EAAE,EAAE,CAAC,IAAI,CAAC;MAAE,EAAE,EAAE,CAAC,IAAI,CAAC;MAAE,EAAE,EAAE,CAAC,IAAI,CAAC;MAAE,EAAE,EAAE,CAAC,IAAI,CAAC;MAAE,EAAE,EAAE,CAAC,IAAI,CAAC;MAAE,EAAE,EAAE,CAAC,IAAI,CAAC;MAAE,EAAE,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;MAAE,GAAG,EAAE,CAAC,IAAI,CAAC;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"},"metadata":{},"sourceType":"module","externalDependencies":[]}