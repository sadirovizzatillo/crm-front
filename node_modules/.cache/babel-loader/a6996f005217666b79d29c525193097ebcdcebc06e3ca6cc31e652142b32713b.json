{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_select_v2 = _resolveComponent(\"el-select-v2\");\n  const _component_el_time_picker = _resolveComponent(\"el-time-picker\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createBlock(_component_el_form, {\n    ref: \"ruleFormRef\",\n    model: $setup.ruleForm,\n    rules: $setup.rules,\n    \"label-width\": \"120px\",\n    class: \"demo-ruleForm\",\n    size: $setup.formSize,\n    \"status-icon\": \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"Doktor ismi\",\n      prop: \"doctorName\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.ruleForm.doctorName,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.ruleForm.doctorName = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"Kategoriyasi\",\n      prop: \"category\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_select_v2, {\n        modelValue: $setup.ruleForm.category,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.ruleForm.category = $event),\n        placeholder: \"Activity count\",\n        options: $setup.options\n      }, null, 8 /* PROPS */, [\"modelValue\", \"options\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"Activity time\",\n      required: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_time_picker, {\n        modelValue: $setup.ruleForm.workTime,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.ruleForm.workTime = $event),\n        \"is-range\": \"\",\n        \"range-separator\": \"To\",\n        \"start-placeholder\": \"Start time\",\n        \"end-placeholder\": \"End time\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: _cache[3] || (_cache[3] = $event => $setup.submitForm($setup.ruleFormRef))\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" Create \")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_button, {\n        onClick: _cache[4] || (_cache[4] = $event => $setup.resetForm($setup.ruleFormRef))\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Reset\")]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\", \"size\"]);\n}","map":{"version":3,"names":["_createBlock","_component_el_form","ref","model","$setup","ruleForm","rules","class","size","formSize","_createVNode","_component_el_form_item","label","prop","_component_el_input","doctorName","$event","_component_el_select_v2","category","placeholder","options","required","_component_el_time_picker","workTime","_component_el_button","type","onClick","_cache","submitForm","ruleFormRef","resetForm"],"sources":["/Users/air/Documents/crm/src/views/doctors/DoctorForm.vue"],"sourcesContent":["<template>\n    <el-form\n    ref=\"ruleFormRef\"\n    :model=\"ruleForm\"\n    :rules=\"rules\"\n    label-width=\"120px\"\n    class=\"demo-ruleForm\"\n    :size=\"formSize\"\n    status-icon\n    >\n    <el-form-item label=\"Doktor ismi\" prop=\"doctorName\">\n        <el-input v-model=\"ruleForm.doctorName\" />\n    </el-form-item>\n    <el-form-item label=\"Kategoriyasi\" prop=\"category\">\n        <el-select-v2\n        v-model=\"ruleForm.category\"\n        placeholder=\"Activity count\"\n        :options=\"options\"\n        />\n    </el-form-item>\n    <el-form-item label=\"Activity time\" required>\n        <el-time-picker\n        v-model=\"ruleForm.workTime\"\n        is-range\n        range-separator=\"To\"\n        start-placeholder=\"Start time\"\n        end-placeholder=\"End time\"\n        />\n    </el-form-item>\n    <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm(ruleFormRef)\">\n            Create\n        </el-button>\n        <el-button @click=\"resetForm(ruleFormRef)\">Reset</el-button>\n    </el-form-item>\n</el-form>\n</template>\n\n<script setup>\nimport { reactive, ref } from 'vue'\n\nconst formSize = ref('default')\nconst ruleFormRef = ref()\nconst ruleForm = reactive({\n    doctorName: '',\n    workTime: '',\n    surname: '',\n    category: '',\n    serviceCost:null\n})\n\nconst rules = reactive({\n    doctorName: [\n    { required: true, message: 'Iltimos ism kiriting', trigger: 'blur' },\n    ],\n    surname: [\n    {\n        required: true,\n        message: 'Iltimos familiya kiriting',\n        trigger: 'blur',\n    },\n    ],\n    category: [\n    {\n        required: true,\n        message: 'Iltimos kategoriya kiriting',\n        trigger: 'blur',\n    },\n    ],\n    serviceCost: [\n    {\n        required: true,\n        message: 'Iltimos xizmat narxini kiriting',\n        trigger: 'blur',\n    },\n    ],\n    workTime: [\n    {\n        type: 'date',\n        required: true,\n        message: 'Iltimos ishlash vaqtini kiriting',\n        trigger: 'change',\n    },\n    ]\n})\n\nconst submitForm = async (formEl) => {\n    if (!formEl) return\n    await formEl.validate((valid, fields) => {\n        if (valid) {\n            console.log('submit!')\n        } else {\n            console.log('error submit!', fields)\n        }\n    })\n}\n\nconst resetForm = (formEl) => {\n    if (!formEl) return\n    formEl.resetFields()\n}\n\nconst options = Array.from({ length: 10000 }).map((_, idx) => ({\n    value: `${idx + 1}`,\n    label: `${idx + 1}`,\n}))\n</script>"],"mappings":";;;;;;;;uBACIA,YAAA,CAkCMC,kBAAA;IAjCNC,GAAG,EAAC,aAAa;IAChBC,KAAK,EAAEC,MAAA,CAAAC,QAAQ;IACfC,KAAK,EAAEF,MAAA,CAAAE,KAAK;IACb,aAAW,EAAC,OAAO;IACnBC,KAAK,EAAC,eAAe;IACpBC,IAAI,EAAEJ,MAAA,CAAAK,QAAQ;IACf,aAAW,EAAX;;sBAEA,MAEe,CAFfC,YAAA,CAEeC,uBAAA;MAFDC,KAAK,EAAC,aAAa;MAACC,IAAI,EAAC;;wBACnC,MAA0C,CAA1CH,YAAA,CAA0CI,mBAAA;oBAAvBV,MAAA,CAAAC,QAAQ,CAACU,UAAU;mEAAnBX,MAAA,CAAAC,QAAQ,CAACU,UAAU,GAAAC,MAAA;;;QAE1CN,YAAA,CAMeC,uBAAA;MANDC,KAAK,EAAC,cAAc;MAACC,IAAI,EAAC;;wBACpC,MAIE,CAJFH,YAAA,CAIEO,uBAAA;oBAHOb,MAAA,CAAAC,QAAQ,CAACa,QAAQ;mEAAjBd,MAAA,CAAAC,QAAQ,CAACa,QAAQ,GAAAF,MAAA;QAC1BG,WAAW,EAAC,gBAAgB;QAC3BC,OAAO,EAAEhB,MAAA,CAAAgB;;;QAGdV,YAAA,CAQeC,uBAAA;MARDC,KAAK,EAAC,eAAe;MAACS,QAAQ,EAAR;;wBAChC,MAME,CANFX,YAAA,CAMEY,yBAAA;oBALOlB,MAAA,CAAAC,QAAQ,CAACkB,QAAQ;mEAAjBnB,MAAA,CAAAC,QAAQ,CAACkB,QAAQ,GAAAP,MAAA;QAC1B,UAAQ,EAAR,EAAQ;QACR,iBAAe,EAAC,IAAI;QACpB,mBAAiB,EAAC,YAAY;QAC9B,iBAAe,EAAC;;;QAGpBN,YAAA,CAKeC,uBAAA;wBAJX,MAEY,CAFZD,YAAA,CAEYc,oBAAA;QAFDC,IAAI,EAAC,SAAS;QAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAX,MAAA,IAAEZ,MAAA,CAAAwB,UAAU,CAACxB,MAAA,CAAAyB,WAAW;;0BAAG,MAE3D,C,iBAF2D,UAE3D,E;;UACAnB,YAAA,CAA4Dc,oBAAA;QAAhDE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAX,MAAA,IAAEZ,MAAA,CAAA0B,SAAS,CAAC1B,MAAA,CAAAyB,WAAW;;0BAAG,MAAK,C,iBAAL,OAAK,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}